

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 01 09:29:22 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F47Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Generated 09/02/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F47Q43 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76                           	psect	idataBANK5
    77   003B36                     __pidataBANK5:
    78                           	callstack 0
    79                           
    80                           ;initializer for _uc
    81   003B36  FFFF               	dw	65535
    82   000000                     _CLCnPOL	set	215
    83   000000                     _CLCnGLS1	set	221
    84   000000                     _CLCnGLS0	set	220
    85   000000                     _CLCnSEL3	set	219
    86   000000                     _CLCnSEL2	set	218
    87   000000                     _CLCnSEL1	set	217
    88   000000                     _CLCnSEL0	set	216
    89   000000                     _NCO1CLK	set	1095
    90   000000                     _TRISB	set	1223
    91   000000                     _TRISD	set	1225
    92   000000                     _TRISC	set	1224
    93   000000                     _CLCnGLS2	set	222
    94   000000                     _CLCnCON	set	214
    95   000000                     _CLCnGLS3	set	223
    96   000000                     _NCO1PFM	set	8752
    97   000000                     _U3TXEN	set	5773
    98   000000                     _U3RXEN	set	5772
    99   000000                     _U3RXBE	set	5809
   100   000000                     _ANSELA6	set	8198
   101   000000                     _ANSELA7	set	8199
   102   000000                     _NCO1EN	set	8759
   103   000000                     _NCO1OUT	set	8757
   104   000000                     _ANSELA2	set	8194
   105   000000                     _ANSELA4	set	8196
   106   000000                     _ANSELA1	set	8193
   107   000000                     _ANSELA3	set	8195
   108   000000                     _ANSELE1	set	8449
   109   000000                     _RA0	set	9840
   110   000000                     _TRISA6	set	9782
   111   000000                     _LATA6	set	9718
   112   000000                     _TRISA7	set	9783
   113   000000                     _TRISA2	set	9778
   114   000000                     _TRISA4	set	9780
   115   000000                     _LATA4	set	9716
   116   000000                     _TRISA1	set	9777
   117   000000                     _TRISA3	set	9779
   118   000000                     _TRISE1	set	9809
   119   000000                     _LATE2	set	9746
   120   000000                     _RD5	set	9869
   121   000000                     _LATE1	set	9745
   122   000000                     _OSCFRQ	set	177
   123   000000                     _CLCSELECT	set	213
   124   000000                     _U3RXB	set	711
   125   000000                     _U3TXB	set	713
   126   000000                     _U3TXBE	set	5813
   127   000000                     _LATC	set	1216
   128   000000                     _ANSELA0	set	8192
   129   000000                     _ANSELE2	set	8450
   130   000000                     _LATE0	set	9744
   131   000000                     _U3CON0	set	721
   132   000000                     _PORTB	set	1231
   133   000000                     _PORTC	set	1232
   134   000000                     _TRISA0	set	9776
   135   000000                     _TRISE2	set	9810
   136   000000                     _PORTD	set	1233
   137   000000                     _RA3PPS	set	516
   138   000000                     _NCO1INC	set	1091
   139   000000                     _LATA3	set	9715
   140   000000                     _RA1	set	9841
   141   000000                     _ANSELB	set	1032
   142   000000                     _ANSELC	set	1040
   143   000000                     _WPUA0	set	8200
   144   000000                     _RA6PPS	set	519
   145   000000                     _U3RXPPS	set	630
   146   000000                     _WPUC	set	1041
   147   000000                     _ANSELD	set	1048
   148   000000                     _WPUD	set	1049
   149   000000                     _WPUB	set	1033
   150   000000                     _U3BRG	set	724
   151   000000                     _U3ON	set	5783
   152   000000                     _CLCIN0PPS	set	609
   153   000000                     _CLCIN6PPS	set	615
   154   000000                     _CLCIN3PPS	set	612
   155   000000                     _CLCIN2PPS	set	611
   156   000000                     _CLCIN1PPS	set	610
   157   000000                     _CLCIN7PPS	set	616
   158                           
   159                           	psect	smallconst
   160   002600                     __psmallconst:
   161                           	callstack 0
   162   002600  00                 	db	0
   163   002601                     STR_14:
   164   002601  25                 	db	37
   165   002602  64                 	db	100	;'d'
   166   002603  3A                 	db	58	;':'
   167   002604  20                 	db	32
   168   002605  66                 	db	102	;'f'
   169   002606  61                 	db	97	;'a'
   170   002607  69                 	db	105	;'i'
   171   002608  6C                 	db	108	;'l'
   172   002609  20                 	db	32
   173   00260A  61                 	db	97	;'a'
   174   00260B  74                 	db	116	;'t'
   175   00260C  20                 	db	32
   176   00260D  25                 	db	37
   177   00260E  30                 	db	48	;'0'
   178   00260F  34                 	db	52	;'4'
   179   002610  58                 	db	88	;'X'
   180   002611  0A                 	db	10
   181   002612  00                 	db	0
   182   002613  7C                 	db	124
   183   002614  25                 	db	37
   184   002615  30                 	db	48	;'0'
   185   002616  35                 	db	53	;'5'
   186   002617  6C                 	db	108	;'l'
   187   002618  58                 	db	88	;'X'
   188   002619  20                 	db	32
   189   00261A  25                 	db	37
   190   00261B  30                 	db	48	;'0'
   191   00261C  32                 	db	50	;'2'
   192   00261D  58                 	db	88	;'X'
   193   00261E  20                 	db	32
   194   00261F  25                 	db	37
   195   002620  63                 	db	99	;'c'
   196   002621  20                 	db	32
   197   002622  00                 	db	0
   198   002623  20                 	db	32
   199   002624  4F                 	db	79	;'O'
   200   002625  55                 	db	85	;'U'
   201   002626  54                 	db	84	;'T'
   202   002627  3A                 	db	58	;':'
   203   002628  20                 	db	32
   204   002629  25                 	db	37
   205   00262A  30                 	db	48	;'0'
   206   00262B  32                 	db	50	;'2'
   207   00262C  78                 	db	120	;'x'
   208   00262D  00                 	db	0
   209   00262E  61                 	db	97	;'a'
   210   00262F  6C                 	db	108	;'l'
   211   002630  6C                 	db	108	;'l'
   212   002631  20                 	db	32
   213   002632  6F                 	db	111	;'o'
   214   002633  6B                 	db	107	;'k'
   215   002634  0A                 	db	10
   216   002635  00                 	db	0
   217   002636                     STR_9:
   218   002636  25                 	db	37
   219   002637  25                 	db	37
   220   002638  25                 	db	37
   221   002639  30                 	db	48	;'0'
   222   00263A  34                 	db	52	;'4'
   223   00263B  58                 	db	88	;'X'
   224   00263C  20                 	db	32
   225   00263D  00                 	db	0
   226   00263E  20                 	db	32
   227   00263F  49                 	db	73	;'I'
   228   002640  4E                 	db	78	;'N'
   229   002641  3E                 	db	62	;'>'
   230   002642  00                 	db	0
   231   002643                     STR_8:
   232   002643  73                 	db	115	;'s'
   233   002644  73                 	db	115	;'s'
   234   002645  20                 	db	32
   235   002646  00                 	db	0
   236   002647                     STR_2:
   237   002647  2D                 	db	45
   238   002648  3E                 	db	62	;'>'
   239   002649  0A                 	db	10
   240   00264A  00                 	db	0
   241   00264B                     STR_4:
   242   00264B  25                 	db	37
   243   00264C  58                 	db	88	;'X'
   244   00264D  00                 	db	0
   245   00264E                     STR_1:
   246   00264E  3B                 	db	59	;';'
   247   00264F  00                 	db	0
   248   002650  00                 	db	0	; dummy byte at the end
   249   000000                     
   250                           ; #config settings
   251                           
   252                           	psect	cinit
   253   003A12                     __pcinit:
   254                           	callstack 0
   255   003A12                     start_initialization:
   256                           	callstack 0
   257   003A12                     __initialization:
   258                           	callstack 0
   259                           
   260                           ; Initialize objects allocated to BANK5 (2 bytes)
   261                           ; load TBLPTR registers with __pidataBANK5
   262   003A12  0E36               	movlw	low __pidataBANK5
   263   003A14  6EF6               	movwf	tblptrl,c
   264   003A16  0E3B               	movlw	high __pidataBANK5
   265   003A18  6EF7               	movwf	tblptrh,c
   266   003A1A  0E00               	movlw	low (__pidataBANK5 shr (0+16))
   267   003A1C  6EF8               	movwf	tblptru,c
   268   003A1E  0009               	tblrd		*+	;fetch initializer
   269   003A20  C4F5 F5A4          	movff	tablat,__pdataBANK5
   270   003A24  0009               	tblrd		*+	;fetch initializer
   271   003A26  C4F5 F5A5          	movff	tablat,__pdataBANK5+1
   272                           
   273                           ; Clear objects allocated to BIGRAM (4096 bytes)
   274   003A2A  EE05  F100         	lfsr	0,__pbssBIGRAM
   275   003A2E  EE14 F000          	lfsr	1,4096
   276   003A32                     clear_0:
   277   003A32  6AEE               	clrf	postinc0,c
   278   003A34  50E5               	movf	postdec1,w,c
   279   003A36  50E1               	movf	fsr1l,w,c
   280   003A38  E1FC               	bnz	clear_0
   281   003A3A  50E2               	movf	fsr1h,w,c
   282   003A3C  E1FA               	bnz	clear_0
   283                           
   284                           ; Clear objects allocated to BANK5 (28 bytes)
   285   003A3E  EE01  F188         	lfsr	0,__pbssBANK5
   286   003A42  0E1C               	movlw	28
   287   003A44                     clear_1:
   288   003A44  6AEE               	clrf	postinc0,c
   289   003A46  06E8               	decf	wreg,f,c
   290   003A48  E1FD               	bnz	clear_1
   291   003A4A                     end_of_initialization:
   292                           	callstack 0
   293   003A4A                     __end_of__initialization:
   294                           	callstack 0
   295   003A4A  0100               	movlb	0
   296   003A4C  EF2C  F017         	goto	_main	;jump to C main() function
   297                           
   298                           	psect	bssBANK5
   299   000588                     __pbssBANK5:
   300                           	callstack 0
   301   000588                     _xfunc_input:
   302                           	callstack 0
   303   000588                     	ds	3
   304   00058B                     _xfunc_output:
   305                           	callstack 0
   306   00058B                     	ds	3
   307   00058E                     	ds	2
   308   000590                     getchr@count:
   309                           	callstack 0
   310   000590                     	ds	2
   311   000592                     _rest_num:
   312                           	callstack 0
   313   000592                     	ds	2
   314   000594                     _strptr:
   315                           	callstack 0
   316   000594                     	ds	2
   317   000596                     _ss_flag:
   318                           	callstack 0
   319   000596                     	ds	2
   320   000598                     _break_address:
   321                           	callstack 0
   322   000598                     	ds	2
   323   00059A                     _ab:
   324                           	callstack 0
   325   00059A                     	ds	2
   326   00059C                     monitor@buf:
   327                           	callstack 0
   328   00059C                     	ds	8
   329                           
   330                           	psect	dataBANK5
   331   0005A4                     __pdataBANK5:
   332                           	callstack 0
   333   0005A4                     _uc:
   334                           	callstack 0
   335   0005A4                     	ds	2
   336                           
   337                           	psect	bssBIGRAM
   338   001500                     __pbssBIGRAM:
   339                           	callstack 0
   340   001500                     _ram:
   341                           	callstack 0
   342   001500                     	ds	4096
   343                           
   344                           	psect	cstackBANK5
   345   000560                     __pcstackBANK5:
   346                           	callstack 0
   347   000560                     xprintf@arp:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x0
   351   000560                     	ds	2
   352   000562                     ??_clear_all:
   353                           
   354                           ; 1 bytes @ 0x2
   355   000562                     	ds	2
   356   000564                     clear_all@i:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x4
   360   000564                     	ds	2
   361   000566                     clear_all@p:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x6
   365   000566                     	ds	2
   366   000568                     ??_manualboot:
   367                           
   368                           ; 1 bytes @ 0x8
   369   000568                     	ds	2
   370   00056A                     manualboot@end:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xA
   374   00056A                     	ds	2
   375   00056C                     _manualboot$362:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0xC
   379   00056C                     	ds	1
   380   00056D                     manualboot@cc:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0xD
   384   00056D                     	ds	2
   385   00056F                     manualboot@addr_flag:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0xF
   389   00056F                     	ds	2
   390   000571                     manualboot@max:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x11
   394   000571                     	ds	2
   395   000573                     manualboot@min:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x13
   399   000573                     	ds	2
   400   000575                     manualboot@d:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x15
   404   000575                     	ds	2
   405   000577                     manualboot@n:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x17
   409   000577                     	ds	2
   410   000579                     manualboot@start:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x19
   414   000579                     	ds	2
   415   00057B                     manualboot@addr:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x1B
   419   00057B                     	ds	2
   420   00057D                     manualboot@c:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x1D
   424   00057D                     	ds	2
   425   00057F                     ??_main:
   426                           
   427                           ; 1 bytes @ 0x1F
   428   00057F                     	ds	1
   429   000580                     main@addr:
   430                           	callstack 0
   431                           
   432                           ; 4 bytes @ 0x20
   433   000580                     	ds	4
   434   000584                     main@i:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x24
   438   000584                     	ds	2
   439   000586                     main@i_169:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x26
   443   000586                     	ds	2
   444                           
   445                           	psect	cstackCOMRAM
   446   000501                     __pcstackCOMRAM:
   447                           	callstack 0
   448   000501                     ?_strlen:
   449                           	callstack 0
   450   000501                     ?_getchx:
   451                           	callstack 0
   452   000501                     ?_get_addr:
   453                           	callstack 0
   454   000501                     ?_to_hex:
   455                           	callstack 0
   456   000501                     ?___wmul:
   457                           	callstack 0
   458   000501                     ?___lldiv:
   459                           	callstack 0
   460   000501                     ?___llmod:
   461                           	callstack 0
   462   000501                     putchx@c:
   463                           	callstack 0
   464   000501                     peek_ram@addr:
   465                           	callstack 0
   466   000501                     poke_ram@addr:
   467                           	callstack 0
   468   000501                     ungetchr@c:
   469                           	callstack 0
   470   000501                     ___wmul@multiplier:
   471                           	callstack 0
   472   000501                     strlen@s:
   473                           	callstack 0
   474   000501                     ___lldiv@dividend:
   475                           	callstack 0
   476   000501                     ___llmod@dividend:
   477                           	callstack 0
   478                           
   479                           ; 4 bytes @ 0x0
   480   000501                     	ds	2
   481   000503                     ??_get_addr:
   482   000503                     ??_peek_ram:
   483   000503                     ?_getchr:
   484                           	callstack 0
   485   000503                     poke_ram@c:
   486                           	callstack 0
   487   000503                     to_hex@c:
   488                           	callstack 0
   489   000503                     ___wmul@multiplicand:
   490                           	callstack 0
   491   000503                     strlen@a:
   492                           	callstack 0
   493   000503                     xfputc@func:
   494                           	callstack 0
   495                           
   496                           ; 3 bytes @ 0x2
   497   000503                     	ds	1
   498   000504                     ??_poke_ram:
   499                           
   500                           ; 1 bytes @ 0x3
   501   000504                     	ds	1
   502   000505                     ??_getchr:
   503   000505                     ___wmul@product:
   504                           	callstack 0
   505   000505                     ___lldiv@divisor:
   506                           	callstack 0
   507   000505                     ___llmod@divisor:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x4
   511   000505                     	ds	1
   512   000506                     xfputc@chr:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x5
   516   000506                     	ds	1
   517   000507                     getchr@c:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x6
   521   000507                     	ds	1
   522   000508                     
   523                           ; 1 bytes @ 0x7
   524   000508                     	ds	1
   525   000509                     ___llmod@counter:
   526                           	callstack 0
   527   000509                     ___lldiv@quotient:
   528                           	callstack 0
   529                           
   530                           ; 4 bytes @ 0x8
   531   000509                     	ds	4
   532   00050D                     ___lldiv@counter:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0xC
   536   00050D                     	ds	1
   537   00050E                     xvfprintf@func:
   538                           	callstack 0
   539                           
   540                           ; 3 bytes @ 0xD
   541   00050E                     	ds	3
   542   000511                     xvfprintf@fmt:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x10
   546   000511                     	ds	2
   547   000513                     xvfprintf@arp:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x12
   551   000513                     	ds	2
   552   000515                     ??_xvfprintf:
   553                           
   554                           ; 1 bytes @ 0x14
   555   000515                     	ds	4
   556   000519                     xvfprintf@str:
   557                           	callstack 0
   558                           
   559                           ; 32 bytes @ 0x18
   560   000519                     	ds	32
   561   000539                     _xvfprintf$275:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x38
   565   000539                     	ds	2
   566   00053B                     xvfprintf@d:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x3A
   570   00053B                     	ds	1
   571   00053C                     xvfprintf@pad:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x3B
   575   00053C                     	ds	1
   576   00053D                     xvfprintf@r:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x3C
   580   00053D                     	ds	2
   581   00053F                     xvfprintf@uv:
   582                           	callstack 0
   583                           
   584                           ; 4 bytes @ 0x3E
   585   00053F                     	ds	4
   586   000543                     xvfprintf@n:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x42
   590   000543                     	ds	2
   591   000545                     xvfprintf@v:
   592                           	callstack 0
   593                           
   594                           ; 4 bytes @ 0x44
   595   000545                     	ds	4
   596   000549                     xvfprintf@p:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x48
   600   000549                     	ds	2
   601   00054B                     xvfprintf@f:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x4A
   605   00054B                     	ds	2
   606   00054D                     xvfprintf@w:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x4C
   610   00054D                     	ds	2
   611   00054F                     xvfprintf@prec:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x4E
   615   00054F                     	ds	2
   616   000551                     xvfprintf@j:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x50
   620   000551                     	ds	2
   621   000553                     xvfprintf@i:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x52
   625   000553                     	ds	2
   626   000555                     xvfprintf@c:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0x54
   630   000555                     	ds	1
   631   000556                     ?_xprintf:
   632                           	callstack 0
   633   000556                     xprintf@fmt:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x55
   637   000556                     	ds	10
   638   000560                     
   639                           ; 1 bytes @ 0x5F
   640 ;;
   641 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   642 ;;
   643 ;; *************** function _main *****************
   644 ;; Defined at:
   645 ;;		line 205 in file "main.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;  rw_flag         2    0        int 
   650 ;;  i               2   38[BANK5 ] int 
   651 ;;  i               2   36[BANK5 ] int 
   652 ;;  addr            4   32[BANK5 ] unsigned long 
   653 ;;  count           2    0        int 
   654 ;;  monitor_mode    2    0        int 
   655 ;;  cc              1    0        unsigned char 
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   666 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   667 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   668 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   669 ;;Total ram usage:        9 bytes
   670 ;; Hardware stack levels required when called: 6
   671 ;; This function calls:
   672 ;;		_RES_off
   673 ;;		_end_boot
   674 ;;		_get_addr
   675 ;;		_init_boot
   676 ;;		_manualboot
   677 ;;		_poke_ram
   678 ;;		_toggle_Egate
   679 ;;		_xprintf
   680 ;; This function is called by:
   681 ;;		Startup code after reset
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text0
   686   002E58                     __ptext0:
   687                           	callstack 0
   688   002E58                     _main:
   689                           	callstack 121
   690   002E58                     
   691                           ;main.c: 207:     int count;;main.c: 208:     unsigned char cc;;main.c: 209:     unsigne
      +                          d long addr;;main.c: 214:     ANSELE2 = 0;
   692   002E58  0104               	movlb	4	; () banked
   693   002E5A  9520               	bcf	32,2,b	;volatile
   694   002E5C                     
   695                           ; BSR set to: 4
   696                           ;main.c: 215:     TRISE2 = 0;
   697   002E5C  94CA               	bcf	1226,2,c	;volatile
   698   002E5E                     
   699                           ; BSR set to: 4
   700                           ;main.c: 216:     LATE2 = 0;
   701   002E5E  94C2               	bcf	1218,2,c	;volatile
   702   002E60                     
   703                           ; BSR set to: 4
   704   002E60  74C2               	btg	1218,2,c	;volatile
   705   002E62                     
   706                           ; BSR set to: 4
   707   002E62  74C2               	btg	1218,2,c	;volatile
   708   002E64                     
   709                           ; BSR set to: 4
   710                           ;main.c: 220:     OSCFRQ = 0x08;
   711   002E64  0E08               	movlw	8
   712   002E66  0100               	movlb	0	; () banked
   713   002E68  6FB1               	movwf	177,b	;volatile
   714   002E6A                     
   715                           ; BSR set to: 0
   716                           ;main.c: 223:     ANSELE1 = 0;
   717   002E6A  0104               	movlb	4	; () banked
   718   002E6C  9320               	bcf	32,1,b	;volatile
   719   002E6E                     
   720                           ; BSR set to: 4
   721                           ;main.c: 224:     LATE1 = 0;
   722   002E6E  92C2               	bcf	1218,1,c	;volatile
   723   002E70                     
   724                           ; BSR set to: 4
   725                           ;main.c: 225:     TRISE1 = 0;
   726   002E70  92CA               	bcf	1226,1,c	;volatile
   727   002E72                     
   728                           ; BSR set to: 4
   729                           ;main.c: 228:     ANSELA0 = 0;
   730   002E72  9100               	bcf	0,0,b	;volatile
   731   002E74                     
   732                           ; BSR set to: 4
   733                           ;main.c: 229:     WPUA0 = 1;
   734   002E74  8101               	bsf	1,0,b	;volatile
   735   002E76                     
   736                           ; BSR set to: 4
   737                           ;main.c: 230:     TRISA0 = 1;
   738   002E76  80C6               	bsf	1222,0,c	;volatile
   739   002E78                     
   740                           ; BSR set to: 4
   741                           ;main.c: 234:     ANSELA3 = 0;
   742   002E78  9700               	bcf	0,3,b	;volatile
   743   002E7A                     
   744                           ; BSR set to: 4
   745                           ;main.c: 235:     LATA3 = 0;
   746   002E7A  96BE               	bcf	1214,3,c	;volatile
   747   002E7C                     
   748                           ; BSR set to: 4
   749                           ;main.c: 236:     TRISA3 = 0;
   750   002E7C  96C6               	bcf	1222,3,c	;volatile
   751                           
   752                           ;main.c: 237:     RA3PPS = 0;
   753   002E7E  0E00               	movlw	0
   754   002E80  0102               	movlb	2	; () banked
   755   002E82  6F04               	movwf	4,b	;volatile
   756                           
   757                           ;main.c: 239:     for (int i = 0; i < 38; ++i) {
   758   002E84  0E00               	movlw	0
   759   002E86  0105               	movlb	5	; () banked
   760   002E88  6F85               	movwf	(main@i+1)& (0+255),b
   761   002E8A  0E00               	movlw	0
   762   002E8C  6F84               	movwf	main@i& (0+255),b
   763   002E8E                     l236:
   764                           
   765                           ; BSR set to: 5
   766                           ;main.c: 240:         LATA3 ^= 1;
   767   002E8E  76BE               	btg	1214,3,c	;volatile
   768   002E90                     
   769                           ; BSR set to: 5
   770                           ;main.c: 241:     }
   771   002E90  4B84               	infsnz	main@i& (0+255),f,b
   772   002E92  2B85               	incf	(main@i+1)& (0+255),f,b
   773   002E94                     
   774                           ; BSR set to: 5
   775   002E94  BF85               	btfsc	(main@i+1)& (0+255),7,b
   776   002E96  EF56  F017         	goto	u2601
   777   002E9A  5185               	movf	(main@i+1)& (0+255),w,b
   778   002E9C  E109               	bnz	u2600
   779   002E9E  0E26               	movlw	38
   780   002EA0  5D84               	subwf	main@i& (0+255),w,b
   781   002EA2  A0D8               	btfss	status,0,c
   782   002EA4  EF56  F017         	goto	u2601
   783   002EA8  EF58  F017         	goto	u2600
   784   002EAC                     u2601:
   785   002EAC  EF47  F017         	goto	l236
   786   002EB0                     u2600:
   787   002EB0                     
   788                           ; BSR set to: 5
   789                           ;main.c: 245:     ANSELC = 0;
   790   002EB0  0E00               	movlw	0
   791   002EB2  0104               	movlb	4	; () banked
   792   002EB4  6F10               	movwf	16,b	;volatile
   793                           
   794                           ;main.c: 246:     TRISC = 0;
   795   002EB6  0E00               	movlw	0
   796   002EB8  6EC8               	movwf	200,c	;volatile
   797                           
   798                           ;main.c: 247:     LATC = 0x12;
   799   002EBA  0E12               	movlw	18
   800   002EBC  6EC0               	movwf	192,c	;volatile
   801   002EBE                     
   802                           ; BSR set to: 4
   803                           ;main.c: 249:     LATE1 = 1;
   804   002EBE  82C2               	bsf	1218,1,c	;volatile
   805                           
   806                           ;main.c: 250:     for (int i = 0; i < 256; ++i) {
   807   002EC0  0E00               	movlw	0
   808   002EC2  0105               	movlb	5	; () banked
   809   002EC4  6F87               	movwf	(main@i_169+1)& (0+255),b
   810   002EC6  0E00               	movlw	0
   811   002EC8  6F86               	movwf	main@i_169& (0+255),b
   812   002ECA                     l238:
   813                           
   814                           ; BSR set to: 5
   815                           ;main.c: 251:         LATA3 ^= 1;
   816   002ECA  76BE               	btg	1214,3,c	;volatile
   817   002ECC                     
   818                           ; BSR set to: 5
   819                           ;main.c: 252:     }
   820   002ECC  4B86               	infsnz	main@i_169& (0+255),f,b
   821   002ECE  2B87               	incf	(main@i_169+1)& (0+255),f,b
   822   002ED0                     
   823                           ; BSR set to: 5
   824   002ED0  BF87               	btfsc	(main@i_169+1)& (0+255),7,b
   825   002ED2  EF71  F017         	goto	u2611
   826   002ED6  0587               	decf	(main@i_169+1)& (0+255),w,b
   827   002ED8  A0D8               	btfss	status,0,c
   828   002EDA  EF71  F017         	goto	u2611
   829   002EDE  EF73  F017         	goto	u2610
   830   002EE2                     u2611:
   831   002EE2  EF65  F017         	goto	l238
   832   002EE6                     u2610:
   833   002EE6                     
   834                           ; BSR set to: 5
   835                           ;main.c: 256:     _delay((unsigned long)((5)*(64000000UL/4000.0)));
   836   002EE6  0E68               	movlw	104
   837   002EE8  0105               	movlb	5	; () banked
   838   002EEA  6F7F               	movwf	??_main& (0+255),b
   839   002EEC  0EE4               	movlw	228
   840   002EEE                     u2957:
   841   002EEE  2EE8               	decfsz	wreg,f,c
   842   002EF0  D7FE               	bra	u2957
   843   002EF2  2F7F               	decfsz	??_main& (0+255),f,b
   844   002EF4  D7FC               	bra	u2957
   845   002EF6  F000               	nop	
   846   002EF8  74C2               	btg	1218,2,c	;volatile
   847   002EFA  74C2               	btg	1218,2,c	;volatile
   848   002EFC                     
   849                           ;main.c: 262:     xfunc_output = (void(*)(int))(putchx);
   850   002EFC  0EF4               	movlw	low _putchx
   851   002EFE  0105               	movlb	5	; () banked
   852   002F00  6F8B               	movwf	_xfunc_output& (0+255),b
   853   002F02  0E3A               	movlw	high _putchx
   854   002F04  6F8C               	movwf	(_xfunc_output+1)& (0+255),b
   855   002F06  0E00               	movlw	low (_putchx shr (0+16))
   856   002F08  6F8D               	movwf	(_xfunc_output+2)& (0+255),b
   857   002F0A                     
   858                           ; BSR set to: 5
   859                           ;main.c: 263:     xfunc_input = (int(*)(void))(getchx);
   860   002F0A  0EDC               	movlw	low _getchx
   861   002F0C  6F88               	movwf	_xfunc_input& (0+255),b
   862   002F0E  0E3A               	movlw	high _getchx
   863   002F10  6F89               	movwf	(_xfunc_input+1)& (0+255),b
   864   002F12  0E00               	movlw	low (_getchx shr (0+16))
   865   002F14  6F8A               	movwf	(_xfunc_input+2)& (0+255),b
   866   002F16                     
   867                           ; BSR set to: 5
   868                           ;main.c: 267:     CLCSELECT = 0;
   869   002F16  0E00               	movlw	0
   870   002F18  0100               	movlb	0	; () banked
   871   002F1A  6FD5               	movwf	213,b	;volatile
   872   002F1C                     
   873                           ; BSR set to: 0
   874                           ;main.c: 268:     CLCnCON &= ~0x80;
   875   002F1C  9FD6               	bcf	214,7,b	;volatile
   876   002F1E                     
   877                           ; BSR set to: 0
   878                           ;main.c: 269:     CLCSELECT = 1;
   879   002F1E  0E01               	movlw	1
   880   002F20  6FD5               	movwf	213,b	;volatile
   881   002F22                     
   882                           ; BSR set to: 0
   883                           ;main.c: 270:     CLCnCON &= ~0x80;
   884   002F22  9FD6               	bcf	214,7,b	;volatile
   885   002F24                     
   886                           ; BSR set to: 0
   887                           ;main.c: 271:     CLCSELECT = 2;
   888   002F24  0E02               	movlw	2
   889   002F26  6FD5               	movwf	213,b	;volatile
   890   002F28                     
   891                           ; BSR set to: 0
   892                           ;main.c: 272:     CLCnCON &= ~0x80;
   893   002F28  9FD6               	bcf	214,7,b	;volatile
   894   002F2A                     
   895                           ; BSR set to: 0
   896                           ;main.c: 275:     ANSELD = 0x00;
   897   002F2A  0E00               	movlw	0
   898   002F2C  0104               	movlb	4	; () banked
   899   002F2E  6F18               	movwf	24,b	;volatile
   900   002F30                     
   901                           ; BSR set to: 4
   902                           ;main.c: 276:     WPUD = 0xff;
   903   002F30  6919               	setf	25,b	;volatile
   904   002F32                     
   905                           ; BSR set to: 4
   906                           ;main.c: 277:     TRISD |= 0xff;
   907   002F32  68C9               	setf	201,c	;volatile
   908   002F34                     
   909                           ; BSR set to: 4
   910                           ;main.c: 280:     ANSELB = 0x00;
   911   002F34  0E00               	movlw	0
   912   002F36  6F08               	movwf	8,b	;volatile
   913   002F38                     
   914                           ; BSR set to: 4
   915                           ;main.c: 281:     WPUB = 0xff;
   916   002F38  6909               	setf	9,b	;volatile
   917   002F3A                     
   918                           ; BSR set to: 4
   919                           ;main.c: 282:     TRISB = 0xff;
   920   002F3A  68C7               	setf	199,c	;volatile
   921   002F3C                     
   922                           ; BSR set to: 4
   923                           ;main.c: 285:     ANSELC = 0x00;
   924   002F3C  0E00               	movlw	0
   925   002F3E  6F10               	movwf	16,b	;volatile
   926   002F40                     
   927                           ; BSR set to: 4
   928                           ;main.c: 286:     WPUC = 0xff;
   929   002F40  6911               	setf	17,b	;volatile
   930   002F42                     
   931                           ; BSR set to: 4
   932                           ;main.c: 287:     TRISC = 0xff;
   933   002F42  68C8               	setf	200,c	;volatile
   934   002F44                     
   935                           ; BSR set to: 4
   936                           ;main.c: 291:     ANSELA1 = 0;
   937   002F44  9300               	bcf	0,1,b	;volatile
   938   002F46                     
   939                           ; BSR set to: 4
   940                           ;main.c: 292:     TRISA1 = 1;
   941   002F46  82C6               	bsf	1222,1,c	;volatile
   942                           
   943                           ;main.c: 295:     while (RA1) {
   944   002F48  EFA8  F017         	goto	l244
   945   002F4C                     l245:
   946                           
   947                           ;main.c: 296:         LATA3 ^= 1;
   948   002F4C  76BE               	btg	1214,3,c	;volatile
   949                           
   950                           ;main.c: 297:         LATA3 ^= 1;
   951   002F4E  76BE               	btg	1214,3,c	;volatile
   952   002F50                     l244:
   953                           
   954                           ;main.c: 295:     while (RA1) {
   955   002F50  B2CE               	btfsc	1230,1,c	;volatile
   956   002F52  EFAD  F017         	goto	u2621
   957   002F56  EFAF  F017         	goto	u2620
   958   002F5A                     u2621:
   959   002F5A  EFA6  F017         	goto	l245
   960   002F5E                     u2620:
   961   002F5E  74C2               	btg	1218,2,c	;volatile
   962   002F60  74C2               	btg	1218,2,c	;volatile
   963   002F62                     
   964                           ;main.c: 303:     ANSELA0 = 0;
   965   002F62  0104               	movlb	4	; () banked
   966   002F64  9100               	bcf	0,0,b	;volatile
   967                           
   968                           ;main.c: 304:     TRISA0 = 1;
   969   002F66  80C6               	bsf	1222,0,c	;volatile
   970                           
   971                           ;main.c: 307:     ANSELA4 = 0;
   972   002F68  9900               	bcf	0,4,b	;volatile
   973                           
   974                           ;main.c: 308:     LATA4 = 1;
   975   002F6A  88BE               	bsf	1214,4,c	;volatile
   976                           
   977                           ;main.c: 309:     TRISA4 = 0;
   978   002F6C  98C6               	bcf	1222,4,c	;volatile
   979                           
   980                           ;main.c: 312:     ANSELA2 = 0;
   981   002F6E  9500               	bcf	0,2,b	;volatile
   982                           
   983                           ;main.c: 313:     TRISA2 = 1;
   984   002F70  84C6               	bsf	1222,2,c	;volatile
   985                           
   986                           ;main.c: 317:     ANSELA3 = 0;
   987   002F72  9700               	bcf	0,3,b	;volatile
   988                           
   989                           ;main.c: 318:     TRISA3 = 0;
   990   002F74  96C6               	bcf	1222,3,c	;volatile
   991   002F76                     
   992                           ; BSR set to: 4
   993                           ;main.c: 319:     NCO1INC = 8000000UL * 2 / 61;
   994   002F76  0E97               	movlw	151
   995   002F78  6F43               	movwf	67,b	;volatile
   996   002F7A  0E00               	movlw	0
   997   002F7C  6F44               	movwf	68,b	;volatile
   998   002F7E  0E04               	movlw	4
   999   002F80  6F45               	movwf	69,b	;volatile
  1000                           
  1001                           ;main.c: 320:     NCO1INC = 0x04000;
  1002   002F82  0E00               	movlw	0
  1003   002F84  6F43               	movwf	67,b	;volatile
  1004   002F86  0E40               	movlw	64
  1005   002F88  6F44               	movwf	68,b	;volatile
  1006   002F8A  0E00               	movlw	0
  1007   002F8C  6F45               	movwf	69,b	;volatile
  1008                           
  1009                           ;main.c: 321:     NCO1CLK = 0x00;
  1010   002F8E  0E00               	movlw	0
  1011   002F90  6F47               	movwf	71,b	;volatile
  1012   002F92                     
  1013                           ; BSR set to: 4
  1014                           ;main.c: 322:     NCO1PFM = 0;
  1015   002F92  9146               	bcf	70,0,b	;volatile
  1016   002F94                     
  1017                           ; BSR set to: 4
  1018                           ;main.c: 323:     NCO1OUT = 1;
  1019   002F94  8B46               	bsf	70,5,b	;volatile
  1020   002F96                     
  1021                           ; BSR set to: 4
  1022                           ;main.c: 324:     NCO1EN = 1;
  1023   002F96  8F46               	bsf	70,7,b	;volatile
  1024   002F98                     
  1025                           ; BSR set to: 4
  1026                           ;main.c: 341:     U3CON0 |= (1<<7);
  1027   002F98  0102               	movlb	2	; () banked
  1028   002F9A  8FD1               	bsf	209,7,b	;volatile
  1029   002F9C                     
  1030                           ; BSR set to: 2
  1031                           ;main.c: 342:     U3BRG = 138;
  1032   002F9C  0E00               	movlw	0
  1033   002F9E  6FD5               	movwf	213,b	;volatile
  1034   002FA0  0E8A               	movlw	138
  1035   002FA2  6FD4               	movwf	212,b	;volatile
  1036   002FA4                     
  1037                           ; BSR set to: 2
  1038                           ;main.c: 344:     U3CON0 &= 0xf0;
  1039   002FA4  0EF0               	movlw	240
  1040   002FA6  17D1               	andwf	209,f,b	;volatile
  1041   002FA8                     
  1042                           ; BSR set to: 2
  1043                           ;main.c: 345:     U3TXBE = U3RXBE = 0;
  1044   002FA8  93D6               	bcf	214,1,b	;volatile
  1045   002FAA  9BD6               	bcf	214,5,b	;volatile
  1046   002FAC                     
  1047                           ; BSR set to: 2
  1048                           ;main.c: 346:     U3RXEN = 1;
  1049   002FAC  89D1               	bsf	209,4,b	;volatile
  1050   002FAE                     
  1051                           ; BSR set to: 2
  1052                           ;main.c: 347:     U3TXEN = 1;
  1053   002FAE  8BD1               	bsf	209,5,b	;volatile
  1054   002FB0                     
  1055                           ; BSR set to: 2
  1056                           ;main.c: 350:     ANSELA7 = 0;
  1057   002FB0  0104               	movlb	4	; () banked
  1058   002FB2  9F00               	bcf	0,7,b	;volatile
  1059   002FB4                     
  1060                           ; BSR set to: 4
  1061                           ;main.c: 351:     TRISA7 = 1;
  1062   002FB4  8EC6               	bsf	1222,7,c	;volatile
  1063   002FB6                     
  1064                           ; BSR set to: 4
  1065                           ;main.c: 352:     U3RXPPS = 0x07;
  1066   002FB6  0E07               	movlw	7
  1067   002FB8  0102               	movlb	2	; () banked
  1068   002FBA  6F76               	movwf	118,b	;volatile
  1069   002FBC                     
  1070                           ; BSR set to: 2
  1071                           ;main.c: 355:     ANSELA6 = 0;
  1072   002FBC  0104               	movlb	4	; () banked
  1073   002FBE  9D00               	bcf	0,6,b	;volatile
  1074   002FC0                     
  1075                           ; BSR set to: 4
  1076                           ;main.c: 356:     LATA6 = 1;
  1077   002FC0  8CBE               	bsf	1214,6,c	;volatile
  1078   002FC2                     
  1079                           ; BSR set to: 4
  1080                           ;main.c: 357:     TRISA6 = 0;
  1081   002FC2  9CC6               	bcf	1222,6,c	;volatile
  1082   002FC4                     
  1083                           ; BSR set to: 4
  1084                           ;main.c: 358:     RA6PPS = 0x26;
  1085   002FC4  0E26               	movlw	38
  1086   002FC6  0102               	movlb	2	; () banked
  1087   002FC8  6F07               	movwf	7,b	;volatile
  1088   002FCA                     
  1089                           ; BSR set to: 2
  1090                           ;main.c: 359:     U3ON = 1;
  1091   002FCA  8FD2               	bsf	210,7,b	;volatile
  1092   002FCC                     
  1093                           ; BSR set to: 2
  1094                           ;main.c: 361:     xprintf(";");
  1095   002FCC  0E4E               	movlw	low STR_1
  1096   002FCE  6E56               	movwf	xprintf@fmt^(0+1280),c
  1097   002FD0  0E26               	movlw	high STR_1
  1098   002FD2  6E57               	movwf	(xprintf@fmt+1)^(0+1280),c
  1099   002FD4  EC28  F01D         	call	_xprintf	;wreg free
  1100   002FD8                     
  1101                           ;main.c: 384:     CLCIN0PPS = 0x00;
  1102   002FD8  0E00               	movlw	0
  1103   002FDA  0102               	movlb	2	; () banked
  1104   002FDC  6F61               	movwf	97,b	;volatile
  1105   002FDE                     
  1106                           ; BSR set to: 2
  1107                           ;main.c: 385:     CLCIN1PPS = 0x01;
  1108   002FDE  0E01               	movlw	1
  1109   002FE0  6F62               	movwf	98,b	;volatile
  1110   002FE2                     
  1111                           ; BSR set to: 2
  1112                           ;main.c: 386:     CLCIN2PPS = 0x1C;
  1113   002FE2  0E1C               	movlw	28
  1114   002FE4  6F63               	movwf	99,b	;volatile
  1115   002FE6                     
  1116                           ; BSR set to: 2
  1117                           ;main.c: 387:     CLCIN3PPS = 0x1D;
  1118   002FE6  0E1D               	movlw	29
  1119   002FE8  6F64               	movwf	100,b	;volatile
  1120   002FEA                     
  1121                           ; BSR set to: 2
  1122                           ;main.c: 388:     CLCIN6PPS = 0x1E;
  1123   002FEA  0E1E               	movlw	30
  1124   002FEC  6F67               	movwf	103,b	;volatile
  1125   002FEE                     
  1126                           ; BSR set to: 2
  1127                           ;main.c: 389:     CLCIN7PPS = 0x1F;
  1128   002FEE  0E1F               	movlw	31
  1129   002FF0  6F68               	movwf	104,b	;volatile
  1130   002FF2                     
  1131                           ; BSR set to: 2
  1132                           ;main.c: 392:     CLCSELECT = 0;
  1133   002FF2  0E00               	movlw	0
  1134   002FF4  0100               	movlb	0	; () banked
  1135   002FF6  6FD5               	movwf	213,b	;volatile
  1136   002FF8                     
  1137                           ; BSR set to: 0
  1138                           ;main.c: 393:     CLCnCON &= ~0x80;
  1139   002FF8  9FD6               	bcf	214,7,b	;volatile
  1140   002FFA                     
  1141                           ; BSR set to: 0
  1142                           ;main.c: 395:     CLCnSEL0 = 2;
  1143   002FFA  0E02               	movlw	2
  1144   002FFC  6FD8               	movwf	216,b	;volatile
  1145   002FFE                     
  1146                           ; BSR set to: 0
  1147                           ;main.c: 396:     CLCnSEL1 = 3;
  1148   002FFE  0E03               	movlw	3
  1149   003000  6FD9               	movwf	217,b	;volatile
  1150   003002                     
  1151                           ; BSR set to: 0
  1152                           ;main.c: 397:     CLCnSEL2 = 6;
  1153   003002  0E06               	movlw	6
  1154   003004  6FDA               	movwf	218,b	;volatile
  1155   003006                     
  1156                           ; BSR set to: 0
  1157                           ;main.c: 398:     CLCnSEL3 = 7;
  1158   003006  0E07               	movlw	7
  1159   003008  6FDB               	movwf	219,b	;volatile
  1160   00300A                     
  1161                           ; BSR set to: 0
  1162                           ;main.c: 400:     CLCnGLS0 = 0x02;
  1163   00300A  0E02               	movlw	2
  1164   00300C  6FDC               	movwf	220,b	;volatile
  1165   00300E                     
  1166                           ; BSR set to: 0
  1167                           ;main.c: 401:     CLCnGLS1 = 0x08;
  1168   00300E  0E08               	movlw	8
  1169   003010  6FDD               	movwf	221,b	;volatile
  1170   003012                     
  1171                           ; BSR set to: 0
  1172                           ;main.c: 402:     CLCnGLS2 = 0x20;
  1173   003012  0E20               	movlw	32
  1174   003014  6FDE               	movwf	222,b	;volatile
  1175   003016                     
  1176                           ; BSR set to: 0
  1177                           ;main.c: 403:     CLCnGLS3 = 0x80;
  1178   003016  0E80               	movlw	128
  1179   003018  6FDF               	movwf	223,b	;volatile
  1180   00301A                     
  1181                           ; BSR set to: 0
  1182                           ;main.c: 405:     CLCnPOL = 0x00;
  1183   00301A  0E00               	movlw	0
  1184   00301C  6FD7               	movwf	215,b	;volatile
  1185   00301E                     
  1186                           ; BSR set to: 0
  1187                           ;main.c: 406:     CLCnCON = 0x82;
  1188   00301E  0E82               	movlw	130
  1189   003020  6FD6               	movwf	214,b	;volatile
  1190   003022                     
  1191                           ; BSR set to: 0
  1192                           ;main.c: 409:     CLCSELECT = 2;
  1193   003022  0E02               	movlw	2
  1194   003024  6FD5               	movwf	213,b	;volatile
  1195   003026                     
  1196                           ; BSR set to: 0
  1197                           ;main.c: 410:     CLCnCON &= ~0x80;
  1198   003026  9FD6               	bcf	214,7,b	;volatile
  1199   003028                     
  1200                           ; BSR set to: 0
  1201                           ;main.c: 412:     CLCnSEL0 = 0x33;
  1202   003028  0E33               	movlw	51
  1203   00302A  6FD8               	movwf	216,b	;volatile
  1204   00302C                     
  1205                           ; BSR set to: 0
  1206                           ;main.c: 413:     CLCnSEL1 = 1;
  1207   00302C  0E01               	movlw	1
  1208   00302E  6FD9               	movwf	217,b	;volatile
  1209   003030                     
  1210                           ; BSR set to: 0
  1211                           ;main.c: 414:     CLCnSEL2 = 127;
  1212   003030  0E7F               	movlw	127
  1213   003032  6FDA               	movwf	218,b	;volatile
  1214   003034                     
  1215                           ; BSR set to: 0
  1216                           ;main.c: 415:     CLCnSEL3 = 0x2a;
  1217   003034  0E2A               	movlw	42
  1218   003036  6FDB               	movwf	219,b	;volatile
  1219   003038                     
  1220                           ; BSR set to: 0
  1221                           ;main.c: 419:     CLCnGLS0 = 0x20;
  1222   003038  0E20               	movlw	32
  1223   00303A  6FDC               	movwf	220,b	;volatile
  1224   00303C                     
  1225                           ; BSR set to: 0
  1226                           ;main.c: 420:     CLCnGLS1 = 0x04;
  1227   00303C  0E04               	movlw	4
  1228   00303E  6FDD               	movwf	221,b	;volatile
  1229   003040                     
  1230                           ; BSR set to: 0
  1231                           ;main.c: 422:     CLCnGLS2 = 0x20;
  1232   003040  0E20               	movlw	32
  1233   003042  6FDE               	movwf	222,b	;volatile
  1234   003044                     
  1235                           ; BSR set to: 0
  1236                           ;main.c: 426:     CLCnGLS3 = 0x80;
  1237   003044  0E80               	movlw	128
  1238   003046  6FDF               	movwf	223,b	;volatile
  1239   003048                     
  1240                           ; BSR set to: 0
  1241                           ;main.c: 428:     CLCnPOL = 0x00;
  1242   003048  0E00               	movlw	0
  1243   00304A  6FD7               	movwf	215,b	;volatile
  1244   00304C                     
  1245                           ; BSR set to: 0
  1246                           ;main.c: 429:     CLCnCON = 0x80;
  1247   00304C  0E80               	movlw	128
  1248   00304E  6FD6               	movwf	214,b	;volatile
  1249   003050                     
  1250                           ; BSR set to: 0
  1251                           ;main.c: 432:     CLCSELECT = 1;
  1252   003050  0E01               	movlw	1
  1253   003052  6FD5               	movwf	213,b	;volatile
  1254   003054                     
  1255                           ; BSR set to: 0
  1256                           ;main.c: 434:     CLCnSEL0 = 0x35;
  1257   003054  0E35               	movlw	53
  1258   003056  6FD8               	movwf	216,b	;volatile
  1259   003058                     
  1260                           ; BSR set to: 0
  1261                           ;main.c: 435:     CLCnSEL1 = 0x34;
  1262   003058  0E34               	movlw	52
  1263   00305A  6FD9               	movwf	217,b	;volatile
  1264   00305C                     
  1265                           ; BSR set to: 0
  1266                           ;main.c: 436:     CLCnSEL2 = 127;
  1267   00305C  0E7F               	movlw	127
  1268   00305E  6FDA               	movwf	218,b	;volatile
  1269   003060                     
  1270                           ; BSR set to: 0
  1271                           ;main.c: 437:     CLCnSEL3 = 127;
  1272   003060  0E7F               	movlw	127
  1273   003062  6FDB               	movwf	219,b	;volatile
  1274   003064                     
  1275                           ; BSR set to: 0
  1276                           ;main.c: 439:     CLCnGLS0 = 0x02;
  1277   003064  0E02               	movlw	2
  1278   003066  6FDC               	movwf	220,b	;volatile
  1279   003068                     
  1280                           ; BSR set to: 0
  1281                           ;main.c: 440:     CLCnGLS1 = 0x04;
  1282   003068  0E04               	movlw	4
  1283   00306A  6FDD               	movwf	221,b	;volatile
  1284   00306C                     
  1285                           ; BSR set to: 0
  1286                           ;main.c: 441:     CLCnGLS2 = 0x20;
  1287   00306C  0E20               	movlw	32
  1288   00306E  6FDE               	movwf	222,b	;volatile
  1289   003070                     
  1290                           ; BSR set to: 0
  1291                           ;main.c: 442:     CLCnGLS3 = 0x20;
  1292   003070  0E20               	movlw	32
  1293   003072  6FDF               	movwf	223,b	;volatile
  1294   003074                     
  1295                           ; BSR set to: 0
  1296                           ;main.c: 444:     CLCnPOL = 0x00;
  1297   003074  0E00               	movlw	0
  1298   003076  6FD7               	movwf	215,b	;volatile
  1299   003078                     
  1300                           ; BSR set to: 0
  1301                           ;main.c: 445:     CLCnCON = 0x84;
  1302   003078  0E84               	movlw	132
  1303   00307A  6FD6               	movwf	214,b	;volatile
  1304   00307C                     
  1305                           ; BSR set to: 0
  1306                           ;main.c: 477:     init_boot();
  1307   00307C  EC9C  F01D         	call	_init_boot	;wreg free
  1308   003080                     
  1309                           ;main.c: 478:     manualboot();
  1310   003080  EC37  F019         	call	_manualboot	;wreg free
  1311   003084                     
  1312                           ;main.c: 479:     end_boot();
  1313   003084  EC9D  F01D         	call	_end_boot	;wreg free
  1314   003088                     
  1315                           ;main.c: 480:     xprintf("->\n");
  1316   003088  0E47               	movlw	low STR_2
  1317   00308A  6E56               	movwf	xprintf@fmt^(0+1280),c
  1318   00308C  0E26               	movlw	high STR_2
  1319   00308E  6E57               	movwf	(xprintf@fmt+1)^(0+1280),c
  1320   003090  EC28  F01D         	call	_xprintf	;wreg free
  1321   003094                     
  1322                           ;main.c: 483:     RA3PPS = 0x01;
  1323   003094  0E01               	movlw	1
  1324   003096  0102               	movlb	2	; () banked
  1325   003098  6F04               	movwf	4,b	;volatile
  1326   00309A                     
  1327                           ; BSR set to: 2
  1328                           ;main.c: 486:     LATE1 = 0;
  1329   00309A  92C2               	bcf	1218,1,c	;volatile
  1330   00309C                     
  1331                           ; BSR set to: 2
  1332                           ;main.c: 487:     LATE0 = 0;
  1333   00309C  90C2               	bcf	1218,0,c	;volatile
  1334   00309E                     
  1335                           ; BSR set to: 2
  1336                           ;main.c: 488:     (TRISC = 0xff);
  1337   00309E  68C8               	setf	200,c	;volatile
  1338   0030A0                     
  1339                           ; BSR set to: 2
  1340   0030A0  74C2               	btg	1218,2,c	;volatile
  1341   0030A2                     
  1342                           ; BSR set to: 2
  1343   0030A2  74C2               	btg	1218,2,c	;volatile
  1344   0030A4                     
  1345                           ; BSR set to: 2
  1346                           ;main.c: 526:     (TRISC = 0xff);
  1347   0030A4  68C8               	setf	200,c	;volatile
  1348   0030A6                     l255:
  1349   0030A6  A2CE               	btfss	1230,1,c	;volatile
  1350   0030A8  EF58  F018         	goto	u2631
  1351   0030AC  EF5A  F018         	goto	u2630
  1352   0030B0                     u2631:
  1353   0030B0  EF53  F018         	goto	l255
  1354   0030B4                     u2630:
  1355   0030B4                     
  1356                           ;main.c: 528:     toggle_Egate();
  1357   0030B4  EC85  F01D         	call	_toggle_Egate	;wreg free
  1358   0030B8                     l258:
  1359   0030B8  B2CE               	btfsc	1230,1,c	;volatile
  1360   0030BA  EF61  F018         	goto	u2641
  1361   0030BE  EF63  F018         	goto	u2640
  1362   0030C2                     u2641:
  1363   0030C2  EF5C  F018         	goto	l258
  1364   0030C6                     u2640:
  1365   0030C6                     
  1366                           ;main.c: 530:     toggle_Egate();
  1367   0030C6  EC85  F01D         	call	_toggle_Egate	;wreg free
  1368   0030CA                     l261:
  1369   0030CA  A2CE               	btfss	1230,1,c	;volatile
  1370   0030CC  EF6A  F018         	goto	u2651
  1371   0030D0  EF6C  F018         	goto	u2650
  1372   0030D4                     u2651:
  1373   0030D4  EF65  F018         	goto	l261
  1374   0030D8                     u2650:
  1375   0030D8                     
  1376                           ;main.c: 532:     toggle_Egate();
  1377   0030D8  EC85  F01D         	call	_toggle_Egate	;wreg free
  1378   0030DC                     l264:
  1379   0030DC  B2CE               	btfsc	1230,1,c	;volatile
  1380   0030DE  EF73  F018         	goto	u2661
  1381   0030E2  EF75  F018         	goto	u2660
  1382   0030E6                     u2661:
  1383   0030E6  EF6E  F018         	goto	l264
  1384   0030EA                     u2660:
  1385   0030EA                     
  1386                           ;main.c: 534:     toggle_Egate();
  1387   0030EA  EC85  F01D         	call	_toggle_Egate	;wreg free
  1388   0030EE                     l267:
  1389   0030EE  A2CE               	btfss	1230,1,c	;volatile
  1390   0030F0  EF7C  F018         	goto	u2671
  1391   0030F4  EF7E  F018         	goto	u2670
  1392   0030F8                     u2671:
  1393   0030F8  EF77  F018         	goto	l267
  1394   0030FC                     u2670:
  1395   0030FC                     
  1396                           ;main.c: 536:     toggle_Egate();
  1397   0030FC  EC85  F01D         	call	_toggle_Egate	;wreg free
  1398   003100                     l270:
  1399   003100  B2CE               	btfsc	1230,1,c	;volatile
  1400   003102  EF85  F018         	goto	u2681
  1401   003106  EF87  F018         	goto	u2680
  1402   00310A                     u2681:
  1403   00310A  EF80  F018         	goto	l270
  1404   00310E                     u2680:
  1405   00310E                     
  1406                           ;main.c: 538:     toggle_Egate();
  1407   00310E  EC85  F01D         	call	_toggle_Egate	;wreg free
  1408   003112                     l273:
  1409   003112  A2CE               	btfss	1230,1,c	;volatile
  1410   003114  EF8E  F018         	goto	u2691
  1411   003118  EF90  F018         	goto	u2690
  1412   00311C                     u2691:
  1413   00311C  EF89  F018         	goto	l273
  1414   003120                     u2690:
  1415   003120                     
  1416                           ;main.c: 540:     toggle_Egate();
  1417   003120  EC85  F01D         	call	_toggle_Egate	;wreg free
  1418   003124                     l276:
  1419   003124  B2CE               	btfsc	1230,1,c	;volatile
  1420   003126  EF97  F018         	goto	u2701
  1421   00312A  EF99  F018         	goto	u2700
  1422   00312E                     u2701:
  1423   00312E  EF92  F018         	goto	l276
  1424   003132                     u2700:
  1425   003132                     
  1426                           ;main.c: 542:     toggle_Egate();
  1427   003132  EC85  F01D         	call	_toggle_Egate	;wreg free
  1428   003136                     l279:
  1429   003136  A2CE               	btfss	1230,1,c	;volatile
  1430   003138  EFA0  F018         	goto	u2711
  1431   00313C  EFA2  F018         	goto	u2710
  1432   003140                     u2711:
  1433   003140  EF9B  F018         	goto	l279
  1434   003144                     u2710:
  1435   003144                     
  1436                           ;main.c: 544:     toggle_Egate();
  1437   003144  EC85  F01D         	call	_toggle_Egate	;wreg free
  1438   003148                     l282:
  1439   003148  B2CE               	btfsc	1230,1,c	;volatile
  1440   00314A  EFA9  F018         	goto	u2721
  1441   00314E  EFAB  F018         	goto	u2720
  1442   003152                     u2721:
  1443   003152  EFA4  F018         	goto	l282
  1444   003156                     u2720:
  1445   003156                     
  1446                           ;main.c: 546:     toggle_Egate();
  1447   003156  EC85  F01D         	call	_toggle_Egate	;wreg free
  1448   00315A                     l285:
  1449   00315A  A2CE               	btfss	1230,1,c	;volatile
  1450   00315C  EFB2  F018         	goto	u2731
  1451   003160  EFB4  F018         	goto	u2730
  1452   003164                     u2731:
  1453   003164  EFAD  F018         	goto	l285
  1454   003168                     u2730:
  1455   003168                     
  1456                           ;main.c: 548:     toggle_Egate();
  1457   003168  EC85  F01D         	call	_toggle_Egate	;wreg free
  1458   00316C                     l288:
  1459   00316C  B2CE               	btfsc	1230,1,c	;volatile
  1460   00316E  EFBB  F018         	goto	u2741
  1461   003172  EFBD  F018         	goto	u2740
  1462   003176                     u2741:
  1463   003176  EFB6  F018         	goto	l288
  1464   00317A                     u2740:
  1465   00317A                     
  1466                           ;main.c: 550:     toggle_Egate();
  1467   00317A  EC85  F01D         	call	_toggle_Egate	;wreg free
  1468   00317E  74C2               	btg	1218,2,c	;volatile
  1469   003180  74C2               	btg	1218,2,c	;volatile
  1470   003182  74C2               	btg	1218,2,c	;volatile
  1471   003184  74C2               	btg	1218,2,c	;volatile
  1472   003186                     
  1473                           ;main.c: 556:     ss_flag = 1;
  1474   003186  0E00               	movlw	0
  1475   003188  0105               	movlb	5	; () banked
  1476   00318A  6F97               	movwf	(_ss_flag+1)& (0+255),b
  1477   00318C  0E01               	movlw	1
  1478   00318E  6F96               	movwf	_ss_flag& (0+255),b
  1479   003190                     l299:
  1480   003190  A2CE               	btfss	1230,1,c	;volatile
  1481   003192  EFCD  F018         	goto	u2751
  1482   003196  EFCF  F018         	goto	u2750
  1483   00319A                     u2751:
  1484   00319A  EFC8  F018         	goto	l299
  1485   00319E                     u2750:
  1486   00319E                     
  1487                           ;main.c: 558:     toggle_Egate();
  1488   00319E  EC85  F01D         	call	_toggle_Egate	;wreg free
  1489   0031A2                     l302:
  1490   0031A2  B2CE               	btfsc	1230,1,c	;volatile
  1491   0031A4  EFD6  F018         	goto	u2761
  1492   0031A8  EFD8  F018         	goto	u2760
  1493   0031AC                     u2761:
  1494   0031AC  EFD1  F018         	goto	l302
  1495   0031B0                     u2760:
  1496   0031B0                     
  1497                           ;main.c: 560:     toggle_Egate();
  1498   0031B0  EC85  F01D         	call	_toggle_Egate	;wreg free
  1499   0031B4                     
  1500                           ;main.c: 561:     RES_off();
  1501   0031B4  EC99  F01D         	call	_RES_off	;wreg free
  1502   0031B8                     l306:
  1503   0031B8  A2CE               	btfss	1230,1,c	;volatile
  1504   0031BA  EFE1  F018         	goto	u2771
  1505   0031BE  EFE3  F018         	goto	u2770
  1506   0031C2                     u2771:
  1507   0031C2  EFDC  F018         	goto	l306
  1508   0031C6                     u2770:
  1509   0031C6                     
  1510                           ;main.c: 566:         if(RA0) {
  1511   0031C6  A0CE               	btfss	1230,0,c	;volatile
  1512   0031C8  EFE8  F018         	goto	u2781
  1513   0031CC  EFEA  F018         	goto	u2780
  1514   0031D0                     u2781:
  1515   0031D0  EFFB  F018         	goto	l315
  1516   0031D4                     u2780:
  1517   0031D4  74C2               	btg	1218,2,c	;volatile
  1518   0031D6                     
  1519                           ;main.c: 568:             addr = get_addr();
  1520   0031D6  EC8D  F01D         	call	_get_addr	;wreg free
  1521   0031DA  C501  F580         	movff	?_get_addr,main@addr
  1522   0031DE  C502  F581         	movff	?_get_addr+1,main@addr+1
  1523   0031E2  0105               	movlb	5	; () banked
  1524   0031E4  6B82               	clrf	(main@addr+2)& (0+255),b
  1525   0031E6  6B83               	clrf	(main@addr+3)& (0+255),b
  1526   0031E8                     
  1527                           ; BSR set to: 5
  1528                           ;main.c: 569:             LATC = 0x12;
  1529   0031E8  0E12               	movlw	18
  1530   0031EA  6EC0               	movwf	192,c	;volatile
  1531   0031EC                     
  1532                           ; BSR set to: 5
  1533                           ;main.c: 570:             (TRISC = 0x00);
  1534   0031EC  0E00               	movlw	0
  1535   0031EE  6EC8               	movwf	200,c	;volatile
  1536   0031F0                     l3221:
  1537   0031F0  74C2               	btg	1218,2,c	;volatile
  1538   0031F2  EF25  F019         	goto	l3233
  1539   0031F6                     l315:
  1540   0031F6  74C2               	btg	1218,2,c	;volatile
  1541   0031F8  74C2               	btg	1218,2,c	;volatile
  1542   0031FA  74C2               	btg	1218,2,c	;volatile
  1543   0031FC                     
  1544                           ;main.c: 613:             addr = get_addr();
  1545   0031FC  EC8D  F01D         	call	_get_addr	;wreg free
  1546   003200  C501  F580         	movff	?_get_addr,main@addr
  1547   003204  C502  F581         	movff	?_get_addr+1,main@addr+1
  1548   003208  0105               	movlb	5	; () banked
  1549   00320A  6B82               	clrf	(main@addr+2)& (0+255),b
  1550   00320C  6B83               	clrf	(main@addr+3)& (0+255),b
  1551   00320E                     
  1552                           ; BSR set to: 5
  1553                           ;main.c: 615:             if(addr == ((unsigned short)0xffa1)) {
  1554   00320E  0EA1               	movlw	161
  1555   003210  1980               	xorwf	main@addr& (0+255),w,b
  1556   003212  E108               	bnz	u2791
  1557   003214  2981               	incf	(main@addr+1)& (0+255),w,b
  1558   003216  1182               	iorwf	(main@addr+2)& (0+255),w,b
  1559   003218  1183               	iorwf	(main@addr+3)& (0+255),w,b
  1560   00321A  A4D8               	btfss	status,2,c
  1561   00321C  EF12  F019         	goto	u2791
  1562   003220  EF14  F019         	goto	u2790
  1563   003224                     u2791:
  1564   003224  EF1A  F019         	goto	l327
  1565   003228                     u2790:
  1566   003228                     
  1567                           ; BSR set to: 5
  1568   003228  74C2               	btg	1218,2,c	;volatile
  1569   00322A                     
  1570                           ; BSR set to: 5
  1571                           ;main.c: 621:                 U3TXB = PORTC;
  1572   00322A  C4D0 F2C9          	movff	1232,713	;volatile
  1573   00322E                     l324:
  1574   00322E  74C2               	btg	1218,2,c	;volatile
  1575   003230  EFF8  F018         	goto	l3221
  1576   003234                     l327:
  1577                           
  1578                           ; BSR set to: 5
  1579   003234  74C2               	btg	1218,2,c	;volatile
  1580   003236                     
  1581                           ; BSR set to: 5
  1582                           ;main.c: 630:                 poke_ram(addr, PORTC);
  1583   003236  C580  F501         	movff	main@addr,poke_ram@addr
  1584   00323A  C581  F502         	movff	main@addr+1,poke_ram@addr+1
  1585   00323E  C4D0 F503          	movff	1232,poke_ram@c	;volatile
  1586   003242  EC51  F01D         	call	_poke_ram	;wreg free
  1587   003246  EF17  F019         	goto	l324
  1588   00324A                     l3233:
  1589                           
  1590                           ;main.c: 646:         toggle_Egate();
  1591   00324A  EC85  F01D         	call	_toggle_Egate	;wreg free
  1592   00324E                     l334:
  1593   00324E  B2CE               	btfsc	1230,1,c	;volatile
  1594   003250  EF2C  F019         	goto	u2801
  1595   003254  EF2E  F019         	goto	u2800
  1596   003258                     u2801:
  1597   003258  EF27  F019         	goto	l334
  1598   00325C                     u2800:
  1599   00325C  74C2               	btg	1218,2,c	;volatile
  1600   00325E                     
  1601                           ;main.c: 649:         (TRISC = 0xff);
  1602   00325E  68C8               	setf	200,c	;volatile
  1603   003260                     
  1604                           ;main.c: 650:         toggle_Egate();
  1605   003260  EC85  F01D         	call	_toggle_Egate	;wreg free
  1606   003264  74C2               	btg	1218,2,c	;volatile
  1607   003266  EFDC  F018         	goto	l306
  1608   00326A  EFFE  F0FF         	goto	start
  1609   00326E                     __end_of_main:
  1610                           	callstack 0
  1611                           
  1612 ;; *************** function _toggle_Egate *****************
  1613 ;; Defined at:
  1614 ;;		line 192 in file "main.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1632 ;;Total ram usage:        0 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text1
  1642   003B0A                     __ptext1:
  1643                           	callstack 0
  1644   003B0A                     _toggle_Egate:
  1645                           	callstack 126
  1646   003B0A                     
  1647                           ;main.c: 194:     CLCSELECT = 2;
  1648   003B0A  0E02               	movlw	2
  1649   003B0C  0100               	movlb	0	; () banked
  1650   003B0E  6FD5               	movwf	213,b	;volatile
  1651   003B10                     
  1652                           ; BSR set to: 0
  1653                           ;main.c: 195:     CLCnCON &= ~0x80;
  1654   003B10  9FD6               	bcf	214,7,b	;volatile
  1655   003B12                     
  1656                           ; BSR set to: 0
  1657                           ;main.c: 197:     CLCnGLS2 ^= 0x0C;
  1658   003B12  0E0C               	movlw	12
  1659   003B14  1BDE               	xorwf	222,f,b	;volatile
  1660   003B16                     
  1661                           ; BSR set to: 0
  1662                           ;main.c: 198:     CLCnCON |= 0x80;
  1663   003B16  8FD6               	bsf	214,7,b	;volatile
  1664   003B18                     
  1665                           ; BSR set to: 0
  1666   003B18  0012               	return		;funcret
  1667   003B1A                     __end_of_toggle_Egate:
  1668                           	callstack 0
  1669                           
  1670 ;; *************** function _manualboot *****************
  1671 ;; Defined at:
  1672 ;;		line 71 in file "bootload.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  start           2   25[BANK5 ] unsigned short 
  1677 ;;  end             2   10[BANK5 ] unsigned short 
  1678 ;;  c               2   29[BANK5 ] int 
  1679 ;;  addr            2   27[BANK5 ] unsigned short 
  1680 ;;  n               2   23[BANK5 ] int 
  1681 ;;  d               2   21[BANK5 ] int 
  1682 ;;  min             2   19[BANK5 ] unsigned short 
  1683 ;;  max             2   17[BANK5 ] unsigned short 
  1684 ;;  addr_flag       2   15[BANK5 ] int 
  1685 ;;  cc              2   13[BANK5 ] int 
  1686 ;;  count           2    0        int 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1697 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1698 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1699 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1700 ;;Total ram usage:       23 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; Hardware stack levels required when called: 5
  1703 ;; This function calls:
  1704 ;;		_clear_all
  1705 ;;		_getchr
  1706 ;;		_peek_ram
  1707 ;;		_poke_ram
  1708 ;;		_to_hex
  1709 ;;		_ungetchr
  1710 ;;		_xprintf
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text2
  1717   00326E                     __ptext2:
  1718                           	callstack 0
  1719   00326E                     _manualboot:
  1720                           	callstack 121
  1721   00326E                     
  1722                           ;bootload.c: 73:     int c, cc, d, n, count;;bootload.c: 74:     addr_t addr = 0, max = 
      +                          0, min = ((addr_t)0xF000) + ((addr_t)0x1000) - 1;
  1723   00326E  0E00               	movlw	0
  1724   003270  0105               	movlb	5	; () banked
  1725   003272  6F7C               	movwf	(manualboot@addr+1)& (0+255),b
  1726   003274  0E00               	movlw	0
  1727   003276  6F7B               	movwf	manualboot@addr& (0+255),b
  1728   003278  0E00               	movlw	0
  1729   00327A  6F72               	movwf	(manualboot@max+1)& (0+255),b
  1730   00327C  0E00               	movlw	0
  1731   00327E  6F71               	movwf	manualboot@max& (0+255),b
  1732   003280                     
  1733                           ; BSR set to: 5
  1734   003280  6973               	setf	manualboot@min& (0+255),b
  1735   003282  6974               	setf	(manualboot@min+1)& (0+255),b
  1736   003284  EF44  F019         	goto	l2781
  1737   003288                     l575:
  1738   003288                     l2781:
  1739                           
  1740                           ;bootload.c: 78:         while ((c = getchr()) == ' ' || c == '\t' || c == '\n' || c == 
      +                          '\r')
  1741   003288  EC86  F01B         	call	_getchr	;wreg free
  1742   00328C  C503  F57D         	movff	?_getchr,manualboot@c
  1743   003290  C504  F57E         	movff	?_getchr+1,manualboot@c+1
  1744   003294  0E20               	movlw	32
  1745   003296  0105               	movlb	5	; () banked
  1746   003298  197D               	xorwf	manualboot@c& (0+255),w,b
  1747   00329A  117E               	iorwf	(manualboot@c+1)& (0+255),w,b
  1748   00329C  B4D8               	btfsc	status,2,c
  1749   00329E  EF53  F019         	goto	u2221
  1750   0032A2  EF55  F019         	goto	u2220
  1751   0032A6                     u2221:
  1752   0032A6  EF44  F019         	goto	l2781
  1753   0032AA                     u2220:
  1754   0032AA                     
  1755                           ; BSR set to: 5
  1756   0032AA  0E09               	movlw	9
  1757   0032AC  197D               	xorwf	manualboot@c& (0+255),w,b
  1758   0032AE  117E               	iorwf	(manualboot@c+1)& (0+255),w,b
  1759   0032B0  B4D8               	btfsc	status,2,c
  1760   0032B2  EF5D  F019         	goto	u2231
  1761   0032B6  EF5F  F019         	goto	u2230
  1762   0032BA                     u2231:
  1763   0032BA  EF44  F019         	goto	l2781
  1764   0032BE                     u2230:
  1765   0032BE                     
  1766                           ; BSR set to: 5
  1767   0032BE  0E0A               	movlw	10
  1768   0032C0  197D               	xorwf	manualboot@c& (0+255),w,b
  1769   0032C2  117E               	iorwf	(manualboot@c+1)& (0+255),w,b
  1770   0032C4  B4D8               	btfsc	status,2,c
  1771   0032C6  EF67  F019         	goto	u2241
  1772   0032CA  EF69  F019         	goto	u2240
  1773   0032CE                     u2241:
  1774   0032CE  EF44  F019         	goto	l2781
  1775   0032D2                     u2240:
  1776   0032D2                     
  1777                           ; BSR set to: 5
  1778   0032D2  0E0D               	movlw	13
  1779   0032D4  197D               	xorwf	manualboot@c& (0+255),w,b
  1780   0032D6  117E               	iorwf	(manualboot@c+1)& (0+255),w,b
  1781   0032D8  B4D8               	btfsc	status,2,c
  1782   0032DA  EF71  F019         	goto	u2251
  1783   0032DE  EF73  F019         	goto	u2250
  1784   0032E2                     u2251:
  1785   0032E2  EF44  F019         	goto	l2781
  1786   0032E6                     u2250:
  1787   0032E6                     
  1788                           ; BSR set to: 5
  1789                           ;bootload.c: 80:         if (c == -1)
  1790   0032E6  297D               	incf	manualboot@c& (0+255),w,b
  1791   0032E8  E106               	bnz	u2261
  1792   0032EA  297E               	incf	(manualboot@c+1)& (0+255),w,b
  1793   0032EC  A4D8               	btfss	status,2,c
  1794   0032EE  EF7B  F019         	goto	u2261
  1795   0032F2  EF7D  F019         	goto	u2260
  1796   0032F6                     u2261:
  1797   0032F6  EF7F  F019         	goto	l2793
  1798   0032FA                     u2260:
  1799   0032FA  EF2A  F01B         	goto	l608
  1800   0032FE                     l2793:
  1801                           
  1802                           ; BSR set to: 5
  1803                           ;bootload.c: 82:         if (c == '!' && min < max) {
  1804   0032FE  0E21               	movlw	33
  1805   003300  197D               	xorwf	manualboot@c& (0+255),w,b
  1806   003302  117E               	iorwf	(manualboot@c+1)& (0+255),w,b
  1807   003304  A4D8               	btfss	status,2,c
  1808   003306  EF87  F019         	goto	u2271
  1809   00330A  EF89  F019         	goto	u2270
  1810   00330E                     u2271:
  1811   00330E  EF24  F01A         	goto	l2825
  1812   003312                     u2270:
  1813   003312                     
  1814                           ; BSR set to: 5
  1815   003312  5171               	movf	manualboot@max& (0+255),w,b
  1816   003314  5D73               	subwf	manualboot@min& (0+255),w,b
  1817   003316  5172               	movf	(manualboot@max+1)& (0+255),w,b
  1818   003318  5974               	subwfb	(manualboot@min+1)& (0+255),w,b
  1819   00331A  B0D8               	btfsc	status,0,c
  1820   00331C  EF92  F019         	goto	u2281
  1821   003320  EF94  F019         	goto	u2280
  1822   003324                     u2281:
  1823   003324  EF24  F01A         	goto	l2825
  1824   003328                     u2280:
  1825   003328                     
  1826                           ; BSR set to: 5
  1827                           ;bootload.c: 84:             addr_t start, end;;bootload.c: 85:             start = min 
      +                          & 0xfff0;
  1828   003328  0EF0               	movlw	240
  1829   00332A  1573               	andwf	manualboot@min& (0+255),w,b
  1830   00332C  6F79               	movwf	manualboot@start& (0+255),b
  1831   00332E  0EFF               	movlw	255
  1832   003330  1574               	andwf	(manualboot@min+1)& (0+255),w,b
  1833   003332  6F7A               	movwf	(manualboot@start+1)& (0+255),b
  1834   003334                     
  1835                           ; BSR set to: 5
  1836                           ;bootload.c: 86:             end = max;
  1837   003334  C571  F56A         	movff	manualboot@max,manualboot@end
  1838   003338  C572  F56B         	movff	manualboot@max+1,manualboot@end+1
  1839                           
  1840                           ;bootload.c: 89:             while (start < end) {
  1841   00333C  EFF4  F019         	goto	l2815
  1842   003340                     l2801:
  1843                           
  1844                           ; BSR set to: 5
  1845                           ;bootload.c: 90:                 if ((start & 0xf) == 0) {
  1846   003340  0E0F               	movlw	15
  1847   003342  1579               	andwf	manualboot@start& (0+255),w,b
  1848   003344  6F68               	movwf	??_manualboot& (0+255),b
  1849   003346  0E00               	movlw	0
  1850   003348  157A               	andwf	(manualboot@start+1)& (0+255),w,b
  1851   00334A  6F69               	movwf	(??_manualboot+1)& (0+255),b
  1852   00334C  5168               	movf	??_manualboot& (0+255),w,b
  1853   00334E  1169               	iorwf	(??_manualboot+1)& (0+255),w,b
  1854   003350  A4D8               	btfss	status,2,c
  1855   003352  EFAD  F019         	goto	u2291
  1856   003356  EFAF  F019         	goto	u2290
  1857   00335A                     u2291:
  1858   00335A  EFB9  F019         	goto	l2805
  1859   00335E                     u2290:
  1860   00335E                     
  1861                           ; BSR set to: 5
  1862                           ;bootload.c: 91:                     xprintf("%04X ", start);
  1863   00335E  0E38               	movlw	low (STR_9+2)
  1864   003360  6E56               	movwf	xprintf@fmt^(0+1280),c
  1865   003362  0E26               	movlw	high (STR_9+2)
  1866   003364  6E57               	movwf	(xprintf@fmt+1)^(0+1280),c
  1867   003366  C579  F558         	movff	manualboot@start,?_xprintf+2
  1868   00336A  C57A  F559         	movff	manualboot@start+1,?_xprintf+3
  1869   00336E  EC28  F01D         	call	_xprintf	;wreg free
  1870   003372                     l2805:
  1871                           
  1872                           ;bootload.c: 93:                 d = ((unsigned short)peek_ram(start))<<8;
  1873   003372  C579  F501         	movff	manualboot@start,peek_ram@addr
  1874   003376  C57A  F502         	movff	manualboot@start+1,peek_ram@addr+1
  1875   00337A  EC60  F01D         	call	_peek_ram	;wreg free
  1876   00337E  0105               	movlb	5	; () banked
  1877   003380  6F76               	movwf	(manualboot@d+1)& (0+255),b
  1878   003382  6B75               	clrf	manualboot@d& (0+255),b
  1879   003384                     
  1880                           ; BSR set to: 5
  1881                           ;bootload.c: 94:                 d |= peek_ram(start + 1);
  1882   003384  0E01               	movlw	1
  1883   003386  2579               	addwf	manualboot@start& (0+255),w,b
  1884   003388  6E01               	movwf	peek_ram@addr^(0+1280),c
  1885   00338A  0E00               	movlw	0
  1886   00338C  217A               	addwfc	(manualboot@start+1)& (0+255),w,b
  1887   00338E  6E02               	movwf	(peek_ram@addr+1)^(0+1280),c
  1888   003390  EC60  F01D         	call	_peek_ram	;wreg free
  1889   003394  0105               	movlb	5	; () banked
  1890   003396  6F68               	movwf	??_manualboot& (0+255),b
  1891   003398  5168               	movf	??_manualboot& (0+255),w,b
  1892   00339A  1375               	iorwf	manualboot@d& (0+255),f,b
  1893                           
  1894                           ;bootload.c: 95:                 xprintf("%04X ", d);
  1895   00339C  0E38               	movlw	low (STR_9+2)
  1896   00339E  6E56               	movwf	xprintf@fmt^(0+1280),c
  1897   0033A0  0E26               	movlw	high (STR_9+2)
  1898   0033A2  6E57               	movwf	(xprintf@fmt+1)^(0+1280),c
  1899   0033A4  C575  F558         	movff	manualboot@d,?_xprintf+2
  1900   0033A8  C576  F559         	movff	manualboot@d+1,?_xprintf+3
  1901   0033AC  EC28  F01D         	call	_xprintf	;wreg free
  1902   0033B0                     
  1903                           ;bootload.c: 96:                 if ((start & 0xf) == 0xe) {
  1904   0033B0  0E0F               	movlw	15
  1905   0033B2  0105               	movlb	5	; () banked
  1906   0033B4  1579               	andwf	manualboot@start& (0+255),w,b
  1907   0033B6  6F68               	movwf	??_manualboot& (0+255),b
  1908   0033B8  0E00               	movlw	0
  1909   0033BA  157A               	andwf	(manualboot@start+1)& (0+255),w,b
  1910   0033BC  6F69               	movwf	(??_manualboot+1)& (0+255),b
  1911   0033BE  0E0E               	movlw	14
  1912   0033C0  1968               	xorwf	??_manualboot& (0+255),w,b
  1913   0033C2  1169               	iorwf	(??_manualboot+1)& (0+255),w,b
  1914   0033C4  A4D8               	btfss	status,2,c
  1915   0033C6  EFE7  F019         	goto	u2301
  1916   0033CA  EFE9  F019         	goto	u2300
  1917   0033CE                     u2301:
  1918   0033CE  EFEF  F019         	goto	l2813
  1919   0033D2                     u2300:
  1920   0033D2                     
  1921                           ; BSR set to: 5
  1922                           ;bootload.c: 97:                     xprintf("\n");
  1923   0033D2  0E49               	movlw	low (STR_2+2)
  1924   0033D4  6E56               	movwf	xprintf@fmt^(0+1280),c
  1925   0033D6  0E26               	movlw	high (STR_2+2)
  1926   0033D8  6E57               	movwf	(xprintf@fmt+1)^(0+1280),c
  1927   0033DA  EC28  F01D         	call	_xprintf	;wreg free
  1928   0033DE                     l2813:
  1929                           
  1930                           ;bootload.c: 99:                 start += 2;
  1931   0033DE  0E02               	movlw	2
  1932   0033E0  0105               	movlb	5	; () banked
  1933   0033E2  2779               	addwf	manualboot@start& (0+255),f,b
  1934   0033E4  0E00               	movlw	0
  1935   0033E6  237A               	addwfc	(manualboot@start+1)& (0+255),f,b
  1936   0033E8                     l2815:
  1937                           
  1938                           ; BSR set to: 5
  1939                           ;bootload.c: 89:             while (start < end) {
  1940   0033E8  516A               	movf	manualboot@end& (0+255),w,b
  1941   0033EA  5D79               	subwf	manualboot@start& (0+255),w,b
  1942   0033EC  516B               	movf	(manualboot@end+1)& (0+255),w,b
  1943   0033EE  597A               	subwfb	(manualboot@start+1)& (0+255),w,b
  1944   0033F0  A0D8               	btfss	status,0,c
  1945   0033F2  EFFD  F019         	goto	u2311
  1946   0033F6  EFFF  F019         	goto	u2310
  1947   0033FA                     u2311:
  1948   0033FA  EFA0  F019         	goto	l2801
  1949   0033FE                     u2310:
  1950   0033FE                     
  1951                           ; BSR set to: 5
  1952                           ;bootload.c: 101:             if (ss_flag)
  1953   0033FE  5196               	movf	_ss_flag& (0+255),w,b
  1954   003400  1197               	iorwf	(_ss_flag+1)& (0+255),w,b
  1955   003402  B4D8               	btfsc	status,2,c
  1956   003404  EF06  F01A         	goto	u2321
  1957   003408  EF08  F01A         	goto	u2320
  1958   00340C                     u2321:
  1959   00340C  EF0E  F01A         	goto	l2821
  1960   003410                     u2320:
  1961   003410                     
  1962                           ; BSR set to: 5
  1963                           ;bootload.c: 102:                 xprintf("ss ");
  1964   003410  0E43               	movlw	low STR_8
  1965   003412  6E56               	movwf	xprintf@fmt^(0+1280),c
  1966   003414  0E26               	movlw	high STR_8
  1967   003416  6E57               	movwf	(xprintf@fmt+1)^(0+1280),c
  1968   003418  EC28  F01D         	call	_xprintf	;wreg free
  1969   00341C                     l2821:
  1970                           
  1971                           ;bootload.c: 103:             if (break_address)
  1972   00341C  0105               	movlb	5	; () banked
  1973   00341E  5198               	movf	_break_address& (0+255),w,b
  1974   003420  1199               	iorwf	(_break_address+1)& (0+255),w,b
  1975   003422  B4D8               	btfsc	status,2,c
  1976   003424  EF16  F01A         	goto	u2331
  1977   003428  EF18  F01A         	goto	u2330
  1978   00342C                     u2331:
  1979   00342C  EF44  F019         	goto	l2781
  1980   003430                     u2330:
  1981   003430                     
  1982                           ; BSR set to: 5
  1983                           ;bootload.c: 104:                 xprintf("%%%04X ", break_address);
  1984   003430  0E36               	movlw	low STR_9
  1985   003432  6E56               	movwf	xprintf@fmt^(0+1280),c
  1986   003434  0E26               	movlw	high STR_9
  1987   003436  6E57               	movwf	(xprintf@fmt+1)^(0+1280),c
  1988   003438  C598  F558         	movff	_break_address,?_xprintf+2
  1989   00343C  C599  F559         	movff	_break_address+1,?_xprintf+3
  1990   003440  EC28  F01D         	call	_xprintf	;wreg free
  1991   003444  EF44  F019         	goto	l2781
  1992   003448                     l2825:
  1993                           
  1994                           ; BSR set to: 5
  1995                           ;bootload.c: 107:         if (c == 's') {
  1996   003448  0E73               	movlw	115
  1997   00344A  197D               	xorwf	manualboot@c& (0+255),w,b
  1998   00344C  117E               	iorwf	(manualboot@c+1)& (0+255),w,b
  1999   00344E  A4D8               	btfss	status,2,c
  2000   003450  EF2C  F01A         	goto	u2341
  2001   003454  EF2E  F01A         	goto	u2340
  2002   003458                     u2341:
  2003   003458  EF34  F01A         	goto	l2829
  2004   00345C                     u2340:
  2005   00345C                     
  2006                           ; BSR set to: 5
  2007                           ;bootload.c: 108:             ss_flag = 1;
  2008   00345C  0E00               	movlw	0
  2009   00345E  6F97               	movwf	(_ss_flag+1)& (0+255),b
  2010   003460  0E01               	movlw	1
  2011   003462  6F96               	movwf	_ss_flag& (0+255),b
  2012                           
  2013                           ;bootload.c: 109:             break;
  2014   003464  EF2A  F01B         	goto	l608
  2015   003468                     l2829:
  2016                           
  2017                           ; BSR set to: 5
  2018                           ;bootload.c: 111:         if (c == 'g') {
  2019   003468  0E67               	movlw	103
  2020   00346A  197D               	xorwf	manualboot@c& (0+255),w,b
  2021   00346C  117E               	iorwf	(manualboot@c+1)& (0+255),w,b
  2022   00346E  A4D8               	btfss	status,2,c
  2023   003470  EF3C  F01A         	goto	u2351
  2024   003474  EF3E  F01A         	goto	u2350
  2025   003478                     u2351:
  2026   003478  EF44  F01A         	goto	l2833
  2027   00347C                     u2350:
  2028   00347C                     
  2029                           ; BSR set to: 5
  2030                           ;bootload.c: 112:             ss_flag = 0;
  2031   00347C  0E00               	movlw	0
  2032   00347E  6F97               	movwf	(_ss_flag+1)& (0+255),b
  2033   003480  0E00               	movlw	0
  2034   003482  6F96               	movwf	_ss_flag& (0+255),b
  2035                           
  2036                           ;bootload.c: 113:             break;
  2037   003484  EF2A  F01B         	goto	l608
  2038   003488                     l2833:
  2039                           
  2040                           ; BSR set to: 5
  2041                           ;bootload.c: 115:         if (c == ',') {
  2042   003488  0E2C               	movlw	44
  2043   00348A  197D               	xorwf	manualboot@c& (0+255),w,b
  2044   00348C  117E               	iorwf	(manualboot@c+1)& (0+255),w,b
  2045   00348E  A4D8               	btfss	status,2,c
  2046   003490  EF4C  F01A         	goto	u2361
  2047   003494  EF4E  F01A         	goto	u2360
  2048   003498                     u2361:
  2049   003498  EF52  F01A         	goto	l2837
  2050   00349C                     u2360:
  2051   00349C                     
  2052                           ; BSR set to: 5
  2053                           ;bootload.c: 116:             clear_all();
  2054   00349C  EC72  F01C         	call	_clear_all	;wreg free
  2055                           
  2056                           ;bootload.c: 117:             continue;
  2057   0034A0  EF44  F019         	goto	l2781
  2058   0034A4                     l2837:
  2059                           
  2060                           ; BSR set to: 5
  2061                           ;bootload.c: 119:         addr_flag = ((c == '=') || (c == '%'));
  2062   0034A4  0E01               	movlw	1
  2063   0034A6  6F6C               	movwf	_manualboot$362& (0+255),b
  2064   0034A8                     
  2065                           ; BSR set to: 5
  2066   0034A8  0E3D               	movlw	61
  2067   0034AA  197D               	xorwf	manualboot@c& (0+255),w,b
  2068   0034AC  117E               	iorwf	(manualboot@c+1)& (0+255),w,b
  2069   0034AE  B4D8               	btfsc	status,2,c
  2070   0034B0  EF5C  F01A         	goto	u2371
  2071   0034B4  EF5E  F01A         	goto	u2370
  2072   0034B8                     u2371:
  2073   0034B8  EF6A  F01A         	goto	l2845
  2074   0034BC                     u2370:
  2075   0034BC                     
  2076                           ; BSR set to: 5
  2077   0034BC  0E25               	movlw	37
  2078   0034BE  197D               	xorwf	manualboot@c& (0+255),w,b
  2079   0034C0  117E               	iorwf	(manualboot@c+1)& (0+255),w,b
  2080   0034C2  B4D8               	btfsc	status,2,c
  2081   0034C4  EF66  F01A         	goto	u2381
  2082   0034C8  EF68  F01A         	goto	u2380
  2083   0034CC                     u2381:
  2084   0034CC  EF6A  F01A         	goto	l2845
  2085   0034D0                     u2380:
  2086   0034D0                     
  2087                           ; BSR set to: 5
  2088   0034D0  0E00               	movlw	0
  2089   0034D2  6F6C               	movwf	_manualboot$362& (0+255),b
  2090   0034D4                     l2845:
  2091                           
  2092                           ; BSR set to: 5
  2093   0034D4  C56C  F56F         	movff	_manualboot$362,manualboot@addr_flag
  2094   0034D8  6B70               	clrf	(manualboot@addr_flag+1)& (0+255),b
  2095   0034DA                     
  2096                           ; BSR set to: 5
  2097                           ;bootload.c: 120:         cc = c;
  2098   0034DA  C57D  F56D         	movff	manualboot@c,manualboot@cc
  2099   0034DE  C57E  F56E         	movff	manualboot@c+1,manualboot@cc+1
  2100   0034E2                     
  2101                           ; BSR set to: 5
  2102                           ;bootload.c: 122:         if (!addr_flag)
  2103   0034E2  516F               	movf	manualboot@addr_flag& (0+255),w,b
  2104   0034E4  1170               	iorwf	(manualboot@addr_flag+1)& (0+255),w,b
  2105   0034E6  A4D8               	btfss	status,2,c
  2106   0034E8  EF78  F01A         	goto	u2391
  2107   0034EC  EF7A  F01A         	goto	u2390
  2108   0034F0                     u2391:
  2109   0034F0  EF80  F01A         	goto	l2853
  2110   0034F4                     u2390:
  2111   0034F4                     
  2112                           ; BSR set to: 5
  2113                           ;bootload.c: 123:             ungetchr(c);
  2114   0034F4  C57D  F501         	movff	manualboot@c,ungetchr@c
  2115   0034F8  C57E  F502         	movff	manualboot@c+1,ungetchr@c+1
  2116   0034FC  EC94  F01D         	call	_ungetchr	;wreg free
  2117   003500                     l2853:
  2118                           
  2119                           ;bootload.c: 125:         n = 0;
  2120   003500  0E00               	movlw	0
  2121   003502  0105               	movlb	5	; () banked
  2122   003504  6F78               	movwf	(manualboot@n+1)& (0+255),b
  2123   003506  0E00               	movlw	0
  2124   003508  6F77               	movwf	manualboot@n& (0+255),b
  2125                           
  2126                           ;bootload.c: 126:         while ((d = to_hex((unsigned char)(c = getchr()))) >= 0) {
  2127   00350A  EF94  F01A         	goto	l2857
  2128   00350E                     l2855:
  2129                           
  2130                           ; BSR set to: 5
  2131                           ;bootload.c: 127:             n *= 16; n += d;
  2132   00350E  3B77               	swapf	manualboot@n& (0+255),f,b
  2133   003510  3B78               	swapf	(manualboot@n+1)& (0+255),f,b
  2134   003512  0EF0               	movlw	240
  2135   003514  1778               	andwf	(manualboot@n+1)& (0+255),f,b
  2136   003516  5177               	movf	manualboot@n& (0+255),w,b
  2137   003518  0B0F               	andlw	15
  2138   00351A  1378               	iorwf	(manualboot@n+1)& (0+255),f,b
  2139   00351C  0EF0               	movlw	240
  2140   00351E  1777               	andwf	manualboot@n& (0+255),f,b
  2141   003520  5175               	movf	manualboot@d& (0+255),w,b
  2142   003522  2777               	addwf	manualboot@n& (0+255),f,b
  2143   003524  5176               	movf	(manualboot@d+1)& (0+255),w,b
  2144   003526  2378               	addwfc	(manualboot@n+1)& (0+255),f,b
  2145   003528                     l2857:
  2146                           
  2147                           ; BSR set to: 5
  2148                           ;bootload.c: 126:         while ((d = to_hex((unsigned char)(c = getchr()))) >= 0) {
  2149   003528  EC86  F01B         	call	_getchr	;wreg free
  2150   00352C  C503  F57D         	movff	?_getchr,manualboot@c
  2151   003530  C504  F57E         	movff	?_getchr+1,manualboot@c+1
  2152   003534  0105               	movlb	5	; () banked
  2153   003536  517D               	movf	manualboot@c& (0+255),w,b
  2154   003538  ECAC  F01C         	call	_to_hex
  2155   00353C  C501  F575         	movff	?_to_hex,manualboot@d
  2156   003540  C502  F576         	movff	?_to_hex+1,manualboot@d+1
  2157   003544  0105               	movlb	5	; () banked
  2158   003546  BF76               	btfsc	(manualboot@d+1)& (0+255),7,b
  2159   003548  EFAA  F01A         	goto	u2400
  2160   00354C  EFA8  F01A         	goto	u2401
  2161   003550                     u2401:
  2162   003550  EF87  F01A         	goto	l2855
  2163   003554                     u2400:
  2164   003554                     
  2165                           ; BSR set to: 5
  2166                           ;bootload.c: 131:         if (c < 0)
  2167   003554  BF7E               	btfsc	(manualboot@c+1)& (0+255),7,b
  2168   003556  EFB1  F01A         	goto	u2410
  2169   00355A  EFAF  F01A         	goto	u2411
  2170   00355E                     u2411:
  2171   00355E  EFB3  F01A         	goto	l2863
  2172   003562                     u2410:
  2173   003562  EF2A  F01B         	goto	l608
  2174   003566                     l2863:
  2175                           
  2176                           ; BSR set to: 5
  2177                           ;bootload.c: 133:         if (d < 0) {
  2178   003566  BF76               	btfsc	(manualboot@d+1)& (0+255),7,b
  2179   003568  EFBA  F01A         	goto	u2420
  2180   00356C  EFB8  F01A         	goto	u2421
  2181   003570                     u2421:
  2182   003570  EF44  F019         	goto	l2781
  2183   003574                     u2420:
  2184   003574                     
  2185                           ; BSR set to: 5
  2186                           ;bootload.c: 134:             if (addr_flag) {
  2187   003574  516F               	movf	manualboot@addr_flag& (0+255),w,b
  2188   003576  1170               	iorwf	(manualboot@addr_flag+1)& (0+255),w,b
  2189   003578  B4D8               	btfsc	status,2,c
  2190   00357A  EFC1  F01A         	goto	u2431
  2191   00357E  EFC3  F01A         	goto	u2430
  2192   003582                     u2431:
  2193   003582  EFE3  F01A         	goto	l2875
  2194   003586                     u2430:
  2195   003586                     
  2196                           ; BSR set to: 5
  2197                           ;bootload.c: 135:                 if (cc == '=')
  2198   003586  0E3D               	movlw	61
  2199   003588  196D               	xorwf	manualboot@cc& (0+255),w,b
  2200   00358A  116E               	iorwf	(manualboot@cc+1)& (0+255),w,b
  2201   00358C  A4D8               	btfss	status,2,c
  2202   00358E  EFCB  F01A         	goto	u2441
  2203   003592  EFCD  F01A         	goto	u2440
  2204   003596                     u2441:
  2205   003596  EFD3  F01A         	goto	l2871
  2206   00359A                     u2440:
  2207   00359A                     
  2208                           ; BSR set to: 5
  2209                           ;bootload.c: 136:                     addr = (addr_t)n;
  2210   00359A  C577  F57B         	movff	manualboot@n,manualboot@addr
  2211   00359E  C578  F57C         	movff	manualboot@n+1,manualboot@addr+1
  2212   0035A2  EF44  F019         	goto	l2781
  2213   0035A6                     l2871:
  2214                           
  2215                           ; BSR set to: 5
  2216   0035A6  0E25               	movlw	37
  2217   0035A8  196D               	xorwf	manualboot@cc& (0+255),w,b
  2218   0035AA  116E               	iorwf	(manualboot@cc+1)& (0+255),w,b
  2219   0035AC  A4D8               	btfss	status,2,c
  2220   0035AE  EFDB  F01A         	goto	u2451
  2221   0035B2  EFDD  F01A         	goto	u2450
  2222   0035B6                     u2451:
  2223   0035B6  EF44  F019         	goto	l2781
  2224   0035BA                     u2450:
  2225   0035BA                     
  2226                           ; BSR set to: 5
  2227                           ;bootload.c: 138:                     break_address = (addr_t)n;
  2228   0035BA  C577  F598         	movff	manualboot@n,_break_address
  2229   0035BE  C578  F599         	movff	manualboot@n+1,_break_address+1
  2230   0035C2  EF44  F019         	goto	l2781
  2231   0035C6                     l2875:
  2232                           
  2233                           ; BSR set to: 5
  2234                           ;bootload.c: 140:                 if (((addr_t)0xF000) <= addr && addr <= (((addr_t)0xF0
      +                          00) + ((addr_t)0x1000) - 1)) {
  2235   0035C6  0EF0               	movlw	240
  2236   0035C8  5D7C               	subwf	(manualboot@addr+1)& (0+255),w,b
  2237   0035CA  A0D8               	btfss	status,0,c
  2238   0035CC  EFEA  F01A         	goto	u2461
  2239   0035D0  EFEC  F01A         	goto	u2460
  2240   0035D4                     u2461:
  2241   0035D4  EF44  F019         	goto	l575
  2242   0035D8                     u2460:
  2243   0035D8                     
  2244                           ; BSR set to: 5
  2245                           ;bootload.c: 142:                     poke_ram(addr++, ((n>>8) & 0xff));
  2246   0035D8  C57B  F501         	movff	manualboot@addr,poke_ram@addr
  2247   0035DC  C57C  F502         	movff	manualboot@addr+1,poke_ram@addr+1
  2248   0035E0  5178               	movf	(manualboot@n+1)& (0+255),w,b
  2249   0035E2  6E03               	movwf	poke_ram@c^(0+1280),c
  2250   0035E4  EC51  F01D         	call	_poke_ram	;wreg free
  2251   0035E8  0105               	movlb	5	; () banked
  2252   0035EA  4B7B               	infsnz	manualboot@addr& (0+255),f,b
  2253   0035EC  2B7C               	incf	(manualboot@addr+1)& (0+255),f,b
  2254   0035EE                     
  2255                           ; BSR set to: 5
  2256                           ;bootload.c: 143:                     poke_ram(addr++, (n & 0xff));
  2257   0035EE  C57B  F501         	movff	manualboot@addr,poke_ram@addr
  2258   0035F2  C57C  F502         	movff	manualboot@addr+1,poke_ram@addr+1
  2259   0035F6  C577  F503         	movff	manualboot@n,poke_ram@c
  2260   0035FA  EC51  F01D         	call	_poke_ram	;wreg free
  2261   0035FE  0105               	movlb	5	; () banked
  2262   003600  4B7B               	infsnz	manualboot@addr& (0+255),f,b
  2263   003602  2B7C               	incf	(manualboot@addr+1)& (0+255),f,b
  2264   003604                     
  2265                           ; BSR set to: 5
  2266                           ;bootload.c: 144:                     if (max < addr)
  2267   003604  517B               	movf	manualboot@addr& (0+255),w,b
  2268   003606  5D71               	subwf	manualboot@max& (0+255),w,b
  2269   003608  517C               	movf	(manualboot@addr+1)& (0+255),w,b
  2270   00360A  5972               	subwfb	(manualboot@max+1)& (0+255),w,b
  2271   00360C  B0D8               	btfsc	status,0,c
  2272   00360E  EF0B  F01B         	goto	u2471
  2273   003612  EF0D  F01B         	goto	u2470
  2274   003616                     u2471:
  2275   003616  EF11  F01B         	goto	l2887
  2276   00361A                     u2470:
  2277   00361A                     
  2278                           ; BSR set to: 5
  2279                           ;bootload.c: 145:                         max = addr;
  2280   00361A  C57B  F571         	movff	manualboot@addr,manualboot@max
  2281   00361E  C57C  F572         	movff	manualboot@addr+1,manualboot@max+1
  2282   003622                     l2887:
  2283                           
  2284                           ; BSR set to: 5
  2285                           ;bootload.c: 146:                     if (addr - 2 < min)
  2286   003622  0EFE               	movlw	254
  2287   003624  257B               	addwf	manualboot@addr& (0+255),w,b
  2288   003626  6F68               	movwf	??_manualboot& (0+255),b
  2289   003628  0EFF               	movlw	255
  2290   00362A  217C               	addwfc	(manualboot@addr+1)& (0+255),w,b
  2291   00362C  6F69               	movwf	(??_manualboot+1)& (0+255),b
  2292   00362E  5173               	movf	manualboot@min& (0+255),w,b
  2293   003630  5D68               	subwf	??_manualboot& (0+255),w,b
  2294   003632  5174               	movf	(manualboot@min+1)& (0+255),w,b
  2295   003634  5969               	subwfb	(??_manualboot+1)& (0+255),w,b
  2296   003636  B0D8               	btfsc	status,0,c
  2297   003638  EF20  F01B         	goto	u2481
  2298   00363C  EF22  F01B         	goto	u2480
  2299   003640                     u2481:
  2300   003640  EF44  F019         	goto	l2781
  2301   003644                     u2480:
  2302   003644                     
  2303                           ; BSR set to: 5
  2304                           ;bootload.c: 147:                         min = addr - 2;
  2305   003644  0EFE               	movlw	254
  2306   003646  257B               	addwf	manualboot@addr& (0+255),w,b
  2307   003648  6F73               	movwf	manualboot@min& (0+255),b
  2308   00364A  0EFF               	movlw	255
  2309   00364C  217C               	addwfc	(manualboot@addr+1)& (0+255),w,b
  2310   00364E  6F74               	movwf	(manualboot@min+1)& (0+255),b
  2311   003650  EF44  F019         	goto	l2781
  2312   003654                     l608:
  2313                           
  2314                           ; BSR set to: 5
  2315   003654  0012               	return		;funcret
  2316   003656                     __end_of_manualboot:
  2317                           	callstack 0
  2318                           
  2319 ;; *************** function _ungetchr *****************
  2320 ;; Defined at:
  2321 ;;		line 35 in file "bootload.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  c               2    0[COMRAM] int 
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		None
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2339 ;;Total ram usage:        2 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_manualboot
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text3
  2349   003B28                     __ptext3:
  2350                           	callstack 0
  2351   003B28                     _ungetchr:
  2352                           	callstack 125
  2353   003B28                     
  2354                           ;bootload.c: 35: void ungetchr(int c);bootload.c: 36: {;bootload.c: 37:     uc = c;
  2355   003B28  C501  F5A4         	movff	ungetchr@c,_uc
  2356   003B2C  C502  F5A5         	movff	ungetchr@c+1,_uc+1
  2357   003B30  0012               	return		;funcret
  2358   003B32                     __end_of_ungetchr:
  2359                           	callstack 0
  2360                           
  2361 ;; *************** function _to_hex *****************
  2362 ;; Defined at:
  2363 ;;		line 48 in file "bootload.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  c               1    wreg     unsigned char 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  c               1    2[COMRAM] unsigned char 
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  2    0[COMRAM] int 
  2370 ;; Registers used:
  2371 ;;		wreg, status,2, status,0
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2380 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2381 ;;Total ram usage:        3 bytes
  2382 ;; Hardware stack levels used: 1
  2383 ;; This function calls:
  2384 ;;		Nothing
  2385 ;; This function is called by:
  2386 ;;		_manualboot
  2387 ;;		_monitor
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text4
  2392   003958                     __ptext4:
  2393                           	callstack 0
  2394   003958                     _to_hex:
  2395                           	callstack 125
  2396                           
  2397                           ;incstack = 0
  2398                           ;to_hex@c stored from wreg
  2399   003958  6E03               	movwf	to_hex@c^(0+1280),c
  2400   00395A                     
  2401                           ;bootload.c: 48: int to_hex(char c);bootload.c: 49: {;bootload.c: 51:     if ('0' <= c &
      +                          & c <= '9')
  2402   00395A  0E2F               	movlw	47
  2403   00395C  6403               	cpfsgt	to_hex@c^(0+1280),c
  2404   00395E  EFB3  F01C         	goto	u2141
  2405   003962  EFB5  F01C         	goto	u2140
  2406   003966                     u2141:
  2407   003966  EFC5  F01C         	goto	l2731
  2408   00396A                     u2140:
  2409   00396A  0E3A               	movlw	58
  2410   00396C  6003               	cpfslt	to_hex@c^(0+1280),c
  2411   00396E  EFBB  F01C         	goto	u2151
  2412   003972  EFBD  F01C         	goto	u2150
  2413   003976                     u2151:
  2414   003976  EFC5  F01C         	goto	l2731
  2415   00397A                     u2150:
  2416   00397A                     
  2417                           ;bootload.c: 52:         return c - '0';
  2418   00397A  0ED0               	movlw	208
  2419   00397C  2403               	addwf	to_hex@c^(0+1280),w,c
  2420   00397E  6E01               	movwf	?_to_hex^(0+1280),c
  2421   003980  6A02               	clrf	(?_to_hex+1)^(0+1280),c
  2422   003982  0EFF               	movlw	255
  2423   003984  2202               	addwfc	(?_to_hex+1)^(0+1280),f,c
  2424   003986  EFE0  F01C         	goto	l564
  2425   00398A                     l2731:
  2426                           
  2427                           ;bootload.c: 53:     c &= ~0x20;
  2428   00398A  9A03               	bcf	to_hex@c^(0+1280),5,c
  2429   00398C                     
  2430                           ;bootload.c: 54:     if ('A' <= c && c <= 'F')
  2431   00398C  0E40               	movlw	64
  2432   00398E  6403               	cpfsgt	to_hex@c^(0+1280),c
  2433   003990  EFCC  F01C         	goto	u2161
  2434   003994  EFCE  F01C         	goto	u2160
  2435   003998                     u2161:
  2436   003998  EFDE  F01C         	goto	l565
  2437   00399C                     u2160:
  2438   00399C  0E47               	movlw	71
  2439   00399E  6003               	cpfslt	to_hex@c^(0+1280),c
  2440   0039A0  EFD4  F01C         	goto	u2171
  2441   0039A4  EFD6  F01C         	goto	u2170
  2442   0039A8                     u2171:
  2443   0039A8  EFDE  F01C         	goto	l565
  2444   0039AC                     u2170:
  2445   0039AC                     
  2446                           ;bootload.c: 55:         return c - 'A' + 10;
  2447   0039AC  0EC9               	movlw	201
  2448   0039AE  2403               	addwf	to_hex@c^(0+1280),w,c
  2449   0039B0  6E01               	movwf	?_to_hex^(0+1280),c
  2450   0039B2  6A02               	clrf	(?_to_hex+1)^(0+1280),c
  2451   0039B4  0EFF               	movlw	255
  2452   0039B6  2202               	addwfc	(?_to_hex+1)^(0+1280),f,c
  2453   0039B8  EFE0  F01C         	goto	l564
  2454   0039BC                     l565:
  2455                           
  2456                           ;bootload.c: 56:     return -1;
  2457   0039BC  6801               	setf	?_to_hex^(0+1280),c
  2458   0039BE  6802               	setf	(?_to_hex+1)^(0+1280),c
  2459   0039C0                     l564:
  2460   0039C0  0012               	return		;funcret
  2461   0039C2                     __end_of_to_hex:
  2462                           	callstack 0
  2463                           
  2464 ;; *************** function _peek_ram *****************
  2465 ;; Defined at:
  2466 ;;		line 158 in file "main.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  addr            2    0[COMRAM] unsigned short 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      unsigned char 
  2473 ;; Registers used:
  2474 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2483 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2484 ;;Total ram usage:        4 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_manualboot
  2490 ;;		_march_test
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text5
  2495   003AC0                     __ptext5:
  2496                           	callstack 0
  2497   003AC0                     _peek_ram:
  2498                           	callstack 125
  2499   003AC0                     
  2500                           ;main.c: 158: char peek_ram(addr_t addr);main.c: 159: {;main.c: 160:     return ram[addr
      +                           & 0xfff];
  2501   003AC0  0EFF               	movlw	255
  2502   003AC2  1401               	andwf	peek_ram@addr^(0+1280),w,c
  2503   003AC4  6E03               	movwf	??_peek_ram^(0+1280),c
  2504   003AC6  0E0F               	movlw	15
  2505   003AC8  1402               	andwf	(peek_ram@addr+1)^(0+1280),w,c
  2506   003ACA  6E04               	movwf	(??_peek_ram+1)^(0+1280),c
  2507   003ACC  0E00               	movlw	low _ram
  2508   003ACE  2403               	addwf	??_peek_ram^(0+1280),w,c
  2509   003AD0  6ED9               	movwf	fsr2l,c
  2510   003AD2  0E15               	movlw	high _ram
  2511   003AD4  2004               	addwfc	(??_peek_ram+1)^(0+1280),w,c
  2512   003AD6  6EDA               	movwf	fsr2h,c
  2513   003AD8  50DF               	movf	indf2,w,c
  2514   003ADA  0012               	return		;funcret
  2515   003ADC                     __end_of_peek_ram:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function _getchr *****************
  2519 ;; Defined at:
  2520 ;;		line 16 in file "bootload.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  c               2    6[COMRAM] int 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  2    2[COMRAM] int 
  2527 ;; Registers used:
  2528 ;;		wreg, status,2, status,0, cstack
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2537 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2538 ;;Total ram usage:        6 bytes
  2539 ;; Hardware stack levels used: 1
  2540 ;; Hardware stack levels required when called: 1
  2541 ;; This function calls:
  2542 ;;		_getchx
  2543 ;; This function is called by:
  2544 ;;		_manualboot
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text6
  2549   00370C                     __ptext6:
  2550                           	callstack 0
  2551   00370C                     _getchr:
  2552                           	callstack 124
  2553   00370C                     
  2554                           ;bootload.c: 18:     static int count = 0;;bootload.c: 19:     int c;;bootload.c: 20:   
      +                            if (uc >= 0) {
  2555   00370C  0105               	movlb	5	; () banked
  2556   00370E  BFA5               	btfsc	(_uc+1)& (0+255),7,b
  2557   003710  EF8C  F01B         	goto	u2101
  2558   003714  EF8E  F01B         	goto	u2100
  2559   003718                     u2101:
  2560   003718  EF9A  F01B         	goto	l2703
  2561   00371C                     u2100:
  2562   00371C                     
  2563                           ; BSR set to: 5
  2564                           ;bootload.c: 21:         c = uc;
  2565   00371C  C5A4  F507         	movff	_uc,getchr@c
  2566   003720  C5A5  F508         	movff	_uc+1,getchr@c+1
  2567                           
  2568                           ;bootload.c: 22:         uc = -1;
  2569   003724  69A4               	setf	_uc& (0+255),b
  2570   003726  69A5               	setf	(_uc+1)& (0+255),b
  2571                           
  2572                           ;bootload.c: 23:         return c;
  2573   003728  C507  F503         	movff	getchr@c,?_getchr
  2574   00372C  C508  F504         	movff	getchr@c+1,?_getchr+1
  2575   003730  EFDB  F01B         	goto	l545
  2576   003734                     l2703:
  2577                           
  2578                           ; BSR set to: 5
  2579   003734  EC6E  F01D         	call	_getchx	;wreg free
  2580   003738  C501  F507         	movff	?_getchx,getchr@c
  2581   00373C  C502  F508         	movff	?_getchx+1,getchr@c+1
  2582   003740  0E2E               	movlw	46
  2583   003742  1807               	xorwf	getchr@c^(0+1280),w,c
  2584   003744  1008               	iorwf	(getchr@c+1)^(0+1280),w,c
  2585   003746  A4D8               	btfss	status,2,c
  2586   003748  EFA8  F01B         	goto	u2111
  2587   00374C  EFAA  F01B         	goto	u2110
  2588   003750                     u2111:
  2589   003750  EFBF  F01B         	goto	l2707
  2590   003754                     u2110:
  2591   003754  0105               	movlb	5	; () banked
  2592   003756  5190               	movf	getchr@count& (0+255),w,b
  2593   003758  6E05               	movwf	??_getchr^(0+1280),c
  2594   00375A  5191               	movf	(getchr@count+1)& (0+255),w,b
  2595   00375C  6E06               	movwf	(??_getchr+1)^(0+1280),c
  2596   00375E  4B90               	infsnz	getchr@count& (0+255),f,b
  2597   003760  2B91               	incf	(getchr@count+1)& (0+255),f,b
  2598   003762  BE06               	btfsc	(??_getchr+1)^(0+1280),7,c
  2599   003764  EFBD  F01B         	goto	u2121
  2600   003768  5006               	movf	(??_getchr+1)^(0+1280),w,c
  2601   00376A  E109               	bnz	u2120
  2602   00376C  0E02               	movlw	2
  2603   00376E  5C05               	subwf	??_getchr^(0+1280),w,c
  2604   003770  A0D8               	btfss	status,0,c
  2605   003772  EFBD  F01B         	goto	u2121
  2606   003776  EFBF  F01B         	goto	u2120
  2607   00377A                     u2121:
  2608   00377A  EF9A  F01B         	goto	l2703
  2609   00377E                     u2120:
  2610   00377E                     l2707:
  2611                           
  2612                           ;bootload.c: 26:     if (c == '.') {
  2613   00377E  0E2E               	movlw	46
  2614   003780  1807               	xorwf	getchr@c^(0+1280),w,c
  2615   003782  1008               	iorwf	(getchr@c+1)^(0+1280),w,c
  2616   003784  A4D8               	btfss	status,2,c
  2617   003786  EFC7  F01B         	goto	u2131
  2618   00378A  EFC9  F01B         	goto	u2130
  2619   00378E                     u2131:
  2620   00378E  EFD2  F01B         	goto	l2715
  2621   003792                     u2130:
  2622   003792                     
  2623                           ;bootload.c: 27:         count = 0;
  2624   003792  0E00               	movlw	0
  2625   003794  0105               	movlb	5	; () banked
  2626   003796  6F91               	movwf	(getchr@count+1)& (0+255),b
  2627   003798  0E00               	movlw	0
  2628   00379A  6F90               	movwf	getchr@count& (0+255),b
  2629   00379C                     
  2630                           ; BSR set to: 5
  2631                           ;bootload.c: 28:         return -1;
  2632   00379C  6803               	setf	?_getchr^(0+1280),c
  2633   00379E  6804               	setf	(?_getchr+1)^(0+1280),c
  2634   0037A0  EFDB  F01B         	goto	l545
  2635   0037A4                     l2715:
  2636                           
  2637                           ;bootload.c: 30:     count = 0;
  2638   0037A4  0E00               	movlw	0
  2639   0037A6  0105               	movlb	5	; () banked
  2640   0037A8  6F91               	movwf	(getchr@count+1)& (0+255),b
  2641   0037AA  0E00               	movlw	0
  2642   0037AC  6F90               	movwf	getchr@count& (0+255),b
  2643   0037AE                     
  2644                           ; BSR set to: 5
  2645                           ;bootload.c: 32:     return c;
  2646   0037AE  C507  F503         	movff	getchr@c,?_getchr
  2647   0037B2  C508  F504         	movff	getchr@c+1,?_getchr+1
  2648   0037B6                     l545:
  2649                           
  2650                           ; BSR set to: 5
  2651   0037B6  0012               	return		;funcret
  2652   0037B8                     __end_of_getchr:
  2653                           	callstack 0
  2654                           
  2655 ;; *************** function _getchx *****************
  2656 ;; Defined at:
  2657 ;;		line 106 in file "main.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;		None
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;		None
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  2    0[COMRAM] int 
  2664 ;; Registers used:
  2665 ;;		None
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2675 ;;Total ram usage:        2 bytes
  2676 ;; Hardware stack levels used: 1
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_main
  2681 ;;		_getchr
  2682 ;;		_xgets
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text7
  2687   003ADC                     __ptext7:
  2688                           	callstack 0
  2689   003ADC                     _getchx:
  2690                           	callstack 124
  2691   003ADC                     l177:
  2692   003ADC  0102               	movlb	2	; () banked
  2693   003ADE  B3D6               	btfsc	214,1,b	;volatile
  2694   003AE0  EF74  F01D         	goto	u2091
  2695   003AE4  EF76  F01D         	goto	u2090
  2696   003AE8                     u2091:
  2697   003AE8  EF6E  F01D         	goto	l177
  2698   003AEC                     u2090:
  2699   003AEC                     
  2700                           ; BSR set to: 2
  2701                           ;main.c: 108:     return U3RXB;
  2702   003AEC  C2C7 F501          	movff	711,?_getchx	;volatile
  2703   003AF0  6A02               	clrf	(?_getchx+1)^(0+1280),c
  2704   003AF2                     
  2705                           ; BSR set to: 2
  2706   003AF2  0012               	return		;funcret
  2707   003AF4                     __end_of_getchx:
  2708                           	callstack 0
  2709                           
  2710 ;; *************** function _clear_all *****************
  2711 ;; Defined at:
  2712 ;;		line 59 in file "bootload.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  p               2    6[BANK5 ] unsigned short 
  2717 ;;  i               2    4[BANK5 ] int 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2728 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2729 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2730 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2731 ;;Total ram usage:        6 bytes
  2732 ;; Hardware stack levels used: 1
  2733 ;; Hardware stack levels required when called: 4
  2734 ;; This function calls:
  2735 ;;		_poke_ram
  2736 ;;		_xprintf
  2737 ;; This function is called by:
  2738 ;;		_manualboot
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           	psect	text8
  2743   0038E4                     __ptext8:
  2744                           	callstack 0
  2745   0038E4                     _clear_all:
  2746                           	callstack 121
  2747   0038E4                     
  2748                           ;bootload.c: 61:     addr_t p = 0;
  2749   0038E4  0E00               	movlw	0
  2750   0038E6  0105               	movlb	5	; () banked
  2751   0038E8  6F67               	movwf	(clear_all@p+1)& (0+255),b
  2752   0038EA  0E00               	movlw	0
  2753   0038EC  6F66               	movwf	clear_all@p& (0+255),b
  2754                           
  2755                           ;bootload.c: 62:     int i = 0;
  2756   0038EE  0E00               	movlw	0
  2757   0038F0  6F65               	movwf	(clear_all@i+1)& (0+255),b
  2758   0038F2  0E00               	movlw	0
  2759   0038F4  6F64               	movwf	clear_all@i& (0+255),b
  2760   0038F6                     l2743:
  2761                           
  2762                           ; BSR set to: 5
  2763                           ;bootload.c: 64:         if ((p & 0xfff) == 0) {
  2764   0038F6  0EFF               	movlw	255
  2765   0038F8  1566               	andwf	clear_all@p& (0+255),w,b
  2766   0038FA  6F62               	movwf	??_clear_all& (0+255),b
  2767   0038FC  0E0F               	movlw	15
  2768   0038FE  1567               	andwf	(clear_all@p+1)& (0+255),w,b
  2769   003900  6F63               	movwf	(??_clear_all+1)& (0+255),b
  2770   003902  5162               	movf	??_clear_all& (0+255),w,b
  2771   003904  1163               	iorwf	(??_clear_all+1)& (0+255),w,b
  2772   003906  A4D8               	btfss	status,2,c
  2773   003908  EF88  F01C         	goto	u2181
  2774   00390C  EF8A  F01C         	goto	u2180
  2775   003910                     u2181:
  2776   003910  EF97  F01C         	goto	l2749
  2777   003914                     u2180:
  2778   003914                     
  2779                           ; BSR set to: 5
  2780                           ;bootload.c: 65:             xprintf("%X", i++);
  2781   003914  0E4B               	movlw	low STR_4
  2782   003916  6E56               	movwf	xprintf@fmt^(0+1280),c
  2783   003918  0E26               	movlw	high STR_4
  2784   00391A  6E57               	movwf	(xprintf@fmt+1)^(0+1280),c
  2785   00391C  C564  F558         	movff	clear_all@i,?_xprintf+2
  2786   003920  C565  F559         	movff	clear_all@i+1,?_xprintf+3
  2787   003924  EC28  F01D         	call	_xprintf	;wreg free
  2788   003928  0105               	movlb	5	; () banked
  2789   00392A  4B64               	infsnz	clear_all@i& (0+255),f,b
  2790   00392C  2B65               	incf	(clear_all@i+1)& (0+255),f,b
  2791   00392E                     l2749:
  2792                           
  2793                           ; BSR set to: 5
  2794                           ;bootload.c: 67:         poke_ram(p, 0);
  2795   00392E  C566  F501         	movff	clear_all@p,poke_ram@addr
  2796   003932  C567  F502         	movff	clear_all@p+1,poke_ram@addr+1
  2797   003936  0E00               	movlw	0
  2798   003938  6E03               	movwf	poke_ram@c^(0+1280),c
  2799   00393A  EC51  F01D         	call	_poke_ram	;wreg free
  2800   00393E                     
  2801                           ;bootload.c: 68:     } while (p++ != 0xffff);
  2802   00393E  0105               	movlb	5	; () banked
  2803   003940  4B66               	infsnz	clear_all@p& (0+255),f,b
  2804   003942  2B67               	incf	(clear_all@p+1)& (0+255),f,b
  2805   003944  5166               	movf	clear_all@p& (0+255),w,b
  2806   003946  1167               	iorwf	(clear_all@p+1)& (0+255),w,b
  2807   003948  A4D8               	btfss	status,2,c
  2808   00394A  EFA9  F01C         	goto	u2191
  2809   00394E  EFAB  F01C         	goto	u2190
  2810   003952                     u2191:
  2811   003952  EF7B  F01C         	goto	l2743
  2812   003956                     u2190:
  2813   003956                     
  2814                           ; BSR set to: 5
  2815   003956  0012               	return		;funcret
  2816   003958                     __end_of_clear_all:
  2817                           	callstack 0
  2818                           
  2819 ;; *************** function _xprintf *****************
  2820 ;; Defined at:
  2821 ;;		line 375 in file "xprintf.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  2824 ;;		 -> STR_17(18), STR_16(8), STR_15(18), STR_14(18), 
  2825 ;;		 -> STR_13(2), STR_12(11), STR_11(5), STR_10(16), 
  2826 ;;		 -> STR_9(8), STR_8(4), STR_7(2), STR_6(6), 
  2827 ;;		 -> STR_5(6), STR_4(3), STR_2(4), STR_1(2), 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  arp             2    0[BANK5 ] PTR void [1]
  2830 ;;		 -> ?_xsnprintf(1), ?_xfprintf(1), ?_xprintf(1), 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  1    wreg      void 
  2833 ;; Registers used:
  2834 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2840 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2841 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2843 ;;      Totals:        10       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2844 ;;Total ram usage:       12 bytes
  2845 ;; Hardware stack levels used: 1
  2846 ;; Hardware stack levels required when called: 3
  2847 ;; This function calls:
  2848 ;;		_xvfprintf
  2849 ;; This function is called by:
  2850 ;;		_main
  2851 ;;		_clear_all
  2852 ;;		_manualboot
  2853 ;;		_monitor
  2854 ;;		_march_test
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text9
  2859   003A50                     __ptext9:
  2860                           	callstack 0
  2861   003A50                     _xprintf:
  2862                           	callstack 123
  2863   003A50                     
  2864                           ;xprintf.c: 376:  const char* fmt,;xprintf.c: 379: {;xprintf.c: 380:  va_list arp;;xprin
      +                          tf.c: 383:  *arp = __va_start();
  2865   003A50  0E58               	movlw	low (?_xprintf+2)
  2866   003A52  0105               	movlb	5	; () banked
  2867   003A54  6F60               	movwf	xprintf@arp& (0+255),b
  2868   003A56  0E05               	movlw	high (?_xprintf+2)
  2869   003A58  6F61               	movwf	(xprintf@arp+1)& (0+255),b
  2870   003A5A                     
  2871                           ; BSR set to: 5
  2872                           ;xprintf.c: 384:  xvfprintf(xfunc_output, fmt, arp);
  2873   003A5A  C58B  F50E         	movff	_xfunc_output,xvfprintf@func
  2874   003A5E  C58C  F50F         	movff	_xfunc_output+1,xvfprintf@func+1
  2875   003A62  C58D  F510         	movff	_xfunc_output+2,xvfprintf@func+2
  2876   003A66  C556  F511         	movff	xprintf@fmt,xvfprintf@fmt
  2877   003A6A  C557  F512         	movff	xprintf@fmt+1,xvfprintf@fmt+1
  2878   003A6E  0E60               	movlw	low xprintf@arp
  2879   003A70  6E13               	movwf	xvfprintf@arp^(0+1280),c
  2880   003A72  0E05               	movlw	high xprintf@arp
  2881   003A74  6E14               	movwf	(xvfprintf@arp+1)^(0+1280),c
  2882   003A76  EC29  F013         	call	_xvfprintf	;wreg free
  2883   003A7A  0012               	return		;funcret
  2884   003A7C                     __end_of_xprintf:
  2885                           	callstack 0
  2886                           
  2887 ;; *************** function _xvfprintf *****************
  2888 ;; Defined at:
  2889 ;;		line 235 in file "xprintf.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  func            3   13[COMRAM] PTR FTN(int ,)void 
  2892 ;;		 -> Absolute function(1), putchx(1), 
  2893 ;;  fmt             2   16[COMRAM] PTR const unsigned char 
  2894 ;;		 -> STR_17(18), STR_16(8), STR_15(18), STR_14(18), 
  2895 ;;		 -> STR_13(2), STR_12(11), STR_11(5), STR_10(16), 
  2896 ;;		 -> STR_9(8), STR_8(4), STR_7(2), STR_6(6), 
  2897 ;;		 -> STR_5(6), STR_4(3), STR_2(4), STR_1(2), 
  2898 ;;  arp             2   18[COMRAM] PTR PTR void 
  2899 ;;		 -> xsnprintf@arp(2), xfprintf@arp(2), xprintf@arp(2), 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  str            32   24[COMRAM] unsigned char [32]
  2902 ;;  v               4   68[COMRAM] long 
  2903 ;;  uv              4   62[COMRAM] unsigned long 
  2904 ;;  i               2   82[COMRAM] int 
  2905 ;;  j               2   80[COMRAM] int 
  2906 ;;  prec            2   78[COMRAM] int 
  2907 ;;  w               2   76[COMRAM] unsigned int 
  2908 ;;  f               2   74[COMRAM] unsigned int 
  2909 ;;  p               2   72[COMRAM] PTR unsigned char 
  2910 ;;		 -> ?_xsnprintf(1), ?_xfprintf(1), ?_xprintf(1), STR_3(1), 
  2911 ;;  n               2   66[COMRAM] int 
  2912 ;;  r               2   60[COMRAM] unsigned int 
  2913 ;;  c               1   84[COMRAM] unsigned char 
  2914 ;;  pad             1   59[COMRAM] unsigned char 
  2915 ;;  d               1   58[COMRAM] unsigned char 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2925 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2926 ;;      Locals:        61       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2927 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2928 ;;      Totals:        72       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2929 ;;Total ram usage:       72 bytes
  2930 ;; Hardware stack levels used: 1
  2931 ;; Hardware stack levels required when called: 2
  2932 ;; This function calls:
  2933 ;;		___lldiv
  2934 ;;		___llmod
  2935 ;;		___wmul
  2936 ;;		_strlen
  2937 ;;		_xfputc
  2938 ;; This function is called by:
  2939 ;;		_xprintf
  2940 ;;		_xfprintf
  2941 ;;		_xsnprintf
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	text10
  2946   002652                     __ptext10:
  2947                           	callstack 0
  2948   002652                     _xvfprintf:
  2949                           	callstack 123
  2950   002652                     l381:
  2951   002652                     
  2952                           ;xprintf.c: 255:   c = *fmt++;
  2953   002652  C511  F4F6         	movff	xvfprintf@fmt,tblptrl
  2954   002656  C512  F4F7         	movff	xvfprintf@fmt+1,tblptrh
  2955   00265A                     	if	0	;tblptru may be non-zero
  2956   00265A                     	endif
  2957   00265A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2958   00265A  0E00               	movlw	low (__mediumconst shr (0+16))
  2959   00265C  6EF8               	movwf	tblptru,c
  2960   00265E                     	endif
  2961   00265E  0008               	tblrd		*
  2962   002660  C4F5 F555          	movff	tablat,xvfprintf@c
  2963   002664  4A11               	infsnz	xvfprintf@fmt^(0+1280),f,c
  2964   002666  2A12               	incf	(xvfprintf@fmt+1)^(0+1280),f,c
  2965   002668                     
  2966                           ;xprintf.c: 256:   if (!c) break;
  2967   002668  5055               	movf	xvfprintf@c^(0+1280),w,c
  2968   00266A  A4D8               	btfss	status,2,c
  2969   00266C  EF3A  F013         	goto	u1721
  2970   002670  EF3C  F013         	goto	u1720
  2971   002674                     u1721:
  2972   002674  EF3E  F013         	goto	l2475
  2973   002678                     u1720:
  2974   002678  EF2B  F017         	goto	l460
  2975   00267C                     l2475:
  2976                           
  2977                           ;xprintf.c: 257:   if (c != '%') {
  2978   00267C  0E25               	movlw	37
  2979   00267E  1855               	xorwf	xvfprintf@c^(0+1280),w,c
  2980   002680  B4D8               	btfsc	status,2,c
  2981   002682  EF45  F013         	goto	u1731
  2982   002686  EF47  F013         	goto	u1730
  2983   00268A                     u1731:
  2984   00268A  EF54  F013         	goto	l2479
  2985   00268E                     u1730:
  2986   00268E                     l2477:
  2987                           
  2988                           ;xprintf.c: 258:    xfputc(func, c); continue;
  2989   00268E  C50E  F503         	movff	xvfprintf@func,xfputc@func
  2990   002692  C50F  F504         	movff	xvfprintf@func+1,xfputc@func+1
  2991   002696  C510  F505         	movff	xvfprintf@func+2,xfputc@func+2
  2992   00269A  C555  F506         	movff	xvfprintf@c,xfputc@chr
  2993   00269E  6A07               	clrf	(xfputc@chr+1)^(0+1280),c
  2994   0026A0  EC2B  F01B         	call	_xfputc	;wreg free
  2995   0026A4  EF29  F013         	goto	l381
  2996   0026A8                     l2479:
  2997                           
  2998                           ;xprintf.c: 260:   f = w = 0;
  2999   0026A8  0E00               	movlw	0
  3000   0026AA  6E4E               	movwf	(xvfprintf@w+1)^(0+1280),c
  3001   0026AC  0E00               	movlw	0
  3002   0026AE  6E4D               	movwf	xvfprintf@w^(0+1280),c
  3003   0026B0  C54D  F54B         	movff	xvfprintf@w,xvfprintf@f
  3004   0026B4  C54E  F54C         	movff	xvfprintf@w+1,xvfprintf@f+1
  3005                           
  3006                           ;xprintf.c: 261:   pad = ' '; prec = -1;
  3007   0026B8  0E20               	movlw	32
  3008   0026BA  6E3C               	movwf	xvfprintf@pad^(0+1280),c
  3009   0026BC  684F               	setf	xvfprintf@prec^(0+1280),c
  3010   0026BE  6850               	setf	(xvfprintf@prec+1)^(0+1280),c
  3011   0026C0                     
  3012                           ;xprintf.c: 262:   c = *fmt++;
  3013   0026C0  C511  F4F6         	movff	xvfprintf@fmt,tblptrl
  3014   0026C4  C512  F4F7         	movff	xvfprintf@fmt+1,tblptrh
  3015   0026C8                     	if	0	;tblptru may be non-zero
  3016   0026C8                     	endif
  3017   0026C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3018   0026C8  0E00               	movlw	low (__mediumconst shr (0+16))
  3019   0026CA  6EF8               	movwf	tblptru,c
  3020   0026CC                     	endif
  3021   0026CC  0008               	tblrd		*
  3022   0026CE  C4F5 F555          	movff	tablat,xvfprintf@c
  3023   0026D2  4A11               	infsnz	xvfprintf@fmt^(0+1280),f,c
  3024   0026D4  2A12               	incf	(xvfprintf@fmt+1)^(0+1280),f,c
  3025   0026D6                     
  3026                           ;xprintf.c: 263:   if (c == '0') {
  3027   0026D6  0E30               	movlw	48
  3028   0026D8  1855               	xorwf	xvfprintf@c^(0+1280),w,c
  3029   0026DA  A4D8               	btfss	status,2,c
  3030   0026DC  EF72  F013         	goto	u1741
  3031   0026E0  EF74  F013         	goto	u1740
  3032   0026E4                     u1741:
  3033   0026E4  EF83  F013         	goto	l2495
  3034   0026E8                     u1740:
  3035   0026E8                     
  3036                           ;xprintf.c: 264:    pad = '0'; c = *fmt++;
  3037   0026E8  0E30               	movlw	48
  3038   0026EA  6E3C               	movwf	xvfprintf@pad^(0+1280),c
  3039   0026EC                     l2491:
  3040   0026EC  C511  F4F6         	movff	xvfprintf@fmt,tblptrl
  3041   0026F0  C512  F4F7         	movff	xvfprintf@fmt+1,tblptrh
  3042   0026F4                     	if	0	;tblptru may be non-zero
  3043   0026F4                     	endif
  3044   0026F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3045   0026F4  0E00               	movlw	low (__mediumconst shr (0+16))
  3046   0026F6  6EF8               	movwf	tblptru,c
  3047   0026F8                     	endif
  3048   0026F8  0008               	tblrd		*
  3049   0026FA  C4F5 F555          	movff	tablat,xvfprintf@c
  3050   0026FE  4A11               	infsnz	xvfprintf@fmt^(0+1280),f,c
  3051   002700  2A12               	incf	(xvfprintf@fmt+1)^(0+1280),f,c
  3052                           
  3053                           ;xprintf.c: 265:   } else {
  3054   002702  EF92  F013         	goto	l2503
  3055   002706                     l2495:
  3056                           
  3057                           ;xprintf.c: 266:    if (c == '-') {
  3058   002706  0E2D               	movlw	45
  3059   002708  1855               	xorwf	xvfprintf@c^(0+1280),w,c
  3060   00270A  A4D8               	btfss	status,2,c
  3061   00270C  EF8A  F013         	goto	u1751
  3062   002710  EF8C  F013         	goto	u1750
  3063   002714                     u1751:
  3064   002714  EF92  F013         	goto	l2503
  3065   002718                     u1750:
  3066   002718                     
  3067                           ;xprintf.c: 267:     f = 2; c = *fmt++;
  3068   002718  0E00               	movlw	0
  3069   00271A  6E4C               	movwf	(xvfprintf@f+1)^(0+1280),c
  3070   00271C  0E02               	movlw	2
  3071   00271E  6E4B               	movwf	xvfprintf@f^(0+1280),c
  3072   002720  EF76  F013         	goto	l2491
  3073   002724                     l2503:
  3074                           
  3075                           ;xprintf.c: 270:   if (c == '*') {
  3076   002724  0E2A               	movlw	42
  3077   002726  1855               	xorwf	xvfprintf@c^(0+1280),w,c
  3078   002728  A4D8               	btfss	status,2,c
  3079   00272A  EF99  F013         	goto	u1761
  3080   00272E  EF9B  F013         	goto	u1760
  3081   002732                     u1761:
  3082   002732  EFF2  F013         	goto	l2525
  3083   002736                     u1760:
  3084   002736                     
  3085                           ;xprintf.c: 271:    n = (*(int *)__va_arg(*(int **)arp, (int)0));
  3086   002736  C513  F4D9         	movff	xvfprintf@arp,fsr2l
  3087   00273A  C514  F4DA         	movff	xvfprintf@arp+1,fsr2h
  3088   00273E  C4DF F515          	movff	indf2,??_xvfprintf
  3089   002742  0E02               	movlw	2
  3090   002744  26DE               	addwf	postinc2,f,c
  3091   002746  C4DF F516          	movff	indf2,??_xvfprintf+1
  3092   00274A  0E00               	movlw	0
  3093   00274C  22DD               	addwfc	postdec2,f,c
  3094   00274E  C515  F4D9         	movff	??_xvfprintf,fsr2l
  3095   002752  C516  F4DA         	movff	??_xvfprintf+1,fsr2h
  3096   002756  C4DE F543          	movff	postinc2,xvfprintf@n
  3097   00275A  C4DD F544          	movff	postdec2,xvfprintf@n+1
  3098   00275E                     
  3099                           ;xprintf.c: 272:    if (n < 0) {
  3100   00275E  BE44               	btfsc	(xvfprintf@n+1)^(0+1280),7,c
  3101   002760  EFB6  F013         	goto	u1770
  3102   002764  EFB4  F013         	goto	u1771
  3103   002768                     u1771:
  3104   002768  EFC2  F013         	goto	l2513
  3105   00276C                     u1770:
  3106   00276C                     
  3107                           ;xprintf.c: 273:     n = 0 - n; f = 2;
  3108   00276C  5043               	movf	xvfprintf@n^(0+1280),w,c
  3109   00276E  0800               	sublw	0
  3110   002770  6E43               	movwf	xvfprintf@n^(0+1280),c
  3111   002772  5044               	movf	(xvfprintf@n+1)^(0+1280),w,c
  3112   002774  A0D8               	btfss	status,0,c
  3113   002776  2AE8               	incf	wreg,f,c
  3114   002778  0800               	sublw	0
  3115   00277A  6E44               	movwf	(xvfprintf@n+1)^(0+1280),c
  3116   00277C  0E00               	movlw	0
  3117   00277E  6E4C               	movwf	(xvfprintf@f+1)^(0+1280),c
  3118   002780  0E02               	movlw	2
  3119   002782  6E4B               	movwf	xvfprintf@f^(0+1280),c
  3120   002784                     l2513:
  3121                           
  3122                           ;xprintf.c: 275:    w = (unsigned int)n; c = *fmt++;
  3123   002784  C543  F54D         	movff	xvfprintf@n,xvfprintf@w
  3124   002788  C544  F54E         	movff	xvfprintf@n+1,xvfprintf@w+1
  3125   00278C  C511  F4F6         	movff	xvfprintf@fmt,tblptrl
  3126   002790  C512  F4F7         	movff	xvfprintf@fmt+1,tblptrh
  3127   002794                     	if	0	;tblptru may be non-zero
  3128   002794                     	endif
  3129   002794                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3130   002794  0E00               	movlw	low (__mediumconst shr (0+16))
  3131   002796  6EF8               	movwf	tblptru,c
  3132   002798                     	endif
  3133   002798  0008               	tblrd		*
  3134   00279A  C4F5 F555          	movff	tablat,xvfprintf@c
  3135   00279E  4A11               	infsnz	xvfprintf@fmt^(0+1280),f,c
  3136   0027A0  2A12               	incf	(xvfprintf@fmt+1)^(0+1280),f,c
  3137                           
  3138                           ;xprintf.c: 276:   } else {
  3139   0027A2  EF02  F014         	goto	l2529
  3140   0027A6                     l2519:
  3141                           
  3142                           ;xprintf.c: 278:     w = w * 10 + c - '0';
  3143   0027A6  C54D  F501         	movff	xvfprintf@w,___wmul@multiplier
  3144   0027AA  C54E  F502         	movff	xvfprintf@w+1,___wmul@multiplier+1
  3145   0027AE  0E00               	movlw	0
  3146   0027B0  6E04               	movwf	(___wmul@multiplicand+1)^(0+1280),c
  3147   0027B2  0E0A               	movlw	10
  3148   0027B4  6E03               	movwf	___wmul@multiplicand^(0+1280),c
  3149   0027B6  EC3E  F01D         	call	___wmul	;wreg free
  3150   0027BA  5055               	movf	xvfprintf@c^(0+1280),w,c
  3151   0027BC  2601               	addwf	?___wmul^(0+1280),f,c
  3152   0027BE  0E00               	movlw	0
  3153   0027C0  2202               	addwfc	(?___wmul+1)^(0+1280),f,c
  3154   0027C2  0ED0               	movlw	208
  3155   0027C4  2401               	addwf	?___wmul^(0+1280),w,c
  3156   0027C6  6E4D               	movwf	xvfprintf@w^(0+1280),c
  3157   0027C8  0EFF               	movlw	255
  3158   0027CA  2002               	addwfc	(?___wmul+1)^(0+1280),w,c
  3159   0027CC  6E4E               	movwf	(xvfprintf@w+1)^(0+1280),c
  3160   0027CE                     
  3161                           ;xprintf.c: 279:     c = *fmt++;
  3162   0027CE  C511  F4F6         	movff	xvfprintf@fmt,tblptrl
  3163   0027D2  C512  F4F7         	movff	xvfprintf@fmt+1,tblptrh
  3164   0027D6                     	if	0	;tblptru may be non-zero
  3165   0027D6                     	endif
  3166   0027D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3167   0027D6  0E00               	movlw	low (__mediumconst shr (0+16))
  3168   0027D8  6EF8               	movwf	tblptru,c
  3169   0027DA                     	endif
  3170   0027DA  0008               	tblrd		*
  3171   0027DC  C4F5 F555          	movff	tablat,xvfprintf@c
  3172   0027E0  4A11               	infsnz	xvfprintf@fmt^(0+1280),f,c
  3173   0027E2  2A12               	incf	(xvfprintf@fmt+1)^(0+1280),f,c
  3174   0027E4                     l2525:
  3175                           
  3176                           ;xprintf.c: 277:    while (c >= '0' && c <= '9') {
  3177   0027E4  0E2F               	movlw	47
  3178   0027E6  6455               	cpfsgt	xvfprintf@c^(0+1280),c
  3179   0027E8  EFF8  F013         	goto	u1781
  3180   0027EC  EFFA  F013         	goto	u1780
  3181   0027F0                     u1781:
  3182   0027F0  EF02  F014         	goto	l2529
  3183   0027F4                     u1780:
  3184   0027F4  0E39               	movlw	57
  3185   0027F6  6455               	cpfsgt	xvfprintf@c^(0+1280),c
  3186   0027F8  EF00  F014         	goto	u1791
  3187   0027FC  EF02  F014         	goto	u1790
  3188   002800                     u1791:
  3189   002800  EFD3  F013         	goto	l2519
  3190   002804                     u1790:
  3191   002804                     l2529:
  3192                           
  3193                           ;xprintf.c: 282:   if (c == '.') {
  3194   002804  0E2E               	movlw	46
  3195   002806  1855               	xorwf	xvfprintf@c^(0+1280),w,c
  3196   002808  A4D8               	btfss	status,2,c
  3197   00280A  EF09  F014         	goto	u1801
  3198   00280E  EF0B  F014         	goto	u1800
  3199   002812                     u1801:
  3200   002812  EF77  F014         	goto	l2555
  3201   002816                     u1800:
  3202   002816                     
  3203                           ;xprintf.c: 283:    c = *fmt++;
  3204   002816  C511  F4F6         	movff	xvfprintf@fmt,tblptrl
  3205   00281A  C512  F4F7         	movff	xvfprintf@fmt+1,tblptrh
  3206   00281E                     	if	0	;tblptru may be non-zero
  3207   00281E                     	endif
  3208   00281E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3209   00281E  0E00               	movlw	low (__mediumconst shr (0+16))
  3210   002820  6EF8               	movwf	tblptru,c
  3211   002822                     	endif
  3212   002822  0008               	tblrd		*
  3213   002824  C4F5 F555          	movff	tablat,xvfprintf@c
  3214   002828  4A11               	infsnz	xvfprintf@fmt^(0+1280),f,c
  3215   00282A  2A12               	incf	(xvfprintf@fmt+1)^(0+1280),f,c
  3216   00282C                     
  3217                           ;xprintf.c: 284:    if (c == '*') {
  3218   00282C  0E2A               	movlw	42
  3219   00282E  1855               	xorwf	xvfprintf@c^(0+1280),w,c
  3220   002830  A4D8               	btfss	status,2,c
  3221   002832  EF1D  F014         	goto	u1811
  3222   002836  EF1F  F014         	goto	u1810
  3223   00283A                     u1811:
  3224   00283A  EF40  F014         	goto	l2543
  3225   00283E                     u1810:
  3226   00283E                     
  3227                           ;xprintf.c: 285:     prec = (*(int *)__va_arg(*(int **)arp, (int)0));
  3228   00283E  C513  F4D9         	movff	xvfprintf@arp,fsr2l
  3229   002842  C514  F4DA         	movff	xvfprintf@arp+1,fsr2h
  3230   002846  C4DF F515          	movff	indf2,??_xvfprintf
  3231   00284A  0E02               	movlw	2
  3232   00284C  26DE               	addwf	postinc2,f,c
  3233   00284E  C4DF F516          	movff	indf2,??_xvfprintf+1
  3234   002852  0E00               	movlw	0
  3235   002854  22DD               	addwfc	postdec2,f,c
  3236   002856  C515  F4D9         	movff	??_xvfprintf,fsr2l
  3237   00285A  C516  F4DA         	movff	??_xvfprintf+1,fsr2h
  3238   00285E  C4DE F54F          	movff	postinc2,xvfprintf@prec
  3239   002862  C4DD F550          	movff	postdec2,xvfprintf@prec+1
  3240   002866                     
  3241                           ;xprintf.c: 286:     c = *fmt++;
  3242   002866  C511  F4F6         	movff	xvfprintf@fmt,tblptrl
  3243   00286A  C512  F4F7         	movff	xvfprintf@fmt+1,tblptrh
  3244   00286E                     	if	0	;tblptru may be non-zero
  3245   00286E                     	endif
  3246   00286E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3247   00286E  0E00               	movlw	low (__mediumconst shr (0+16))
  3248   002870  6EF8               	movwf	tblptru,c
  3249   002872                     	endif
  3250   002872  0008               	tblrd		*
  3251   002874  C4F5 F555          	movff	tablat,xvfprintf@c
  3252   002878  4A11               	infsnz	xvfprintf@fmt^(0+1280),f,c
  3253   00287A  2A12               	incf	(xvfprintf@fmt+1)^(0+1280),f,c
  3254                           
  3255                           ;xprintf.c: 287:    } else {
  3256   00287C  EF77  F014         	goto	l2555
  3257   002880                     l2543:
  3258                           
  3259                           ;xprintf.c: 288:     prec = 0;
  3260   002880  0E00               	movlw	0
  3261   002882  6E50               	movwf	(xvfprintf@prec+1)^(0+1280),c
  3262   002884  0E00               	movlw	0
  3263   002886  6E4F               	movwf	xvfprintf@prec^(0+1280),c
  3264                           
  3265                           ;xprintf.c: 289:     while (c >= '0' && c <= '9') {
  3266   002888  EF65  F014         	goto	l2551
  3267   00288C                     l2545:
  3268                           
  3269                           ;xprintf.c: 290:      prec = prec * 10 + (int)(c - '0');
  3270   00288C  C54F  F501         	movff	xvfprintf@prec,___wmul@multiplier
  3271   002890  C550  F502         	movff	xvfprintf@prec+1,___wmul@multiplier+1
  3272   002894  0E00               	movlw	0
  3273   002896  6E04               	movwf	(___wmul@multiplicand+1)^(0+1280),c
  3274   002898  0E0A               	movlw	10
  3275   00289A  6E03               	movwf	___wmul@multiplicand^(0+1280),c
  3276   00289C  EC3E  F01D         	call	___wmul	;wreg free
  3277   0028A0  5055               	movf	xvfprintf@c^(0+1280),w,c
  3278   0028A2  2601               	addwf	?___wmul^(0+1280),f,c
  3279   0028A4  0E00               	movlw	0
  3280   0028A6  2202               	addwfc	(?___wmul+1)^(0+1280),f,c
  3281   0028A8  0ED0               	movlw	208
  3282   0028AA  2401               	addwf	?___wmul^(0+1280),w,c
  3283   0028AC  6E4F               	movwf	xvfprintf@prec^(0+1280),c
  3284   0028AE  0EFF               	movlw	255
  3285   0028B0  2002               	addwfc	(?___wmul+1)^(0+1280),w,c
  3286   0028B2  6E50               	movwf	(xvfprintf@prec+1)^(0+1280),c
  3287   0028B4                     
  3288                           ;xprintf.c: 291:      c = *fmt++;
  3289   0028B4  C511  F4F6         	movff	xvfprintf@fmt,tblptrl
  3290   0028B8  C512  F4F7         	movff	xvfprintf@fmt+1,tblptrh
  3291   0028BC                     	if	0	;tblptru may be non-zero
  3292   0028BC                     	endif
  3293   0028BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3294   0028BC  0E00               	movlw	low (__mediumconst shr (0+16))
  3295   0028BE  6EF8               	movwf	tblptru,c
  3296   0028C0                     	endif
  3297   0028C0  0008               	tblrd		*
  3298   0028C2  C4F5 F555          	movff	tablat,xvfprintf@c
  3299   0028C6  4A11               	infsnz	xvfprintf@fmt^(0+1280),f,c
  3300   0028C8  2A12               	incf	(xvfprintf@fmt+1)^(0+1280),f,c
  3301   0028CA                     l2551:
  3302                           
  3303                           ;xprintf.c: 289:     while (c >= '0' && c <= '9') {
  3304   0028CA  0E2F               	movlw	47
  3305   0028CC  6455               	cpfsgt	xvfprintf@c^(0+1280),c
  3306   0028CE  EF6B  F014         	goto	u1821
  3307   0028D2  EF6D  F014         	goto	u1820
  3308   0028D6                     u1821:
  3309   0028D6  EF77  F014         	goto	l399
  3310   0028DA                     u1820:
  3311   0028DA  0E39               	movlw	57
  3312   0028DC  6455               	cpfsgt	xvfprintf@c^(0+1280),c
  3313   0028DE  EF73  F014         	goto	u1831
  3314   0028E2  EF75  F014         	goto	u1830
  3315   0028E6                     u1831:
  3316   0028E6  EF46  F014         	goto	l2545
  3317   0028EA                     u1830:
  3318   0028EA  EF77  F014         	goto	l2555
  3319   0028EE                     l399:
  3320   0028EE                     l2555:
  3321                           
  3322                           ;xprintf.c: 295:   if (c == 'l') {
  3323   0028EE  0E6C               	movlw	108
  3324   0028F0  1855               	xorwf	xvfprintf@c^(0+1280),w,c
  3325   0028F2  A4D8               	btfss	status,2,c
  3326   0028F4  EF7E  F014         	goto	u1841
  3327   0028F8  EF80  F014         	goto	u1840
  3328   0028FC                     u1841:
  3329   0028FC  EF8C  F014         	goto	l2563
  3330   002900                     u1840:
  3331   002900                     
  3332                           ;xprintf.c: 296:    f |= 4; c = *fmt++;
  3333   002900  844B               	bsf	xvfprintf@f^(0+1280),2,c
  3334   002902  C511  F4F6         	movff	xvfprintf@fmt,tblptrl
  3335   002906  C512  F4F7         	movff	xvfprintf@fmt+1,tblptrh
  3336   00290A                     	if	0	;tblptru may be non-zero
  3337   00290A                     	endif
  3338   00290A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3339   00290A  0E00               	movlw	low (__mediumconst shr (0+16))
  3340   00290C  6EF8               	movwf	tblptru,c
  3341   00290E                     	endif
  3342   00290E  0008               	tblrd		*
  3343   002910  C4F5 F555          	movff	tablat,xvfprintf@c
  3344   002914  4A11               	infsnz	xvfprintf@fmt^(0+1280),f,c
  3345   002916  2A12               	incf	(xvfprintf@fmt+1)^(0+1280),f,c
  3346   002918                     l2563:
  3347                           
  3348                           ;xprintf.c: 303:   if (!c) break;
  3349   002918  5055               	movf	xvfprintf@c^(0+1280),w,c
  3350   00291A  A4D8               	btfss	status,2,c
  3351   00291C  EF92  F014         	goto	u1851
  3352   002920  EF94  F014         	goto	u1850
  3353   002924                     u1851:
  3354   002924  EF9B  F015         	goto	l2615
  3355   002928                     u1850:
  3356   002928  EF2B  F017         	goto	l460
  3357   00292C                     l2567:
  3358                           
  3359                           ;xprintf.c: 306:    r = 2; break;
  3360   00292C  0E00               	movlw	0
  3361   00292E  6E3E               	movwf	(xvfprintf@r+1)^(0+1280),c
  3362   002930  0E02               	movlw	2
  3363   002932  6E3D               	movwf	xvfprintf@r^(0+1280),c
  3364   002934  EFC8  F015         	goto	l409
  3365   002938                     l2569:
  3366                           
  3367                           ;xprintf.c: 308:    r = 8; break;
  3368   002938  0E00               	movlw	0
  3369   00293A  6E3E               	movwf	(xvfprintf@r+1)^(0+1280),c
  3370   00293C  0E08               	movlw	8
  3371   00293E  6E3D               	movwf	xvfprintf@r^(0+1280),c
  3372   002940  EFC8  F015         	goto	l409
  3373   002944                     l2571:
  3374                           
  3375                           ;xprintf.c: 311:    r = 10; break;
  3376   002944  0E00               	movlw	0
  3377   002946  6E3E               	movwf	(xvfprintf@r+1)^(0+1280),c
  3378   002948  0E0A               	movlw	10
  3379   00294A  6E3D               	movwf	xvfprintf@r^(0+1280),c
  3380   00294C  EFC8  F015         	goto	l409
  3381   002950                     l2573:
  3382                           
  3383                           ;xprintf.c: 314:    r = 16; break;
  3384   002950  0E00               	movlw	0
  3385   002952  6E3E               	movwf	(xvfprintf@r+1)^(0+1280),c
  3386   002954  0E10               	movlw	16
  3387   002956  6E3D               	movwf	xvfprintf@r^(0+1280),c
  3388   002958  EFC8  F015         	goto	l409
  3389   00295C                     l2575:
  3390                           
  3391                           ;xprintf.c: 316:    xfputc(func, (char)(*(int *)__va_arg(*(int **)arp, (int)0))); contin
      +                          ue;
  3392   00295C  C50E  F503         	movff	xvfprintf@func,xfputc@func
  3393   002960  C50F  F504         	movff	xvfprintf@func+1,xfputc@func+1
  3394   002964  C510  F505         	movff	xvfprintf@func+2,xfputc@func+2
  3395   002968  C513  F4D9         	movff	xvfprintf@arp,fsr2l
  3396   00296C  C514  F4DA         	movff	xvfprintf@arp+1,fsr2h
  3397   002970  C4DF F515          	movff	indf2,??_xvfprintf
  3398   002974  0E02               	movlw	2
  3399   002976  26DE               	addwf	postinc2,f,c
  3400   002978  C4DF F516          	movff	indf2,??_xvfprintf+1
  3401   00297C  0E00               	movlw	0
  3402   00297E  22DD               	addwfc	postdec2,f,c
  3403   002980  C515  F4D9         	movff	??_xvfprintf,fsr2l
  3404   002984  C516  F4DA         	movff	??_xvfprintf+1,fsr2h
  3405   002988  50DF               	movf	indf2,w,c
  3406   00298A  6E17               	movwf	(??_xvfprintf+2)^(0+1280),c
  3407   00298C  5017               	movf	(??_xvfprintf+2)^(0+1280),w,c
  3408   00298E  6E06               	movwf	xfputc@chr^(0+1280),c
  3409   002990  6A07               	clrf	(xfputc@chr+1)^(0+1280),c
  3410   002992  EC2B  F01B         	call	_xfputc	;wreg free
  3411   002996  EF29  F013         	goto	l381
  3412   00299A                     l2577:
  3413                           
  3414                           ;xprintf.c: 318:    p = (*(char* *)__va_arg(*(char* **)arp, (char*)0));
  3415   00299A  C513  F4D9         	movff	xvfprintf@arp,fsr2l
  3416   00299E  C514  F4DA         	movff	xvfprintf@arp+1,fsr2h
  3417   0029A2  C4DF F515          	movff	indf2,??_xvfprintf
  3418   0029A6  0E02               	movlw	2
  3419   0029A8  26DE               	addwf	postinc2,f,c
  3420   0029AA  C4DF F516          	movff	indf2,??_xvfprintf+1
  3421   0029AE  0E00               	movlw	0
  3422   0029B0  22DD               	addwfc	postdec2,f,c
  3423   0029B2  C515  F4D9         	movff	??_xvfprintf,fsr2l
  3424   0029B6  C516  F4DA         	movff	??_xvfprintf+1,fsr2h
  3425   0029BA  C4DE F549          	movff	postinc2,xvfprintf@p
  3426   0029BE  C4DD F54A          	movff	postdec2,xvfprintf@p+1
  3427   0029C2                     
  3428                           ;xprintf.c: 319:    if (!p) p = "";
  3429   0029C2  5049               	movf	xvfprintf@p^(0+1280),w,c
  3430   0029C4  104A               	iorwf	(xvfprintf@p+1)^(0+1280),w,c
  3431   0029C6  A4D8               	btfss	status,2,c
  3432   0029C8  EFE8  F014         	goto	u1861
  3433   0029CC  EFEA  F014         	goto	u1860
  3434   0029D0                     u1861:
  3435   0029D0  EFEE  F014         	goto	l2583
  3436   0029D4                     u1860:
  3437   0029D4  0E4A               	movlw	low (STR_2+3)
  3438   0029D6  6E49               	movwf	xvfprintf@p^(0+1280),c
  3439   0029D8  0E26               	movlw	high (STR_2+3)
  3440   0029DA  6E4A               	movwf	(xvfprintf@p+1)^(0+1280),c
  3441   0029DC                     l2583:
  3442                           
  3443                           ;xprintf.c: 320:    j = (int)strlen(p);
  3444   0029DC  C549  F501         	movff	xvfprintf@p,strlen@s
  3445   0029E0  C54A  F502         	movff	xvfprintf@p+1,strlen@s+1
  3446   0029E4  ECE1  F01C         	call	_strlen	;wreg free
  3447   0029E8  C501  F551         	movff	?_strlen,xvfprintf@j
  3448   0029EC  C502  F552         	movff	?_strlen+1,xvfprintf@j+1
  3449   0029F0                     
  3450                           ;xprintf.c: 321:    if (prec >= 0 && j > prec) j = prec;
  3451   0029F0  BE50               	btfsc	(xvfprintf@prec+1)^(0+1280),7,c
  3452   0029F2  EFFD  F014         	goto	u1871
  3453   0029F6  EFFF  F014         	goto	u1870
  3454   0029FA                     u1871:
  3455   0029FA  EF21  F015         	goto	l2595
  3456   0029FE                     u1870:
  3457   0029FE  5051               	movf	xvfprintf@j^(0+1280),w,c
  3458   002A00  5C4F               	subwf	xvfprintf@prec^(0+1280),w,c
  3459   002A02  5050               	movf	(xvfprintf@prec+1)^(0+1280),w,c
  3460   002A04  0A80               	xorlw	128
  3461   002A06  6E15               	movwf	??_xvfprintf^(0+1280),c
  3462   002A08  5052               	movf	(xvfprintf@j+1)^(0+1280),w,c
  3463   002A0A  0A80               	xorlw	128
  3464   002A0C  5815               	subwfb	??_xvfprintf^(0+1280),w,c
  3465   002A0E  B0D8               	btfsc	status,0,c
  3466   002A10  EF0C  F015         	goto	u1881
  3467   002A14  EF0E  F015         	goto	u1880
  3468   002A18                     u1881:
  3469   002A18  EF21  F015         	goto	l2595
  3470   002A1C                     u1880:
  3471   002A1C  C54F  F551         	movff	xvfprintf@prec,xvfprintf@j
  3472   002A20  C550  F552         	movff	xvfprintf@prec+1,xvfprintf@j+1
  3473   002A24  EF21  F015         	goto	l2595
  3474   002A28                     l2591:
  3475   002A28  C50E  F503         	movff	xvfprintf@func,xfputc@func
  3476   002A2C  C50F  F504         	movff	xvfprintf@func+1,xfputc@func+1
  3477   002A30  C510  F505         	movff	xvfprintf@func+2,xfputc@func+2
  3478   002A34  C53C  F506         	movff	xvfprintf@pad,xfputc@chr
  3479   002A38  6A07               	clrf	(xfputc@chr+1)^(0+1280),c
  3480   002A3A  EC2B  F01B         	call	_xfputc	;wreg free
  3481   002A3E  4A51               	infsnz	xvfprintf@j^(0+1280),f,c
  3482   002A40  2A52               	incf	(xvfprintf@j+1)^(0+1280),f,c
  3483   002A42                     l2595:
  3484   002A42  B24B               	btfsc	xvfprintf@f^(0+1280),1,c
  3485   002A44  EF26  F015         	goto	u1891
  3486   002A48  EF28  F015         	goto	u1890
  3487   002A4C                     u1891:
  3488   002A4C  EF54  F015         	goto	l2603
  3489   002A50                     u1890:
  3490   002A50  504D               	movf	xvfprintf@w^(0+1280),w,c
  3491   002A52  5C51               	subwf	xvfprintf@j^(0+1280),w,c
  3492   002A54  504E               	movf	(xvfprintf@w+1)^(0+1280),w,c
  3493   002A56  5852               	subwfb	(xvfprintf@j+1)^(0+1280),w,c
  3494   002A58  A0D8               	btfss	status,0,c
  3495   002A5A  EF31  F015         	goto	u1901
  3496   002A5E  EF33  F015         	goto	u1900
  3497   002A62                     u1901:
  3498   002A62  EF14  F015         	goto	l2591
  3499   002A66                     u1900:
  3500   002A66  EF54  F015         	goto	l2603
  3501   002A6A                     l2599:
  3502   002A6A  C50E  F503         	movff	xvfprintf@func,xfputc@func
  3503   002A6E  C50F  F504         	movff	xvfprintf@func+1,xfputc@func+1
  3504   002A72  C510  F505         	movff	xvfprintf@func+2,xfputc@func+2
  3505   002A76  C549  F4F6         	movff	xvfprintf@p,tblptrl
  3506   002A7A  C54A  F4F7         	movff	xvfprintf@p+1,tblptrh
  3507   002A7E  0E00               	movlw	low (__smallconst shr (0+16))
  3508   002A80  6EF8               	movwf	tblptru,c
  3509   002A82  0E25               	movlw	(high __ramtop+-1)
  3510   002A84  64F7               	cpfsgt	tblptrh,c
  3511   002A86  D003               	bra	u1917
  3512   002A88  0008               	tblrd		*
  3513   002A8A  50F5               	movf	tablat,w,c
  3514   002A8C  D005               	bra	u1910
  3515   002A8E                     u1917:
  3516   002A8E  C4F6 F4E9          	movff	tblptrl,fsr0l
  3517   002A92  C4F7 F4EA          	movff	tblptrh,fsr0h
  3518   002A96  50EF               	movf	indf0,w,c
  3519   002A98                     u1910:
  3520   002A98  6E15               	movwf	??_xvfprintf^(0+1280),c
  3521   002A9A  5015               	movf	??_xvfprintf^(0+1280),w,c
  3522   002A9C  6E06               	movwf	xfputc@chr^(0+1280),c
  3523   002A9E  6A07               	clrf	(xfputc@chr+1)^(0+1280),c
  3524   002AA0  EC2B  F01B         	call	_xfputc	;wreg free
  3525   002AA4  4A49               	infsnz	xvfprintf@p^(0+1280),f,c
  3526   002AA6  2A4A               	incf	(xvfprintf@p+1)^(0+1280),f,c
  3527   002AA8                     l2603:
  3528   002AA8  C549  F4F6         	movff	xvfprintf@p,tblptrl
  3529   002AAC  C54A  F4F7         	movff	xvfprintf@p+1,tblptrh
  3530   002AB0  0E00               	movlw	low (__smallconst shr (0+16))
  3531   002AB2  6EF8               	movwf	tblptru,c
  3532   002AB4  0E25               	movlw	(high __ramtop+-1)
  3533   002AB6  64F7               	cpfsgt	tblptrh,c
  3534   002AB8  D003               	bra	u1927
  3535   002ABA  0008               	tblrd		*
  3536   002ABC  50F5               	movf	tablat,w,c
  3537   002ABE  D005               	bra	u1920
  3538   002AC0                     u1927:
  3539   002AC0  C4F6 F4E9          	movff	tblptrl,fsr0l
  3540   002AC4  C4F7 F4EA          	movff	tblptrh,fsr0h
  3541   002AC8  50EF               	movf	indf0,w,c
  3542   002ACA                     u1920:
  3543   002ACA  0900               	iorlw	0
  3544   002ACC  B4D8               	btfsc	status,2,c
  3545   002ACE  EF6B  F015         	goto	u1931
  3546   002AD2  EF6D  F015         	goto	u1930
  3547   002AD6                     u1931:
  3548   002AD6  EF88  F015         	goto	l2609
  3549   002ADA                     u1930:
  3550   002ADA  064F               	decf	xvfprintf@prec^(0+1280),f,c
  3551   002ADC  A0D8               	btfss	status,0,c
  3552   002ADE  0650               	decf	(xvfprintf@prec+1)^(0+1280),f,c
  3553   002AE0  284F               	incf	xvfprintf@prec^(0+1280),w,c
  3554   002AE2  E106               	bnz	u1941
  3555   002AE4  2850               	incf	(xvfprintf@prec+1)^(0+1280),w,c
  3556   002AE6  A4D8               	btfss	status,2,c
  3557   002AE8  EF78  F015         	goto	u1941
  3558   002AEC  EF7A  F015         	goto	u1940
  3559   002AF0                     u1941:
  3560   002AF0  EF35  F015         	goto	l2599
  3561   002AF4                     u1940:
  3562   002AF4  EF88  F015         	goto	l2609
  3563   002AF8                     l2607:
  3564   002AF8  C50E  F503         	movff	xvfprintf@func,xfputc@func
  3565   002AFC  C50F  F504         	movff	xvfprintf@func+1,xfputc@func+1
  3566   002B00  C510  F505         	movff	xvfprintf@func+2,xfputc@func+2
  3567   002B04  0E00               	movlw	0
  3568   002B06  6E07               	movwf	(xfputc@chr+1)^(0+1280),c
  3569   002B08  0E20               	movlw	32
  3570   002B0A  6E06               	movwf	xfputc@chr^(0+1280),c
  3571   002B0C  EC2B  F01B         	call	_xfputc	;wreg free
  3572   002B10                     l2609:
  3573   002B10  5051               	movf	xvfprintf@j^(0+1280),w,c
  3574   002B12  6E15               	movwf	??_xvfprintf^(0+1280),c
  3575   002B14  5052               	movf	(xvfprintf@j+1)^(0+1280),w,c
  3576   002B16  6E16               	movwf	(??_xvfprintf+1)^(0+1280),c
  3577   002B18  4A51               	infsnz	xvfprintf@j^(0+1280),f,c
  3578   002B1A  2A52               	incf	(xvfprintf@j+1)^(0+1280),f,c
  3579   002B1C  504D               	movf	xvfprintf@w^(0+1280),w,c
  3580   002B1E  5C15               	subwf	??_xvfprintf^(0+1280),w,c
  3581   002B20  504E               	movf	(xvfprintf@w+1)^(0+1280),w,c
  3582   002B22  5816               	subwfb	(??_xvfprintf+1)^(0+1280),w,c
  3583   002B24  A0D8               	btfss	status,0,c
  3584   002B26  EF97  F015         	goto	u1951
  3585   002B2A  EF99  F015         	goto	u1950
  3586   002B2E                     u1951:
  3587   002B2E  EF7C  F015         	goto	l2607
  3588   002B32                     u1950:
  3589   002B32  EF29  F013         	goto	l381
  3590   002B36                     l2615:
  3591   002B36  5055               	movf	xvfprintf@c^(0+1280),w,c
  3592   002B38  6E15               	movwf	??_xvfprintf^(0+1280),c
  3593   002B3A  6A16               	clrf	(??_xvfprintf+1)^(0+1280),c
  3594                           
  3595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3596                           ; Switch size 1, requested type "simple"
  3597                           ; Number of cases is 1, Range of values is 0 to 0
  3598                           ; switch strategies available:
  3599                           ; Name         Instructions Cycles
  3600                           ; simple_byte            4     3 (average)
  3601                           ;	Chosen strategy is simple_byte
  3602   002B3C  5016               	movf	(??_xvfprintf+1)^(0+1280),w,c
  3603   002B3E  0A00               	xorlw	0	; case 0
  3604   002B40  B4D8               	btfsc	status,2,c
  3605   002B42  EFA5  F015         	goto	l3365
  3606   002B46  EF47  F013         	goto	l2477
  3607   002B4A                     l3365:
  3608                           
  3609                           ; Switch size 1, requested type "simple"
  3610                           ; Number of cases is 8, Range of values is 88 to 120
  3611                           ; switch strategies available:
  3612                           ; Name         Instructions Cycles
  3613                           ; simple_byte           25    13 (average)
  3614                           ;	Chosen strategy is simple_byte
  3615   002B4A  5015               	movf	??_xvfprintf^(0+1280),w,c
  3616   002B4C  0A58               	xorlw	88	; case 88
  3617   002B4E  B4D8               	btfsc	status,2,c
  3618   002B50  EFA8  F014         	goto	l2573
  3619   002B54  0A3A               	xorlw	58	; case 98
  3620   002B56  B4D8               	btfsc	status,2,c
  3621   002B58  EF96  F014         	goto	l2567
  3622   002B5C  0A01               	xorlw	1	; case 99
  3623   002B5E  B4D8               	btfsc	status,2,c
  3624   002B60  EFAE  F014         	goto	l2575
  3625   002B64  0A07               	xorlw	7	; case 100
  3626   002B66  B4D8               	btfsc	status,2,c
  3627   002B68  EFA2  F014         	goto	l2571
  3628   002B6C  0A0B               	xorlw	11	; case 111
  3629   002B6E  B4D8               	btfsc	status,2,c
  3630   002B70  EF9C  F014         	goto	l2569
  3631   002B74  0A1C               	xorlw	28	; case 115
  3632   002B76  B4D8               	btfsc	status,2,c
  3633   002B78  EFCD  F014         	goto	l2577
  3634   002B7C  0A06               	xorlw	6	; case 117
  3635   002B7E  B4D8               	btfsc	status,2,c
  3636   002B80  EFA2  F014         	goto	l2571
  3637   002B84  0A0D               	xorlw	13	; case 120
  3638   002B86  B4D8               	btfsc	status,2,c
  3639   002B88  EFA8  F014         	goto	l2573
  3640   002B8C  EF47  F013         	goto	l2477
  3641   002B90                     l409:
  3642                           
  3643                           ;xprintf.c: 352:   if (f & 4) {
  3644   002B90  A44B               	btfss	xvfprintf@f^(0+1280),2,c
  3645   002B92  EFCD  F015         	goto	u1961
  3646   002B96  EFCF  F015         	goto	u1960
  3647   002B9A                     u1961:
  3648   002B9A  EFE9  F015         	goto	l2619
  3649   002B9E                     u1960:
  3650   002B9E                     
  3651                           ;xprintf.c: 353:    v = (long)(*(long *)__va_arg(*(long **)arp, (long)0));
  3652   002B9E  C513  F4D9         	movff	xvfprintf@arp,fsr2l
  3653   002BA2  C514  F4DA         	movff	xvfprintf@arp+1,fsr2h
  3654   002BA6  C4DF F515          	movff	indf2,??_xvfprintf
  3655   002BAA  0E04               	movlw	4
  3656   002BAC  26DE               	addwf	postinc2,f,c
  3657   002BAE  C4DF F516          	movff	indf2,??_xvfprintf+1
  3658   002BB2  0E00               	movlw	0
  3659   002BB4  22DD               	addwfc	postdec2,f,c
  3660   002BB6  C515  F4D9         	movff	??_xvfprintf,fsr2l
  3661   002BBA  C516  F4DA         	movff	??_xvfprintf+1,fsr2h
  3662   002BBE  C4DE F545          	movff	postinc2,xvfprintf@v
  3663   002BC2  C4DE F546          	movff	postinc2,xvfprintf@v+1
  3664   002BC6  C4DE F547          	movff	postinc2,xvfprintf@v+2
  3665   002BCA  C4DE F548          	movff	postinc2,xvfprintf@v+3
  3666                           
  3667                           ;xprintf.c: 354:   } else {
  3668   002BCE  EF27  F016         	goto	l2625
  3669   002BD2                     l2619:
  3670                           
  3671                           ;xprintf.c: 355:    v = (c == 'd') ? (long)(*(int *)__va_arg(*(int **)arp, (int)0)) : (l
      +                          ong)(*(unsigned int *)__va_arg(*(unsigned int **)arp, (unsigned int)0));
  3672   002BD2  0E64               	movlw	100
  3673   002BD4  1855               	xorwf	xvfprintf@c^(0+1280),w,c
  3674   002BD6  B4D8               	btfsc	status,2,c
  3675   002BD8  EFF0  F015         	goto	u1971
  3676   002BDC  EFF2  F015         	goto	u1970
  3677   002BE0                     u1971:
  3678   002BE0  EF0E  F016         	goto	l2623
  3679   002BE4                     u1970:
  3680   002BE4  C513  F4D9         	movff	xvfprintf@arp,fsr2l
  3681   002BE8  C514  F4DA         	movff	xvfprintf@arp+1,fsr2h
  3682   002BEC  C4DF F515          	movff	indf2,??_xvfprintf
  3683   002BF0  0E02               	movlw	2
  3684   002BF2  26DE               	addwf	postinc2,f,c
  3685   002BF4  C4DF F516          	movff	indf2,??_xvfprintf+1
  3686   002BF8  0E00               	movlw	0
  3687   002BFA  22DD               	addwfc	postdec2,f,c
  3688   002BFC  C515  F4D9         	movff	??_xvfprintf,fsr2l
  3689   002C00  C516  F4DA         	movff	??_xvfprintf+1,fsr2h
  3690   002C04  C4DE F517          	movff	postinc2,??_xvfprintf+2
  3691   002C08  C4DD F518          	movff	postdec2,??_xvfprintf+3
  3692   002C0C  C517  F545         	movff	??_xvfprintf+2,xvfprintf@v
  3693   002C10  C518  F546         	movff	??_xvfprintf+3,xvfprintf@v+1
  3694   002C14  6A47               	clrf	(xvfprintf@v+2)^(0+1280),c
  3695   002C16  6A48               	clrf	(xvfprintf@v+3)^(0+1280),c
  3696   002C18  EF27  F016         	goto	l2625
  3697   002C1C                     l2623:
  3698   002C1C  C513  F4D9         	movff	xvfprintf@arp,fsr2l
  3699   002C20  C514  F4DA         	movff	xvfprintf@arp+1,fsr2h
  3700   002C24  C4DF F515          	movff	indf2,??_xvfprintf
  3701   002C28  0E02               	movlw	2
  3702   002C2A  26DE               	addwf	postinc2,f,c
  3703   002C2C  C4DF F516          	movff	indf2,??_xvfprintf+1
  3704   002C30  0E00               	movlw	0
  3705   002C32  22DD               	addwfc	postdec2,f,c
  3706   002C34  C515  F4D9         	movff	??_xvfprintf,fsr2l
  3707   002C38  C516  F4DA         	movff	??_xvfprintf+1,fsr2h
  3708   002C3C  C4DE F545          	movff	postinc2,xvfprintf@v
  3709   002C40  C4DD F546          	movff	postdec2,xvfprintf@v+1
  3710   002C44  0E00               	movlw	0
  3711   002C46  BE46               	btfsc	(xvfprintf@v+1)^(0+1280),7,c
  3712   002C48  0EFF               	movlw	-1
  3713   002C4A  6E47               	movwf	(xvfprintf@v+2)^(0+1280),c
  3714   002C4C  6E48               	movwf	(xvfprintf@v+3)^(0+1280),c
  3715   002C4E                     l2625:
  3716                           
  3717                           ;xprintf.c: 358:   if (c == 'd' && v < 0) {
  3718   002C4E  0E64               	movlw	100
  3719   002C50  1855               	xorwf	xvfprintf@c^(0+1280),w,c
  3720   002C52  A4D8               	btfss	status,2,c
  3721   002C54  EF2E  F016         	goto	u1981
  3722   002C58  EF30  F016         	goto	u1980
  3723   002C5C                     u1981:
  3724   002C5C  EF41  F016         	goto	l2633
  3725   002C60                     u1980:
  3726   002C60  BE48               	btfsc	(xvfprintf@v+3)^(0+1280),7,c
  3727   002C62  EF37  F016         	goto	u1990
  3728   002C66  EF35  F016         	goto	u1991
  3729   002C6A                     u1991:
  3730   002C6A  EF41  F016         	goto	l2633
  3731   002C6E                     u1990:
  3732   002C6E                     
  3733                           ;xprintf.c: 359:    v = 0 - v; f |= 1;
  3734   002C6E  6C45               	negf	xvfprintf@v^(0+1280),c
  3735   002C70  1E46               	comf	(xvfprintf@v+1)^(0+1280),f,c
  3736   002C72  B0D8               	btfsc	status,0,c
  3737   002C74  2A46               	incf	(xvfprintf@v+1)^(0+1280),f,c
  3738   002C76  1E47               	comf	(xvfprintf@v+2)^(0+1280),f,c
  3739   002C78  B0D8               	btfsc	status,0,c
  3740   002C7A  2A47               	incf	(xvfprintf@v+2)^(0+1280),f,c
  3741   002C7C  0E00               	movlw	0
  3742   002C7E  5648               	subfwb	(xvfprintf@v+3)^(0+1280),f,c
  3743   002C80  804B               	bsf	xvfprintf@f^(0+1280),0,c
  3744   002C82                     l2633:
  3745                           
  3746                           ;xprintf.c: 361:   i = 0; uv = (unsigned long)v;
  3747   002C82  0E00               	movlw	0
  3748   002C84  6E54               	movwf	(xvfprintf@i+1)^(0+1280),c
  3749   002C86  0E00               	movlw	0
  3750   002C88  6E53               	movwf	xvfprintf@i^(0+1280),c
  3751   002C8A  C545  F53F         	movff	xvfprintf@v,xvfprintf@uv
  3752   002C8E  C546  F540         	movff	xvfprintf@v+1,xvfprintf@uv+1
  3753   002C92  C547  F541         	movff	xvfprintf@v+2,xvfprintf@uv+2
  3754   002C96  C548  F542         	movff	xvfprintf@v+3,xvfprintf@uv+3
  3755   002C9A                     l2637:
  3756                           
  3757                           ;xprintf.c: 363:    d = (char)(uv % r); uv /= r;
  3758   002C9A  C53F  F501         	movff	xvfprintf@uv,___llmod@dividend
  3759   002C9E  C540  F502         	movff	xvfprintf@uv+1,___llmod@dividend+1
  3760   002CA2  C541  F503         	movff	xvfprintf@uv+2,___llmod@dividend+2
  3761   002CA6  C542  F504         	movff	xvfprintf@uv+3,___llmod@dividend+3
  3762   002CAA  C53D  F505         	movff	xvfprintf@r,___llmod@divisor
  3763   002CAE  C53E  F506         	movff	xvfprintf@r+1,___llmod@divisor+1
  3764   002CB2  6A07               	clrf	(___llmod@divisor+2)^(0+1280),c
  3765   002CB4  6A08               	clrf	(___llmod@divisor+3)^(0+1280),c
  3766   002CB6  EC2E  F01C         	call	___llmod	;wreg free
  3767   002CBA  5001               	movf	?___llmod^(0+1280),w,c
  3768   002CBC  6E3B               	movwf	xvfprintf@d^(0+1280),c
  3769   002CBE  C53F  F501         	movff	xvfprintf@uv,___lldiv@dividend
  3770   002CC2  C540  F502         	movff	xvfprintf@uv+1,___lldiv@dividend+1
  3771   002CC6  C541  F503         	movff	xvfprintf@uv+2,___lldiv@dividend+2
  3772   002CCA  C542  F504         	movff	xvfprintf@uv+3,___lldiv@dividend+3
  3773   002CCE  C53D  F505         	movff	xvfprintf@r,___lldiv@divisor
  3774   002CD2  C53E  F506         	movff	xvfprintf@r+1,___lldiv@divisor+1
  3775   002CD6  6A07               	clrf	(___lldiv@divisor+2)^(0+1280),c
  3776   002CD8  6A08               	clrf	(___lldiv@divisor+3)^(0+1280),c
  3777   002CDA  ECDC  F01B         	call	___lldiv	;wreg free
  3778   002CDE  C501  F53F         	movff	?___lldiv,xvfprintf@uv
  3779   002CE2  C502  F540         	movff	?___lldiv+1,xvfprintf@uv+1
  3780   002CE6  C503  F541         	movff	?___lldiv+2,xvfprintf@uv+2
  3781   002CEA  C504  F542         	movff	?___lldiv+3,xvfprintf@uv+3
  3782   002CEE                     
  3783                           ;xprintf.c: 364:    if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  3784   002CEE  0E09               	movlw	9
  3785   002CF0  643B               	cpfsgt	xvfprintf@d^(0+1280),c
  3786   002CF2  EF7D  F016         	goto	u2001
  3787   002CF6  EF7F  F016         	goto	u2000
  3788   002CFA                     u2001:
  3789   002CFA  EF94  F016         	goto	l2651
  3790   002CFE                     u2000:
  3791   002CFE  0E78               	movlw	120
  3792   002D00  1855               	xorwf	xvfprintf@c^(0+1280),w,c
  3793   002D02  B4D8               	btfsc	status,2,c
  3794   002D04  EF86  F016         	goto	u2011
  3795   002D08  EF88  F016         	goto	u2010
  3796   002D0C                     u2011:
  3797   002D0C  EF8E  F016         	goto	l2647
  3798   002D10                     u2010:
  3799   002D10  0E00               	movlw	0
  3800   002D12  6E3A               	movwf	(_xvfprintf$275+1)^(0+1280),c
  3801   002D14  0E07               	movlw	7
  3802   002D16  6E39               	movwf	_xvfprintf$275^(0+1280),c
  3803   002D18  EF92  F016         	goto	l2649
  3804   002D1C                     l2647:
  3805   002D1C  0E00               	movlw	0
  3806   002D1E  6E3A               	movwf	(_xvfprintf$275+1)^(0+1280),c
  3807   002D20  0E27               	movlw	39
  3808   002D22  6E39               	movwf	_xvfprintf$275^(0+1280),c
  3809   002D24                     l2649:
  3810   002D24  5039               	movf	_xvfprintf$275^(0+1280),w,c
  3811   002D26  263B               	addwf	xvfprintf@d^(0+1280),f,c
  3812   002D28                     l2651:
  3813                           
  3814                           ;xprintf.c: 365:    str[i++] = d + '0';
  3815   002D28  0E19               	movlw	low xvfprintf@str
  3816   002D2A  2453               	addwf	xvfprintf@i^(0+1280),w,c
  3817   002D2C  6ED9               	movwf	fsr2l,c
  3818   002D2E  0E05               	movlw	high xvfprintf@str
  3819   002D30  2054               	addwfc	(xvfprintf@i+1)^(0+1280),w,c
  3820   002D32  6EDA               	movwf	fsr2h,c
  3821   002D34  503B               	movf	xvfprintf@d^(0+1280),w,c
  3822   002D36  0F30               	addlw	48
  3823   002D38  6EDF               	movwf	indf2,c
  3824   002D3A  4A53               	infsnz	xvfprintf@i^(0+1280),f,c
  3825   002D3C  2A54               	incf	(xvfprintf@i+1)^(0+1280),f,c
  3826   002D3E                     
  3827                           ;xprintf.c: 366:   } while (uv != 0 && i < sizeof str);
  3828   002D3E  503F               	movf	xvfprintf@uv^(0+1280),w,c
  3829   002D40  1040               	iorwf	(xvfprintf@uv+1)^(0+1280),w,c
  3830   002D42  1041               	iorwf	(xvfprintf@uv+2)^(0+1280),w,c
  3831   002D44  1042               	iorwf	(xvfprintf@uv+3)^(0+1280),w,c
  3832   002D46  B4D8               	btfsc	status,2,c
  3833   002D48  EFA8  F016         	goto	u2021
  3834   002D4C  EFAA  F016         	goto	u2020
  3835   002D50                     u2021:
  3836   002D50  EFB5  F016         	goto	l448
  3837   002D54                     u2020:
  3838   002D54  5054               	movf	(xvfprintf@i+1)^(0+1280),w,c
  3839   002D56  E109               	bnz	u2030
  3840   002D58  0E20               	movlw	32
  3841   002D5A  5C53               	subwf	xvfprintf@i^(0+1280),w,c
  3842   002D5C  A0D8               	btfss	status,0,c
  3843   002D5E  EFB3  F016         	goto	u2031
  3844   002D62  EFB5  F016         	goto	u2030
  3845   002D66                     u2031:
  3846   002D66  EF4D  F016         	goto	l2637
  3847   002D6A                     u2030:
  3848   002D6A                     l448:
  3849                           
  3850                           ;xprintf.c: 367:   if (f & 1) str[i++] = '-';
  3851   002D6A  A04B               	btfss	xvfprintf@f^(0+1280),0,c
  3852   002D6C  EFBA  F016         	goto	u2041
  3853   002D70  EFBC  F016         	goto	u2040
  3854   002D74                     u2041:
  3855   002D74  EFC6  F016         	goto	l2663
  3856   002D78                     u2040:
  3857   002D78  0E19               	movlw	low xvfprintf@str
  3858   002D7A  2453               	addwf	xvfprintf@i^(0+1280),w,c
  3859   002D7C  6ED9               	movwf	fsr2l,c
  3860   002D7E  0E05               	movlw	high xvfprintf@str
  3861   002D80  2054               	addwfc	(xvfprintf@i+1)^(0+1280),w,c
  3862   002D82  6EDA               	movwf	fsr2h,c
  3863   002D84  0E2D               	movlw	45
  3864   002D86  6EDF               	movwf	indf2,c
  3865   002D88  4A53               	infsnz	xvfprintf@i^(0+1280),f,c
  3866   002D8A  2A54               	incf	(xvfprintf@i+1)^(0+1280),f,c
  3867   002D8C                     l2663:
  3868                           
  3869                           ;xprintf.c: 368:   for (j = i; !(f & 2) && j < w; j++) xfputc(func, pad);
  3870   002D8C  C553  F551         	movff	xvfprintf@i,xvfprintf@j
  3871   002D90  C554  F552         	movff	xvfprintf@i+1,xvfprintf@j+1
  3872   002D94  EFD9  F016         	goto	l2669
  3873   002D98                     l2665:
  3874   002D98  C50E  F503         	movff	xvfprintf@func,xfputc@func
  3875   002D9C  C50F  F504         	movff	xvfprintf@func+1,xfputc@func+1
  3876   002DA0  C510  F505         	movff	xvfprintf@func+2,xfputc@func+2
  3877   002DA4  C53C  F506         	movff	xvfprintf@pad,xfputc@chr
  3878   002DA8  6A07               	clrf	(xfputc@chr+1)^(0+1280),c
  3879   002DAA  EC2B  F01B         	call	_xfputc	;wreg free
  3880   002DAE  4A51               	infsnz	xvfprintf@j^(0+1280),f,c
  3881   002DB0  2A52               	incf	(xvfprintf@j+1)^(0+1280),f,c
  3882   002DB2                     l2669:
  3883   002DB2  B24B               	btfsc	xvfprintf@f^(0+1280),1,c
  3884   002DB4  EFDE  F016         	goto	u2051
  3885   002DB8  EFE0  F016         	goto	u2050
  3886   002DBC                     u2051:
  3887   002DBC  EFEB  F016         	goto	l2673
  3888   002DC0                     u2050:
  3889   002DC0  504D               	movf	xvfprintf@w^(0+1280),w,c
  3890   002DC2  5C51               	subwf	xvfprintf@j^(0+1280),w,c
  3891   002DC4  504E               	movf	(xvfprintf@w+1)^(0+1280),w,c
  3892   002DC6  5852               	subwfb	(xvfprintf@j+1)^(0+1280),w,c
  3893   002DC8  A0D8               	btfss	status,0,c
  3894   002DCA  EFE9  F016         	goto	u2061
  3895   002DCE  EFEB  F016         	goto	u2060
  3896   002DD2                     u2061:
  3897   002DD2  EFCC  F016         	goto	l2665
  3898   002DD6                     u2060:
  3899   002DD6                     l2673:
  3900   002DD6  C50E  F503         	movff	xvfprintf@func,xfputc@func
  3901   002DDA  C50F  F504         	movff	xvfprintf@func+1,xfputc@func+1
  3902   002DDE  C510  F505         	movff	xvfprintf@func+2,xfputc@func+2
  3903   002DE2  0653               	decf	xvfprintf@i^(0+1280),f,c
  3904   002DE4  A0D8               	btfss	status,0,c
  3905   002DE6  0654               	decf	(xvfprintf@i+1)^(0+1280),f,c
  3906   002DE8  0E19               	movlw	low xvfprintf@str
  3907   002DEA  2453               	addwf	xvfprintf@i^(0+1280),w,c
  3908   002DEC  6ED9               	movwf	fsr2l,c
  3909   002DEE  0E05               	movlw	high xvfprintf@str
  3910   002DF0  2054               	addwfc	(xvfprintf@i+1)^(0+1280),w,c
  3911   002DF2  6EDA               	movwf	fsr2h,c
  3912   002DF4  50DF               	movf	indf2,w,c
  3913   002DF6  6E15               	movwf	??_xvfprintf^(0+1280),c
  3914   002DF8  5015               	movf	??_xvfprintf^(0+1280),w,c
  3915   002DFA  6E06               	movwf	xfputc@chr^(0+1280),c
  3916   002DFC  6A07               	clrf	(xfputc@chr+1)^(0+1280),c
  3917   002DFE  EC2B  F01B         	call	_xfputc	;wreg free
  3918   002E02  5053               	movf	xvfprintf@i^(0+1280),w,c
  3919   002E04  1054               	iorwf	(xvfprintf@i+1)^(0+1280),w,c
  3920   002E06  A4D8               	btfss	status,2,c
  3921   002E08  EF08  F017         	goto	u2071
  3922   002E0C  EF0A  F017         	goto	u2070
  3923   002E10                     u2071:
  3924   002E10  EFEB  F016         	goto	l2673
  3925   002E14                     u2070:
  3926   002E14  EF18  F017         	goto	l2679
  3927   002E18                     l2677:
  3928   002E18  C50E  F503         	movff	xvfprintf@func,xfputc@func
  3929   002E1C  C50F  F504         	movff	xvfprintf@func+1,xfputc@func+1
  3930   002E20  C510  F505         	movff	xvfprintf@func+2,xfputc@func+2
  3931   002E24  0E00               	movlw	0
  3932   002E26  6E07               	movwf	(xfputc@chr+1)^(0+1280),c
  3933   002E28  0E20               	movlw	32
  3934   002E2A  6E06               	movwf	xfputc@chr^(0+1280),c
  3935   002E2C  EC2B  F01B         	call	_xfputc	;wreg free
  3936   002E30                     l2679:
  3937   002E30  5051               	movf	xvfprintf@j^(0+1280),w,c
  3938   002E32  6E15               	movwf	??_xvfprintf^(0+1280),c
  3939   002E34  5052               	movf	(xvfprintf@j+1)^(0+1280),w,c
  3940   002E36  6E16               	movwf	(??_xvfprintf+1)^(0+1280),c
  3941   002E38  4A51               	infsnz	xvfprintf@j^(0+1280),f,c
  3942   002E3A  2A52               	incf	(xvfprintf@j+1)^(0+1280),f,c
  3943   002E3C  504D               	movf	xvfprintf@w^(0+1280),w,c
  3944   002E3E  5C15               	subwf	??_xvfprintf^(0+1280),w,c
  3945   002E40  504E               	movf	(xvfprintf@w+1)^(0+1280),w,c
  3946   002E42  5816               	subwfb	(??_xvfprintf+1)^(0+1280),w,c
  3947   002E44  A0D8               	btfss	status,0,c
  3948   002E46  EF27  F017         	goto	u2081
  3949   002E4A  EF29  F017         	goto	u2080
  3950   002E4E                     u2081:
  3951   002E4E  EF0C  F017         	goto	l2677
  3952   002E52                     u2080:
  3953   002E52  EF29  F013         	goto	l381
  3954   002E56                     l460:
  3955   002E56  0012               	return		;funcret
  3956   002E58                     __end_of_xvfprintf:
  3957                           	callstack 0
  3958                           
  3959 ;; *************** function _xfputc *****************
  3960 ;; Defined at:
  3961 ;;		line 169 in file "xprintf.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  func            3    2[COMRAM] PTR FTN(int ,)void 
  3964 ;;		 -> Absolute function(1), putchx(1), 
  3965 ;;  chr             2    5[COMRAM] int 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;		None
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3977 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3980 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3981 ;;Total ram usage:        5 bytes
  3982 ;; Hardware stack levels used: 1
  3983 ;; Hardware stack levels required when called: 1
  3984 ;; This function calls:
  3985 ;;		Absolute function
  3986 ;;		_putchx
  3987 ;; This function is called by:
  3988 ;;		_xvfprintf
  3989 ;;		_xputc
  3990 ;;		_xfputs
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text11
  3995   003656                     __ptext11:
  3996                           	callstack 0
  3997   003656                     _xfputc:
  3998                           	callstack 123
  3999   003656  0E0A               	movlw	10
  4000   003658  1806               	xorwf	xfputc@chr^(0+1280),w,c
  4001   00365A  1007               	iorwf	(xfputc@chr+1)^(0+1280),w,c
  4002   00365C  A4D8               	btfss	status,2,c
  4003   00365E  EF33  F01B         	goto	u1581
  4004   003662  EF35  F01B         	goto	u1580
  4005   003666                     u1581:
  4006   003666  EF46  F01B         	goto	l2399
  4007   00366A                     u1580:
  4008   00366A  0E00               	movlw	0
  4009   00366C  6E02               	movwf	(putchx@c+1)^(0+1280),c
  4010   00366E  0E0D               	movlw	13
  4011   003670  6E01               	movwf	putchx@c^(0+1280),c
  4012   003672  D802               	call	u1598
  4013   003674  EF46  F01B         	goto	u1599
  4014   003678                     u1598:
  4015   003678  0005               	push	
  4016   00367A  6EFA               	movwf	pclath,c
  4017   00367C  5003               	movf	xfputc@func^(0+1280),w,c
  4018   00367E  6EFD               	movwf	tosl,c
  4019   003680  5004               	movf	(xfputc@func+1)^(0+1280),w,c
  4020   003682  6EFE               	movwf	tosh,c
  4021   003684  5005               	movf	(xfputc@func+2)^(0+1280),w,c
  4022   003686  6EFF               	movwf	tosu,c
  4023   003688  50FA               	movf	pclath,w,c
  4024   00368A  0012               	return		;indir
  4025   00368C                     u1599:
  4026   00368C                     l2399:
  4027                           
  4028                           ;xprintf.c: 176:  if (func) {
  4029   00368C  5003               	movf	xfputc@func^(0+1280),w,c
  4030   00368E  1004               	iorwf	(xfputc@func+1)^(0+1280),w,c
  4031   003690  1005               	iorwf	(xfputc@func+2)^(0+1280),w,c
  4032   003692  B4D8               	btfsc	status,2,c
  4033   003694  EF4E  F01B         	goto	u1601
  4034   003698  EF50  F01B         	goto	u1600
  4035   00369C                     u1601:
  4036   00369C  EF63  F01B         	goto	l2403
  4037   0036A0                     u1600:
  4038   0036A0                     
  4039                           ;xprintf.c: 177:   func(chr);
  4040   0036A0  C506  F501         	movff	xfputc@chr,putchx@c
  4041   0036A4  C507  F502         	movff	xfputc@chr+1,putchx@c+1
  4042   0036A8  D802               	call	u1618
  4043   0036AA  EF61  F01B         	goto	u1619
  4044   0036AE                     u1618:
  4045   0036AE  0005               	push	
  4046   0036B0  6EFA               	movwf	pclath,c
  4047   0036B2  5003               	movf	xfputc@func^(0+1280),w,c
  4048   0036B4  6EFD               	movwf	tosl,c
  4049   0036B6  5004               	movf	(xfputc@func+1)^(0+1280),w,c
  4050   0036B8  6EFE               	movwf	tosh,c
  4051   0036BA  5005               	movf	(xfputc@func+2)^(0+1280),w,c
  4052   0036BC  6EFF               	movwf	tosu,c
  4053   0036BE  50FA               	movf	pclath,w,c
  4054   0036C0  0012               	return		;indir
  4055   0036C2                     u1619:
  4056                           
  4057                           ;xprintf.c: 178:  } else if (strptr && rest_num > 0) {
  4058   0036C2  EF85  F01B         	goto	l369
  4059   0036C6                     l2403:
  4060   0036C6  0105               	movlb	5	; () banked
  4061   0036C8  5194               	movf	_strptr& (0+255),w,b
  4062   0036CA  1195               	iorwf	(_strptr+1)& (0+255),w,b
  4063   0036CC  B4D8               	btfsc	status,2,c
  4064   0036CE  EF6B  F01B         	goto	u1621
  4065   0036D2  EF6D  F01B         	goto	u1620
  4066   0036D6                     u1621:
  4067   0036D6  EF85  F01B         	goto	l369
  4068   0036DA                     u1620:
  4069   0036DA                     
  4070                           ; BSR set to: 5
  4071   0036DA  BF93               	btfsc	(_rest_num+1)& (0+255),7,b
  4072   0036DC  EF78  F01B         	goto	u1631
  4073   0036E0  5193               	movf	(_rest_num+1)& (0+255),w,b
  4074   0036E2  E108               	bnz	u1630
  4075   0036E4  0592               	decf	_rest_num& (0+255),w,b
  4076   0036E6  A0D8               	btfss	status,0,c
  4077   0036E8  EF78  F01B         	goto	u1631
  4078   0036EC  EF7A  F01B         	goto	u1630
  4079   0036F0                     u1631:
  4080   0036F0  EF85  F01B         	goto	l369
  4081   0036F4                     u1630:
  4082   0036F4                     
  4083                           ; BSR set to: 5
  4084                           ;xprintf.c: 179:    *strptr++ = (char)chr;
  4085   0036F4  C594  F4D9         	movff	_strptr,fsr2l
  4086   0036F8  C595  F4DA         	movff	_strptr+1,fsr2h
  4087   0036FC  C506  F4DF         	movff	xfputc@chr,indf2
  4088   003700                     
  4089                           ; BSR set to: 5
  4090   003700  4B94               	infsnz	_strptr& (0+255),f,b
  4091   003702  2B95               	incf	(_strptr+1)& (0+255),f,b
  4092   003704                     
  4093                           ; BSR set to: 5
  4094                           ;xprintf.c: 180:    rest_num--;
  4095   003704  0792               	decf	_rest_num& (0+255),f,b
  4096   003706  A0D8               	btfss	status,0,c
  4097   003708  0793               	decf	(_rest_num+1)& (0+255),f,b
  4098   00370A                     l369:
  4099   00370A  0012               	return		;funcret
  4100   00370C                     __end_of_xfputc:
  4101                           	callstack 0
  4102                           
  4103 ;; *************** function _putchx *****************
  4104 ;; Defined at:
  4105 ;;		line 100 in file "main.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  c               2    0[COMRAM] int 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		None
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4123 ;;Total ram usage:        2 bytes
  4124 ;; Hardware stack levels used: 1
  4125 ;; This function calls:
  4126 ;;		Nothing
  4127 ;; This function is called by:
  4128 ;;		_main
  4129 ;;		_xfputc
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text12
  4134   003AF4                     __ptext12:
  4135                           	callstack 0
  4136   003AF4                     _putchx:
  4137                           	callstack 123
  4138   003AF4                     l171:
  4139   003AF4  0102               	movlb	2	; () banked
  4140   003AF6  ABD6               	btfss	214,5,b	;volatile
  4141   003AF8  EF80  F01D         	goto	u1571
  4142   003AFC  EF82  F01D         	goto	u1570
  4143   003B00                     u1571:
  4144   003B00  EF7A  F01D         	goto	l171
  4145   003B04                     u1570:
  4146   003B04                     
  4147                           ; BSR set to: 2
  4148                           ;main.c: 102:     U3TXB = (unsigned char)c;
  4149   003B04  C501  F2C9         	movff	putchx@c,713	;volatile
  4150   003B08                     
  4151                           ; BSR set to: 2
  4152   003B08  0012               	return		;funcret
  4153   003B0A                     __end_of_putchx:
  4154                           	callstack 0
  4155                           
  4156 ;; *************** function _strlen *****************
  4157 ;; Defined at:
  4158 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4161 ;;		 -> ?_xsnprintf(1), ?_xfprintf(1), ?_xprintf(1), STR_3(1), 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4164 ;;		 -> ?_xsnprintf(1), ?_xfprintf(1), ?_xprintf(1), STR_3(1), 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  2    0[COMRAM] unsigned int 
  4167 ;; Registers used:
  4168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4175 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4177 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4178 ;;Total ram usage:        4 bytes
  4179 ;; Hardware stack levels used: 1
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_xvfprintf
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text13
  4188   0039C2                     __ptext13:
  4189                           	callstack 0
  4190   0039C2                     _strlen:
  4191                           	callstack 124
  4192   0039C2  C501  F503         	movff	strlen@s,strlen@a
  4193   0039C6  C502  F504         	movff	strlen@s+1,strlen@a+1
  4194   0039CA  EFE9  F01C         	goto	l2417
  4195   0039CE                     l2415:
  4196   0039CE  4A01               	infsnz	strlen@s^(0+1280),f,c
  4197   0039D0  2A02               	incf	(strlen@s+1)^(0+1280),f,c
  4198   0039D2                     l2417:
  4199   0039D2  C501  F4F6         	movff	strlen@s,tblptrl
  4200   0039D6  C502  F4F7         	movff	strlen@s+1,tblptrh
  4201   0039DA  0E00               	movlw	low (__smallconst shr (0+16))
  4202   0039DC  6EF8               	movwf	tblptru,c
  4203   0039DE  0E25               	movlw	(high __ramtop+-1)
  4204   0039E0  64F7               	cpfsgt	tblptrh,c
  4205   0039E2  D003               	bra	u1647
  4206   0039E4  0008               	tblrd		*
  4207   0039E6  50F5               	movf	tablat,w,c
  4208   0039E8  D005               	bra	u1640
  4209   0039EA                     u1647:
  4210   0039EA  C4F6 F4E9          	movff	tblptrl,fsr0l
  4211   0039EE  C4F7 F4EA          	movff	tblptrh,fsr0h
  4212   0039F2  50EF               	movf	indf0,w,c
  4213   0039F4                     u1640:
  4214   0039F4  0900               	iorlw	0
  4215   0039F6  A4D8               	btfss	status,2,c
  4216   0039F8  EF00  F01D         	goto	u1651
  4217   0039FC  EF02  F01D         	goto	u1650
  4218   003A00                     u1651:
  4219   003A00  EFE7  F01C         	goto	l2415
  4220   003A04                     u1650:
  4221   003A04  5003               	movf	strlen@a^(0+1280),w,c
  4222   003A06  5C01               	subwf	strlen@s^(0+1280),w,c
  4223   003A08  6E01               	movwf	?_strlen^(0+1280),c
  4224   003A0A  5004               	movf	(strlen@a+1)^(0+1280),w,c
  4225   003A0C  5802               	subwfb	(strlen@s+1)^(0+1280),w,c
  4226   003A0E  6E02               	movwf	(?_strlen+1)^(0+1280),c
  4227   003A10  0012               	return		;funcret
  4228   003A12                     __end_of_strlen:
  4229                           	callstack 0
  4230                           
  4231 ;; *************** function ___wmul *****************
  4232 ;; Defined at:
  4233 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  multiplier      2    0[COMRAM] unsigned int 
  4236 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  product         2    4[COMRAM] unsigned int 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  2    0[COMRAM] unsigned int 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0, prodl, prodh
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4249 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4251 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4252 ;;Total ram usage:        6 bytes
  4253 ;; Hardware stack levels used: 1
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_xvfprintf
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text14
  4262   003A7C                     __ptext14:
  4263                           	callstack 0
  4264   003A7C                     ___wmul:
  4265                           	callstack 124
  4266   003A7C  5001               	movf	___wmul@multiplier^(0+1280),w,c
  4267   003A7E  0203               	mulwf	___wmul@multiplicand^(0+1280),c
  4268   003A80  C4F3 F505          	movff	prodl,___wmul@product
  4269   003A84  C4F4 F506          	movff	prodh,___wmul@product+1
  4270   003A88  5001               	movf	___wmul@multiplier^(0+1280),w,c
  4271   003A8A  0204               	mulwf	(___wmul@multiplicand+1)^(0+1280),c
  4272   003A8C  50F3               	movf	243,w,c
  4273   003A8E  2606               	addwf	(___wmul@product+1)^(0+1280),f,c
  4274   003A90  5002               	movf	(___wmul@multiplier+1)^(0+1280),w,c
  4275   003A92  0203               	mulwf	___wmul@multiplicand^(0+1280),c
  4276   003A94  50F3               	movf	243,w,c
  4277   003A96  2606               	addwf	(___wmul@product+1)^(0+1280),f,c
  4278   003A98  C505  F501         	movff	___wmul@product,?___wmul
  4279   003A9C  C506  F502         	movff	___wmul@product+1,?___wmul+1
  4280   003AA0  0012               	return		;funcret
  4281   003AA2                     __end_of___wmul:
  4282                           	callstack 0
  4283                           
  4284 ;; *************** function ___llmod *****************
  4285 ;; Defined at:
  4286 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\llmod.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  dividend        4    0[COMRAM] unsigned long 
  4289 ;;  divisor         4    4[COMRAM] unsigned long 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  counter         1    8[COMRAM] unsigned char 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  4    0[COMRAM] unsigned long 
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4301 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4304 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4305 ;;Total ram usage:        9 bytes
  4306 ;; Hardware stack levels used: 1
  4307 ;; This function calls:
  4308 ;;		Nothing
  4309 ;; This function is called by:
  4310 ;;		_xvfprintf
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text15
  4315   00385C                     __ptext15:
  4316                           	callstack 0
  4317   00385C                     ___llmod:
  4318                           	callstack 124
  4319   00385C  5005               	movf	___llmod@divisor^(0+1280),w,c
  4320   00385E  1006               	iorwf	(___llmod@divisor+1)^(0+1280),w,c
  4321   003860  1007               	iorwf	(___llmod@divisor+2)^(0+1280),w,c
  4322   003862  1008               	iorwf	(___llmod@divisor+3)^(0+1280),w,c
  4323   003864  B4D8               	btfsc	status,2,c
  4324   003866  EF37  F01C         	goto	u1691
  4325   00386A  EF39  F01C         	goto	u1690
  4326   00386E                     u1691:
  4327   00386E  EF69  F01C         	goto	l1068
  4328   003872                     u1690:
  4329   003872  0E01               	movlw	1
  4330   003874  6E09               	movwf	___llmod@counter^(0+1280),c
  4331   003876  EF43  F01C         	goto	l2457
  4332   00387A                     l2455:
  4333   00387A  90D8               	bcf	status,0,c
  4334   00387C  3605               	rlcf	___llmod@divisor^(0+1280),f,c
  4335   00387E  3606               	rlcf	(___llmod@divisor+1)^(0+1280),f,c
  4336   003880  3607               	rlcf	(___llmod@divisor+2)^(0+1280),f,c
  4337   003882  3608               	rlcf	(___llmod@divisor+3)^(0+1280),f,c
  4338   003884  2A09               	incf	___llmod@counter^(0+1280),f,c
  4339   003886                     l2457:
  4340   003886  AE08               	btfss	(___llmod@divisor+3)^(0+1280),7,c
  4341   003888  EF48  F01C         	goto	u1701
  4342   00388C  EF4A  F01C         	goto	u1700
  4343   003890                     u1701:
  4344   003890  EF3D  F01C         	goto	l2455
  4345   003894                     u1700:
  4346   003894                     l2459:
  4347   003894  5005               	movf	___llmod@divisor^(0+1280),w,c
  4348   003896  5C01               	subwf	___llmod@dividend^(0+1280),w,c
  4349   003898  5006               	movf	(___llmod@divisor+1)^(0+1280),w,c
  4350   00389A  5802               	subwfb	(___llmod@dividend+1)^(0+1280),w,c
  4351   00389C  5007               	movf	(___llmod@divisor+2)^(0+1280),w,c
  4352   00389E  5803               	subwfb	(___llmod@dividend+2)^(0+1280),w,c
  4353   0038A0  5008               	movf	(___llmod@divisor+3)^(0+1280),w,c
  4354   0038A2  5804               	subwfb	(___llmod@dividend+3)^(0+1280),w,c
  4355   0038A4  A0D8               	btfss	status,0,c
  4356   0038A6  EF57  F01C         	goto	u1711
  4357   0038AA  EF59  F01C         	goto	u1710
  4358   0038AE                     u1711:
  4359   0038AE  EF61  F01C         	goto	l2463
  4360   0038B2                     u1710:
  4361   0038B2  5005               	movf	___llmod@divisor^(0+1280),w,c
  4362   0038B4  5E01               	subwf	___llmod@dividend^(0+1280),f,c
  4363   0038B6  5006               	movf	(___llmod@divisor+1)^(0+1280),w,c
  4364   0038B8  5A02               	subwfb	(___llmod@dividend+1)^(0+1280),f,c
  4365   0038BA  5007               	movf	(___llmod@divisor+2)^(0+1280),w,c
  4366   0038BC  5A03               	subwfb	(___llmod@dividend+2)^(0+1280),f,c
  4367   0038BE  5008               	movf	(___llmod@divisor+3)^(0+1280),w,c
  4368   0038C0  5A04               	subwfb	(___llmod@dividend+3)^(0+1280),f,c
  4369   0038C2                     l2463:
  4370   0038C2  90D8               	bcf	status,0,c
  4371   0038C4  3208               	rrcf	(___llmod@divisor+3)^(0+1280),f,c
  4372   0038C6  3207               	rrcf	(___llmod@divisor+2)^(0+1280),f,c
  4373   0038C8  3206               	rrcf	(___llmod@divisor+1)^(0+1280),f,c
  4374   0038CA  3205               	rrcf	___llmod@divisor^(0+1280),f,c
  4375   0038CC  2E09               	decfsz	___llmod@counter^(0+1280),f,c
  4376   0038CE  EF4A  F01C         	goto	l2459
  4377   0038D2                     l1068:
  4378   0038D2  C501  F501         	movff	___llmod@dividend,?___llmod
  4379   0038D6  C502  F502         	movff	___llmod@dividend+1,?___llmod+1
  4380   0038DA  C503  F503         	movff	___llmod@dividend+2,?___llmod+2
  4381   0038DE  C504  F504         	movff	___llmod@dividend+3,?___llmod+3
  4382   0038E2  0012               	return		;funcret
  4383   0038E4                     __end_of___llmod:
  4384                           	callstack 0
  4385                           
  4386 ;; *************** function ___lldiv *****************
  4387 ;; Defined at:
  4388 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  dividend        4    0[COMRAM] unsigned long 
  4391 ;;  divisor         4    4[COMRAM] unsigned long 
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  quotient        4    8[COMRAM] unsigned long 
  4394 ;;  counter         1   12[COMRAM] unsigned char 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  4    0[COMRAM] unsigned long 
  4397 ;; Registers used:
  4398 ;;		wreg, status,2, status,0
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4404 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4405 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4407 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4408 ;;Total ram usage:       13 bytes
  4409 ;; Hardware stack levels used: 1
  4410 ;; This function calls:
  4411 ;;		Nothing
  4412 ;; This function is called by:
  4413 ;;		_xvfprintf
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text16
  4418   0037B8                     __ptext16:
  4419                           	callstack 0
  4420   0037B8                     ___lldiv:
  4421                           	callstack 124
  4422   0037B8  0E00               	movlw	0
  4423   0037BA  6E09               	movwf	___lldiv@quotient^(0+1280),c
  4424   0037BC  0E00               	movlw	0
  4425   0037BE  6E0A               	movwf	(___lldiv@quotient+1)^(0+1280),c
  4426   0037C0  0E00               	movlw	0
  4427   0037C2  6E0B               	movwf	(___lldiv@quotient+2)^(0+1280),c
  4428   0037C4  0E00               	movlw	0
  4429   0037C6  6E0C               	movwf	(___lldiv@quotient+3)^(0+1280),c
  4430   0037C8  5005               	movf	___lldiv@divisor^(0+1280),w,c
  4431   0037CA  1006               	iorwf	(___lldiv@divisor+1)^(0+1280),w,c
  4432   0037CC  1007               	iorwf	(___lldiv@divisor+2)^(0+1280),w,c
  4433   0037CE  1008               	iorwf	(___lldiv@divisor+3)^(0+1280),w,c
  4434   0037D0  B4D8               	btfsc	status,2,c
  4435   0037D2  EFED  F01B         	goto	u1661
  4436   0037D6  EFEF  F01B         	goto	u1660
  4437   0037DA                     u1661:
  4438   0037DA  EF25  F01C         	goto	l675
  4439   0037DE                     u1660:
  4440   0037DE  0E01               	movlw	1
  4441   0037E0  6E0D               	movwf	___lldiv@counter^(0+1280),c
  4442   0037E2  EFF9  F01B         	goto	l2437
  4443   0037E6                     l2435:
  4444   0037E6  90D8               	bcf	status,0,c
  4445   0037E8  3605               	rlcf	___lldiv@divisor^(0+1280),f,c
  4446   0037EA  3606               	rlcf	(___lldiv@divisor+1)^(0+1280),f,c
  4447   0037EC  3607               	rlcf	(___lldiv@divisor+2)^(0+1280),f,c
  4448   0037EE  3608               	rlcf	(___lldiv@divisor+3)^(0+1280),f,c
  4449   0037F0  2A0D               	incf	___lldiv@counter^(0+1280),f,c
  4450   0037F2                     l2437:
  4451   0037F2  AE08               	btfss	(___lldiv@divisor+3)^(0+1280),7,c
  4452   0037F4  EFFE  F01B         	goto	u1671
  4453   0037F8  EF00  F01C         	goto	u1670
  4454   0037FC                     u1671:
  4455   0037FC  EFF3  F01B         	goto	l2435
  4456   003800                     u1670:
  4457   003800                     l2439:
  4458   003800  90D8               	bcf	status,0,c
  4459   003802  3609               	rlcf	___lldiv@quotient^(0+1280),f,c
  4460   003804  360A               	rlcf	(___lldiv@quotient+1)^(0+1280),f,c
  4461   003806  360B               	rlcf	(___lldiv@quotient+2)^(0+1280),f,c
  4462   003808  360C               	rlcf	(___lldiv@quotient+3)^(0+1280),f,c
  4463   00380A  5005               	movf	___lldiv@divisor^(0+1280),w,c
  4464   00380C  5C01               	subwf	___lldiv@dividend^(0+1280),w,c
  4465   00380E  5006               	movf	(___lldiv@divisor+1)^(0+1280),w,c
  4466   003810  5802               	subwfb	(___lldiv@dividend+1)^(0+1280),w,c
  4467   003812  5007               	movf	(___lldiv@divisor+2)^(0+1280),w,c
  4468   003814  5803               	subwfb	(___lldiv@dividend+2)^(0+1280),w,c
  4469   003816  5008               	movf	(___lldiv@divisor+3)^(0+1280),w,c
  4470   003818  5804               	subwfb	(___lldiv@dividend+3)^(0+1280),w,c
  4471   00381A  A0D8               	btfss	status,0,c
  4472   00381C  EF12  F01C         	goto	u1681
  4473   003820  EF14  F01C         	goto	u1680
  4474   003824                     u1681:
  4475   003824  EF1D  F01C         	goto	l2447
  4476   003828                     u1680:
  4477   003828  5005               	movf	___lldiv@divisor^(0+1280),w,c
  4478   00382A  5E01               	subwf	___lldiv@dividend^(0+1280),f,c
  4479   00382C  5006               	movf	(___lldiv@divisor+1)^(0+1280),w,c
  4480   00382E  5A02               	subwfb	(___lldiv@dividend+1)^(0+1280),f,c
  4481   003830  5007               	movf	(___lldiv@divisor+2)^(0+1280),w,c
  4482   003832  5A03               	subwfb	(___lldiv@dividend+2)^(0+1280),f,c
  4483   003834  5008               	movf	(___lldiv@divisor+3)^(0+1280),w,c
  4484   003836  5A04               	subwfb	(___lldiv@dividend+3)^(0+1280),f,c
  4485   003838  8009               	bsf	___lldiv@quotient^(0+1280),0,c
  4486   00383A                     l2447:
  4487   00383A  90D8               	bcf	status,0,c
  4488   00383C  3208               	rrcf	(___lldiv@divisor+3)^(0+1280),f,c
  4489   00383E  3207               	rrcf	(___lldiv@divisor+2)^(0+1280),f,c
  4490   003840  3206               	rrcf	(___lldiv@divisor+1)^(0+1280),f,c
  4491   003842  3205               	rrcf	___lldiv@divisor^(0+1280),f,c
  4492   003844  2E0D               	decfsz	___lldiv@counter^(0+1280),f,c
  4493   003846  EF00  F01C         	goto	l2439
  4494   00384A                     l675:
  4495   00384A  C509  F501         	movff	___lldiv@quotient,?___lldiv
  4496   00384E  C50A  F502         	movff	___lldiv@quotient+1,?___lldiv+1
  4497   003852  C50B  F503         	movff	___lldiv@quotient+2,?___lldiv+2
  4498   003856  C50C  F504         	movff	___lldiv@quotient+3,?___lldiv+3
  4499   00385A  0012               	return		;funcret
  4500   00385C                     __end_of___lldiv:
  4501                           	callstack 0
  4502                           
  4503 ;; *************** function _poke_ram *****************
  4504 ;; Defined at:
  4505 ;;		line 163 in file "main.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  addr            2    0[COMRAM] unsigned short 
  4508 ;;  c               1    2[COMRAM] unsigned char 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4520 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4522 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4523 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4524 ;;Total ram usage:        5 bytes
  4525 ;; Hardware stack levels used: 1
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_main
  4530 ;;		_clear_all
  4531 ;;		_manualboot
  4532 ;;		_march_test
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text17
  4537   003AA2                     __ptext17:
  4538                           	callstack 0
  4539   003AA2                     _poke_ram:
  4540                           	callstack 126
  4541   003AA2                     
  4542                           ;main.c: 163: void poke_ram(addr_t addr, char c);main.c: 164: {;main.c: 166:     ram[add
      +                          r&0xfff] = c;
  4543   003AA2  0EFF               	movlw	255
  4544   003AA4  1401               	andwf	poke_ram@addr^(0+1280),w,c
  4545   003AA6  6E04               	movwf	??_poke_ram^(0+1280),c
  4546   003AA8  0E0F               	movlw	15
  4547   003AAA  1402               	andwf	(poke_ram@addr+1)^(0+1280),w,c
  4548   003AAC  6E05               	movwf	(??_poke_ram+1)^(0+1280),c
  4549   003AAE  0E00               	movlw	low _ram
  4550   003AB0  2404               	addwf	??_poke_ram^(0+1280),w,c
  4551   003AB2  6ED9               	movwf	fsr2l,c
  4552   003AB4  0E15               	movlw	high _ram
  4553   003AB6  2005               	addwfc	(??_poke_ram+1)^(0+1280),w,c
  4554   003AB8  6EDA               	movwf	fsr2h,c
  4555   003ABA  C503  F4DF         	movff	poke_ram@c,indf2
  4556   003ABE  0012               	return		;funcret
  4557   003AC0                     __end_of_poke_ram:
  4558                           	callstack 0
  4559                           
  4560 ;; *************** function _init_boot *****************
  4561 ;; Defined at:
  4562 ;;		line 169 in file "main.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;		None
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;		None
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  1    wreg      void 
  4569 ;; Registers used:
  4570 ;;		None
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4580 ;;Total ram usage:        0 bytes
  4581 ;; Hardware stack levels used: 1
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_main
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text18
  4590   003B38                     __ptext18:
  4591                           	callstack 0
  4592   003B38                     _init_boot:
  4593                           	callstack 126
  4594   003B38  0012               	return		;funcret
  4595   003B3A                     __end_of_init_boot:
  4596                           	callstack 0
  4597                           
  4598 ;; *************** function _get_addr *****************
  4599 ;; Defined at:
  4600 ;;		line 141 in file "main.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;		None
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  2    0[COMRAM] unsigned short 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4616 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4617 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4618 ;;Total ram usage:        4 bytes
  4619 ;; Hardware stack levels used: 1
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_main
  4624 ;;		_monitor
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text19
  4629   003B1A                     __ptext19:
  4630                           	callstack 0
  4631   003B1A                     _get_addr:
  4632                           	callstack 126
  4633   003B1A                     
  4634                           ;main.c: 143:     return ((((addr_t)PORTD)<<8) | PORTB);
  4635   003B1A  50D1               	movf	209,w,c	;volatile
  4636   003B1C  6E03               	movwf	??_get_addr^(0+1280),c
  4637   003B1E  50CF               	movf	207,w,c	;volatile
  4638   003B20  6E01               	movwf	?_get_addr^(0+1280),c
  4639   003B22  C503  F502         	movff	??_get_addr,?_get_addr+1
  4640   003B26  0012               	return		;funcret
  4641   003B28                     __end_of_get_addr:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function _end_boot *****************
  4645 ;; Defined at:
  4646 ;;		line 174 in file "main.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;		None
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		None
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4664 ;;Total ram usage:        0 bytes
  4665 ;; Hardware stack levels used: 1
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_main
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text20
  4674   003B3A                     __ptext20:
  4675                           	callstack 0
  4676   003B3A                     _end_boot:
  4677                           	callstack 126
  4678   003B3A  0012               	return		;funcret
  4679   003B3C                     __end_of_end_boot:
  4680                           	callstack 0
  4681                           
  4682 ;; *************** function _RES_off *****************
  4683 ;; Defined at:
  4684 ;;		line 131 in file "main.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;		None
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;		None
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		None
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4702 ;;Total ram usage:        0 bytes
  4703 ;; Hardware stack levels used: 1
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_main
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text21
  4712   003B32                     __ptext21:
  4713                           	callstack 0
  4714   003B32                     _RES_off:
  4715                           	callstack 126
  4716   003B32                     
  4717                           ;main.c: 133:     LATE1 = 1;
  4718   003B32  82C2               	bsf	1218,1,c	;volatile
  4719   003B34  0012               	return		;funcret
  4720   003B36                     __end_of_RES_off:
  4721                           	callstack 0
  4722                           
  4723                           	psect	text22
  4724   000000                     __ptext22:
  4725                           	callstack 0
  4726   000000                     
  4727                           	psect	rparam
  4728   000000                     
  4729                           	psect	idloc
  4730                           
  4731                           ;Config register IDLOC0 @ 0x200000
  4732                           ;	unspecified, using default values
  4733   200000                     	org	2097152
  4734   200000  FFFF               	dw	65535
  4735                           
  4736                           ;Config register IDLOC1 @ 0x200002
  4737                           ;	unspecified, using default values
  4738   200002                     	org	2097154
  4739   200002  FFFF               	dw	65535
  4740                           
  4741                           ;Config register IDLOC2 @ 0x200004
  4742                           ;	unspecified, using default values
  4743   200004                     	org	2097156
  4744   200004  FFFF               	dw	65535
  4745                           
  4746                           ;Config register IDLOC3 @ 0x200006
  4747                           ;	unspecified, using default values
  4748   200006                     	org	2097158
  4749   200006  FFFF               	dw	65535
  4750                           
  4751                           ;Config register IDLOC4 @ 0x200008
  4752                           ;	unspecified, using default values
  4753   200008                     	org	2097160
  4754   200008  FFFF               	dw	65535
  4755                           
  4756                           ;Config register IDLOC5 @ 0x20000A
  4757                           ;	unspecified, using default values
  4758   20000A                     	org	2097162
  4759   20000A  FFFF               	dw	65535
  4760                           
  4761                           ;Config register IDLOC6 @ 0x20000C
  4762                           ;	unspecified, using default values
  4763   20000C                     	org	2097164
  4764   20000C  FFFF               	dw	65535
  4765                           
  4766                           ;Config register IDLOC7 @ 0x20000E
  4767                           ;	unspecified, using default values
  4768   20000E                     	org	2097166
  4769   20000E  FFFF               	dw	65535
  4770                           
  4771                           ;Config register IDLOC8 @ 0x200010
  4772                           ;	unspecified, using default values
  4773   200010                     	org	2097168
  4774   200010  FFFF               	dw	65535
  4775                           
  4776                           ;Config register IDLOC9 @ 0x200012
  4777                           ;	unspecified, using default values
  4778   200012                     	org	2097170
  4779   200012  FFFF               	dw	65535
  4780                           
  4781                           ;Config register IDLOC10 @ 0x200014
  4782                           ;	unspecified, using default values
  4783   200014                     	org	2097172
  4784   200014  FFFF               	dw	65535
  4785                           
  4786                           ;Config register IDLOC11 @ 0x200016
  4787                           ;	unspecified, using default values
  4788   200016                     	org	2097174
  4789   200016  FFFF               	dw	65535
  4790                           
  4791                           ;Config register IDLOC12 @ 0x200018
  4792                           ;	unspecified, using default values
  4793   200018                     	org	2097176
  4794   200018  FFFF               	dw	65535
  4795                           
  4796                           ;Config register IDLOC13 @ 0x20001A
  4797                           ;	unspecified, using default values
  4798   20001A                     	org	2097178
  4799   20001A  FFFF               	dw	65535
  4800                           
  4801                           ;Config register IDLOC14 @ 0x20001C
  4802                           ;	unspecified, using default values
  4803   20001C                     	org	2097180
  4804   20001C  FFFF               	dw	65535
  4805                           
  4806                           ;Config register IDLOC15 @ 0x20001E
  4807                           ;	unspecified, using default values
  4808   20001E                     	org	2097182
  4809   20001E  FFFF               	dw	65535
  4810                           
  4811                           ;Config register IDLOC16 @ 0x200020
  4812                           ;	unspecified, using default values
  4813   200020                     	org	2097184
  4814   200020  FFFF               	dw	65535
  4815                           
  4816                           ;Config register IDLOC17 @ 0x200022
  4817                           ;	unspecified, using default values
  4818   200022                     	org	2097186
  4819   200022  FFFF               	dw	65535
  4820                           
  4821                           ;Config register IDLOC18 @ 0x200024
  4822                           ;	unspecified, using default values
  4823   200024                     	org	2097188
  4824   200024  FFFF               	dw	65535
  4825                           
  4826                           ;Config register IDLOC19 @ 0x200026
  4827                           ;	unspecified, using default values
  4828   200026                     	org	2097190
  4829   200026  FFFF               	dw	65535
  4830                           
  4831                           ;Config register IDLOC20 @ 0x200028
  4832                           ;	unspecified, using default values
  4833   200028                     	org	2097192
  4834   200028  FFFF               	dw	65535
  4835                           
  4836                           ;Config register IDLOC21 @ 0x20002A
  4837                           ;	unspecified, using default values
  4838   20002A                     	org	2097194
  4839   20002A  FFFF               	dw	65535
  4840                           
  4841                           ;Config register IDLOC22 @ 0x20002C
  4842                           ;	unspecified, using default values
  4843   20002C                     	org	2097196
  4844   20002C  FFFF               	dw	65535
  4845                           
  4846                           ;Config register IDLOC23 @ 0x20002E
  4847                           ;	unspecified, using default values
  4848   20002E                     	org	2097198
  4849   20002E  FFFF               	dw	65535
  4850                           
  4851                           ;Config register IDLOC24 @ 0x200030
  4852                           ;	unspecified, using default values
  4853   200030                     	org	2097200
  4854   200030  FFFF               	dw	65535
  4855                           
  4856                           ;Config register IDLOC25 @ 0x200032
  4857                           ;	unspecified, using default values
  4858   200032                     	org	2097202
  4859   200032  FFFF               	dw	65535
  4860                           
  4861                           ;Config register IDLOC26 @ 0x200034
  4862                           ;	unspecified, using default values
  4863   200034                     	org	2097204
  4864   200034  FFFF               	dw	65535
  4865                           
  4866                           ;Config register IDLOC27 @ 0x200036
  4867                           ;	unspecified, using default values
  4868   200036                     	org	2097206
  4869   200036  FFFF               	dw	65535
  4870                           
  4871                           ;Config register IDLOC28 @ 0x200038
  4872                           ;	unspecified, using default values
  4873   200038                     	org	2097208
  4874   200038  FFFF               	dw	65535
  4875                           
  4876                           ;Config register IDLOC29 @ 0x20003A
  4877                           ;	unspecified, using default values
  4878   20003A                     	org	2097210
  4879   20003A  FFFF               	dw	65535
  4880                           
  4881                           ;Config register IDLOC30 @ 0x20003C
  4882                           ;	unspecified, using default values
  4883   20003C                     	org	2097212
  4884   20003C  FFFF               	dw	65535
  4885                           
  4886                           ;Config register IDLOC31 @ 0x20003E
  4887                           ;	unspecified, using default values
  4888   20003E                     	org	2097214
  4889   20003E  FFFF               	dw	65535
  4890                           
  4891                           	psect	config
  4892                           
  4893                           ;Config register CONFIG1 @ 0x300000
  4894                           ;	External Oscillator Selection
  4895                           ;	FEXTOSC = OFF, Oscillator not enabled
  4896                           ;	Reset Oscillator Selection
  4897                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  4898   300000                     	org	3145728
  4899   300000  8C                 	db	140
  4900                           
  4901                           ;Config register CONFIG2 @ 0x300001
  4902                           ;	Clock out Enable bit
  4903                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4904                           ;	PRLOCKED One-Way Set Enable bit
  4905                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  4906                           ;	Clock Switch Enable bit
  4907                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4908                           ;	Fail-Safe Clock Monitor Enable bit
  4909                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4910   300001                     	org	3145729
  4911   300001  FF                 	db	255
  4912                           
  4913                           ;Config register CONFIG3 @ 0x300002
  4914                           ;	MCLR Enable bit
  4915                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4916                           ;	Power-up timer selection bits
  4917                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4918                           ;	Multi-vector enable bit
  4919                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  4920                           ;	IVTLOCK bit One-way set enable bit
  4921                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  4922                           ;	Low Power BOR Enable bit
  4923                           ;	LPBOREN = OFF, Low-Power BOR disabled
  4924                           ;	Brown-out Reset Enable bits
  4925                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  4926   300002                     	org	3145730
  4927   300002  FF                 	db	255
  4928                           
  4929                           ;Config register CONFIG4 @ 0x300003
  4930                           ;	Brown-out Reset Voltage Selection bits
  4931                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  4932                           ;	ZCD Disable bit
  4933                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  4934                           ;	PPSLOCK bit One-Way Set Enable bit
  4935                           ;	PPS1WAY = OFF, PPSLOCKED bit can be set and cleared repeatedly (subject to the unlock 
      +                          sequence)
  4936                           ;	Stack Full/Underflow Reset Enable bit
  4937                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4938                           ;	Low Voltage Programming Enable bit
  4939                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  4940                           ;	Extended Instruction Set Enable bit
  4941                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4942   300003                     	org	3145731
  4943   300003  F7                 	db	247
  4944                           
  4945                           ;Config register CONFIG5 @ 0x300004
  4946                           ;	WDT Period selection bits
  4947                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4948                           ;	WDT operating mode
  4949                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4950   300004                     	org	3145732
  4951   300004  9F                 	db	159
  4952                           
  4953                           ;Config register CONFIG6 @ 0x300005
  4954                           ;	WDT Window Select bits
  4955                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4956                           ;	WDT input clock selector
  4957                           ;	WDTCCS = SC, Software Control
  4958   300005                     	org	3145733
  4959   300005  FF                 	db	255
  4960                           
  4961                           ;Config register CONFIG7 @ 0x300006
  4962                           ;	Boot Block Size selection bits
  4963                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4964                           ;	Boot Block enable bit
  4965                           ;	BBEN = OFF, Boot block disabled
  4966                           ;	Storage Area Flash enable bit
  4967                           ;	SAFEN = OFF, SAF disabled
  4968                           ;	Background Debugger
  4969                           ;	DEBUG = OFF, Background Debugger disabled
  4970   300006                     	org	3145734
  4971   300006  FF                 	db	255
  4972                           
  4973                           ;Config register CONFIG8 @ 0x300007
  4974                           ;	Boot Block Write Protection bit
  4975                           ;	WRTB = OFF, Boot Block not Write protected
  4976                           ;	Configuration Register Write Protection bit
  4977                           ;	WRTC = OFF, Configuration registers not Write protected
  4978                           ;	Data EEPROM Write Protection bit
  4979                           ;	WRTD = OFF, Data EEPROM not Write protected
  4980                           ;	SAF Write protection bit
  4981                           ;	WRTSAF = OFF, SAF not Write Protected
  4982                           ;	Application Block write protection bit
  4983                           ;	WRTAPP = OFF, Application Block not write protected
  4984   300007                     	org	3145735
  4985   300007  FF                 	db	255
  4986                           
  4987                           ;Config register CONFIG10 @ 0x300009
  4988                           ;	PFM and Data EEPROM Code Protection bit
  4989                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  4990   300009                     	org	3145737
  4991   300009  FF                 	db	255
  4992                           tosu	equ	0x4FF
  4993                           tosh	equ	0x4FE
  4994                           tosl	equ	0x4FD
  4995                           stkptr	equ	0x4FC
  4996                           pclatu	equ	0x4FB
  4997                           pclath	equ	0x4FA
  4998                           pcl	equ	0x4F9
  4999                           tblptru	equ	0x4F8
  5000                           tblptrh	equ	0x4F7
  5001                           tblptrl	equ	0x4F6
  5002                           tablat	equ	0x4F5
  5003                           prodh	equ	0x4F4
  5004                           prodl	equ	0x4F3
  5005                           indf0	equ	0x4EF
  5006                           postinc0	equ	0x4EE
  5007                           postdec0	equ	0x4ED
  5008                           preinc0	equ	0x4EC
  5009                           plusw0	equ	0x4EB
  5010                           fsr0h	equ	0x4EA
  5011                           fsr0l	equ	0x4E9
  5012                           wreg	equ	0x4E8
  5013                           indf1	equ	0x4E7
  5014                           postinc1	equ	0x4E6
  5015                           postdec1	equ	0x4E5
  5016                           preinc1	equ	0x4E4
  5017                           plusw1	equ	0x4E3
  5018                           fsr1h	equ	0x4E2
  5019                           fsr1l	equ	0x4E1
  5020                           bsr	equ	0x4E0
  5021                           indf2	equ	0x4DF
  5022                           postinc2	equ	0x4DE
  5023                           postdec2	equ	0x4DD
  5024                           preinc2	equ	0x4DC
  5025                           plusw2	equ	0x4DB
  5026                           fsr2h	equ	0x4DA
  5027                           fsr2l	equ	0x4D9
  5028                           status	equ	0x4D8

Data Sizes:
    Strings     79
    Constant    0
    Data        2
    BSS         4124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK5           160     40      70
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 1
		 -> ?_xsnprintf(COMRAM[1]), ?_xfprintf(COMRAM[1]), ?_xprintf(COMRAM[1]), STR_3(CODE[1]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 1
		 -> ?_xsnprintf(COMRAM[1]), ?_xfprintf(COMRAM[1]), ?_xprintf(COMRAM[1]), STR_3(CODE[1]), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_17(CODE[18]), STR_16(CODE[8]), STR_15(CODE[18]), STR_14(CODE[18]), 
		 -> STR_13(CODE[2]), STR_12(CODE[11]), STR_11(CODE[5]), STR_10(CODE[16]), 
		 -> STR_9(CODE[8]), STR_8(CODE[4]), STR_7(CODE[2]), STR_6(CODE[6]), 
		 -> STR_5(CODE[6]), STR_4(CODE[3]), STR_2(CODE[4]), STR_1(CODE[2]), 

    xprintf@arp	PTR void [1] size(2) Largest target is 1
		 -> ?_xsnprintf(COMRAM[1]), ?_xfprintf(COMRAM[1]), ?_xprintf(COMRAM[1]), 

    xvfprintf@p	PTR unsigned char  size(2) Largest target is 1
		 -> ?_xsnprintf(COMRAM[1]), ?_xfprintf(COMRAM[1]), ?_xprintf(COMRAM[1]), STR_3(CODE[1]), 

    xvfprintf@arp	PTR PTR void  size(2) Largest target is 2
		 -> xsnprintf@arp(COMRAM[2]), xfprintf@arp(COMRAM[2]), xprintf@arp(BANK5[2]), 

    xvfprintf@func	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> Absolute function(), putchx(), 

    xvfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_17(CODE[18]), STR_16(CODE[8]), STR_15(CODE[18]), STR_14(CODE[18]), 
		 -> STR_13(CODE[2]), STR_12(CODE[11]), STR_11(CODE[5]), STR_10(CODE[16]), 
		 -> STR_9(CODE[8]), STR_8(CODE[4]), STR_7(CODE[2]), STR_6(CODE[6]), 
		 -> STR_5(CODE[6]), STR_4(CODE[3]), STR_2(CODE[4]), STR_1(CODE[2]), 

    strptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    xfputc@func	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> Absolute function(), putchx(), 

    xfunc_input	PTR FTN()int  size(3) Largest target is 2
		 -> Absolute function(), getchx(), 

    xfunc_output	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> Absolute function(), putchx(), 


Critical Paths under _main in COMRAM

    _main->_xprintf
    _manualboot->_xprintf
    _getchr->_getchx
    _clear_all->_xprintf
    _xprintf->_xvfprintf
    _xvfprintf->___lldiv
    _xfputc->_putchx

Critical Paths under _main in BANK5

    _main->_manualboot
    _manualboot->_clear_all
    _clear_all->_xprintf

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   27630
                                             31 BANK5      9     9      0
                            _RES_off
                           _end_boot
                           _get_addr
                          _init_boot
                         _manualboot
                           _poke_ram
                       _toggle_Egate
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _toggle_Egate                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _manualboot                                          25    25      0   18928
                                              8 BANK5     23    23      0
                          _clear_all
                             _getchr
                           _peek_ram
                           _poke_ram
                             _to_hex
                           _ungetchr
                            _xprintf
 ---------------------------------------------------------------------------------
 (2) _ungetchr                                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _to_hex                                               3     1      2     133
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _peek_ram                                             4     2      2     402
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _getchr                                               6     4      2      68
                                              2 COMRAM     6     4      2
                             _getchx
 ---------------------------------------------------------------------------------
 (3) _getchx                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _clear_all                                            6     6      0    8652
                                              2 BANK5      6     6      0
                           _poke_ram
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                             12     2     10    7301
                                             85 COMRAM    10     0     10
                                              0 BANK5      2     2      0
                          _xvfprintf
 ---------------------------------------------------------------------------------
 (2) _xvfprintf                                           72    65      7    6026
                                             13 COMRAM    72    65      7
                            ___lldiv
                            ___llmod
                             ___wmul
                             _strlen
                             _xfputc
 ---------------------------------------------------------------------------------
 (3) _xfputc                                               5     0      5    1932
                                              2 COMRAM     5     0      5
                   Absolute function *
                             _putchx *
 ---------------------------------------------------------------------------------
 (4) _putchx                                               2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               2     0      2       0
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _poke_ram                                             5     2      3    1260
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _init_boot                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_addr                                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _end_boot                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RES_off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RES_off
   _end_boot
   _get_addr
   _init_boot
   _manualboot
     _clear_all
       _poke_ram
       _xprintf
         _xvfprintf
           ___lldiv
           ___llmod
           ___wmul
           _strlen
           _xfputc
             Absolute function(Fake) *
             _putchx *
     _getchr
       _getchx
     _peek_ram
     _poke_ram
     _to_hex
     _ungetchr
     _xprintf
   _poke_ram
   _toggle_Egate
   _xprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0    1000      70       50.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRhllll     129      0       0      82        0.0%
BITBIGSFRlllhhl    124      0       0      91        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK27          100      0       0      49        0.0%
BANK27             100      0       0      50        0.0%
BITBANK26          100      0       0      47        0.0%
BANK26             100      0       0      48        0.0%
BITBANK25          100      0       0      45        0.0%
BANK25             100      0       0      46        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRlllll      B1      0       0      93        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0     28      46       5       43.8%
BITBIGSFRhllhlh     76      0       0      76        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRlllhhh     59      0       0      89        0.0%
BITBIGSFRlllhhh     50      0       0      86        0.0%
BITBIGSFRhhh        2E      0       0      71        0.0%
BITBIGSFRllllh      23      0       0      92        0.0%
BITBIGSFRhllhll     22      0       0      77        0.0%
BITBIGSFRlllhhh      D      0       0      87        0.0%
BITBIGSFRlhl         7      0       0      84        0.0%
BITBIGSFRhlllhl      6      0       0      80        0.0%
BITBIGSFRhlllhh      6      0       0      78        0.0%
BITBIGSFRhlllhh      6      0       0      79        0.0%
BITBIGSFRhlllhl      6      0       0      81        0.0%
BITBIGSFRhhlh        3      0       0      72        0.0%
BITBIGSFRhhlll       3      0       0      73        0.0%
BITBIGSFRlllhhh      2      0       0      88        0.0%
BITBIGSFRlllhhh      2      0       0      90        0.0%
BITBIGSFRlhh         1      0       0      83        0.0%
BITBIGSFRhllhh       1      0       0      75        0.0%
BITBIGSFRhlh         1      0       0      74        0.0%
BITBIGSFRllh         1      0       0      85        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A5      44        0.0%
DATA                 0      0    10A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 01 09:29:22 2023

                     _ab 059A                       _uc 05A4      ___wmul@multiplicand 0503  
                    l201 3B26                      l212 3ADA                      l221 3B3A  
                    l310 31D4                      l302 31A2                      l215 3ABE  
                    l218 3B38                      l322 3228                      l306 31B8  
                    l250 2F62                      l171 3AF4                      l227 3B18  
                    l323 322A                      l315 31F6                      l235 2E64  
                    l180 3AF2                      l324 322E                      l244 2F50  
                    l236 2E8E                      l173 3B04                      l317 31F8  
                    l261 30CA                      l245 2F4C                      l174 3B08  
                    l334 324E                      l270 3100                      l238 2ECA  
                    l327 3234                      l319 31FA                      l255 30A6  
                    l247 2F5E                      l264 30DC                      l409 2B90  
                    l177 3ADC                      l337 325C                      l273 3112  
                    l249 2F60                      l338 325E                      l282 3148  
                    l258 30B8                      l195 3B34                      l179 3AEC  
                    l267 30EE                      l460 2E56                      l276 3124  
                    l381 2652                      l285 315A                      l463 3A7A  
                    l279 3136                      l448 2D6A                      l608 3654  
                    l288 316C                      l369 370A                      l545 37B6  
                    l554 3B30                      l571 3956                      l299 3190  
                    l564 39C0                      l565 39BC                      l399 28EE  
                    l575 3288                      l648 3AA0                      l682 385A  
                    l675 384A                      _RA0 002670                      _RA1 002671  
                    _RD5 00268D                      _ram 1500              getchr@count 0590  
                    tosl 0004FD                      wreg 0004E8                     l3001 2F24  
                   l1075 38E2                     l3011 2F34                     l3003 2F28  
                   l1068 38D2                     l1325 3A10                     l3101 3022  
                   l3021 2F42                     l3013 2F38                     l3005 2F2A  
                   l3111 3034                     l3103 3026                     l3031 2F94  
                   l3023 2F44                     l3015 2F3A                     l3007 2F30  
                   l2401 36A0                     l3201 3186                     l3121 3048  
                   l3113 3038                     l3105 3028                     l3041 2FA8  
                   l3033 2F96                     l3025 2F46                     l3017 2F3C  
                   l3009 2F32                     l2411 3704                     l2403 36C6  
                   l3211 31C6                     l3203 3186                     l3131 305C  
                   l3123 304C                     l3115 303C                     l3107 302C  
                   l3051 2FB6                     l3043 2FAC                     l3035 2F98  
                   l3027 2F76                     l3019 2F40                     l2413 39C2  
                   l2405 36DA                     l3221 31F0                     l3213 31C6  
                   l3205 319E                     l3141 3070                     l3133 3060  
                   l3125 3050                     l3117 3040                     l3109 3030  
                   l3061 2FCA                     l3053 2FBC                     l3045 2FAE  
                   l3037 2F9C                     l3029 2F92                     l2431 37C8  
                   l2423 3A7C                     l2415 39CE                     l2407 36F4  
                   l2511 277C                     l2503 2724                     l3223 31FC  
                   l3215 31D6                     l3207 31B0                     l3151 3084  
                   l3143 3074                     l3135 3064                     l3127 3054  
                   l3119 3044                     l3071 2FE6                     l3063 2FCC  
                   l3055 2FC0                     l3047 2FB0                     l3039 2FA4  
                   l2441 380A                     l2433 37DE                     l2425 3A98  
                   l2417 39D2                     l2409 3700                     l2601 2AA4  
                   l2521 27CE                     l2513 2784                     l2505 2736  
                   l3225 320E                     l3233 324A                     l3217 31E8  
                   l3209 31B4                     l3161 309E                     l3153 3088  
                   l3145 3078                     l3137 3068                     l3129 3058  
                   l3081 2FFA                     l3073 2FEA                     l3065 2FD8  
                   l3057 2FC2                     l3049 2FB4                     l2443 3828  
                   l2435 37E6                     l2451 385C                     l2419 3A04  
                   l2603 2AA8                     l2531 2816                     l2523 27E0  
                   l2515 278C                     l2507 275E                     l3235 3260  
                   l3227 3236                     l3219 31EC                     l3171 30C6  
                   l3163 30A0                     l3155 3094                     l3147 307C  
                   l3139 306C                     l3091 300E                     l3083 2FFE  
                   l3075 2FEE                     l3067 2FDE                     l3059 2FC4  
                   l2445 3838                     l2437 37F2                     l2429 37B8  
                   l2461 38B2                     l2453 3872                     l2621 2BE4  
                   l2605 2ADA                     l2541 2878                     l2533 2828  
                   l2517 279E                     l2509 276C                     l2525 27E4  
                   l2701 371C                     l3237 3264                     l3181 3120  
                   l3173 30D8                     l3165 30A2                     l3157 309A  
                   l3149 3080                     l3093 3012                     l3085 3002  
                   l3077 2FF2                     l3069 2FE2                     l2447 383A  
                   l2439 3800                     l2463 38C2                     l2455 387A  
                   l2631 2C80                     l2623 2C1C                     l2607 2AF8  
                   l2615 2B36                     l2551 28CA                     l2543 2880  
                   l2535 282C                     l2527 27F4                     l2519 27A6  
                   l2471 2668                     l2711 379C                     l2703 3734  
                   l3191 317A                     l3183 3132                     l3175 30EA  
                   l3167 30A4                     l3159 309C                     l3095 3016  
                   l3087 3006                     l3079 2FF8                     l2449 3844  
                   l2465 38CC                     l2457 3886                     l2393 3AF4  
                   l2641 2CEE                     l2633 2C82                     l2625 2C4E  
                   l2617 2B9E                     l2609 2B10                     l2561 2914  
                   l2553 28DA                     l2545 288C                     l2537 283E  
                   l2529 2804                     l2481 26BC                     l2705 3754  
                   l2721 3B28                     l2801 3340                     l3193 317E  
                   l3185 3144                     l3177 30FC                     l3169 30B4  
                   l3097 301A                     l3089 300A                     l2459 3894  
                   l2395 3656                     l2643 2CFE                     l2651 2D28  
                   l2635 2C8A                     l2627 2C60                     l2619 2BD2  
                   l2571 2944                     l2563 2918                     l2547 28B4  
                   l2539 2866                     l2555 28EE                     l2491 26EC  
                   l2483 26C0                     l2475 267C                     l2467 2652  
                   l2715 37A4                     l2707 377E                     l2731 398A  
                   l2723 395A                     l2811 33D2                     l2803 335E  
                   l3195 3180                     l3187 3156                     l3179 310E  
                   l3099 301E                     l2397 366A                     l2661 2D88  
                   l2653 2D3A                     l2645 2D10                     l2637 2C9A  
                   l2629 2C6E                     l3365 2B4A                     l2581 29D4  
                   l2573 2950                     l2557 2900                     l2549 28C6  
                   l2493 26FE                     l2485 26D2                     l2477 268E  
                   l2469 2664                     l2741 38E4                     l2717 37AE  
                   l2709 3792                     l2733 398C                     l2725 396A  
                   l2821 341C                     l2813 33DE                     l2805 3372  
                   l3197 3182                     l3189 3168                     l2399 368C  
                   l2671 2DC0                     l2663 2D8C                     l2655 2D3E  
                   l2647 2D1C                     l2639 2CBE                     l2591 2A28  
                   l2583 29DC                     l2575 295C                     l2567 292C  
                   l2559 2902                     l2495 2706                     l2487 26D6  
                   l2479 26A8                     l2751 393E                     l2743 38F6  
                   l2735 399C                     l2727 397A                     l2831 347C  
                   l2823 3430                     l2807 3384                     l2815 33E8  
                   l3199 3184                     l2753 3B32                     l2673 2DD6  
                   l2665 2D98                     l2657 2D54                     l2649 2D24  
                   l2593 2A3E                     l2585 29F0                     l2577 299A  
                   l2569 2938                     l2497 2718                     l2489 26E8  
                   l2745 3914                     l2737 39AC                     l2841 34BC  
                   l2833 3488                     l2817 33FE                     l2809 33B0  
                   l2825 3448                     l2675 2E02                     l2667 2DAE  
                   l2659 2D78                     l2587 29FE                     l2595 2A42  
                   l2579 29C2                     l2691 3A5A                     l2747 3928  
                   l2851 34F4                     l2843 34D0                     l2835 349C  
                   l2827 345C                     l2819 3410                     l2771 3B10  
                   l2677 2E18                     l2669 2DB2                     l2597 2A50  
                   l2589 2A1C                     l2749 392E                     l2685 3ADC  
                   l2693 3AC0                     l2853 3500                     l2845 34D4  
                   l2837 34A4                     l2829 3468                     l2781 3288  
                   l2773 3B12                     l2941 2E60                     l2933 2E58  
                   l2759 3B1A                     l2687 3AA2                     l2679 2E30  
                   l2599 2A6A                     l2871 35A6                     l2863 3566  
                   l2855 350E                     l2847 34DA                     l2839 34A8  
                   l2783 32AA                     l2775 3B16                     l2951 2E72  
                   l2943 2E62                     l2935 2E58                     l2689 3A50  
                   l2881 35EE                     l2873 35BA                     l2865 3574  
                   l2857 3528                     l2849 34E2                     l2793 32FE  
                   l2785 32BE                     l2777 326E                     l2769 3B0A  
                   l2961 2E7C                     l2953 2E74                     l2945 2E6A  
                   l2937 2E5C                     l2699 370C                     l2883 3604  
                   l2867 3586                     l2875 35C6                     l2859 3554  
                   l2795 3312                     l2787 32D2                     l2779 3280  
                   l2971 2EB0                     l2955 2E76                     l2947 2E6E  
                   l2939 2E5E                     l2885 361A                     l2877 35D8  
                   l2869 359A                     l2797 3328                     l2789 32E6  
                   l2981 2ED0                     l2973 2EBE                     l2957 2E78  
                   l2949 2E70                     l2887 3622                     l2879 35E8  
                   l2799 3334                     l2991 2F0A                     l2983 2EE6  
                   l2967 2E90                     l2959 2E7A                     l2889 3644  
                   l2993 2F16                     l2985 2EF8                     l2969 2E94  
                   l2995 2F1C                     l2987 2EFA                     l2979 2ECC  
                   l2997 2F1E                     l2989 2EFC                     l2999 2F22  
                   STR_1 264E                     STR_2 2647                     STR_3 264A  
                   STR_4 264B                     STR_5 2638                     STR_6 2638  
                   STR_7 2649                     STR_8 2643                     STR_9 2636  
                   u2000 2CFE                     u2001 2CFA                     u2010 2D10  
                   u2011 2D0C                     u2020 2D54                     u2100 371C  
                   u2021 2D50                     u2101 3718                     u2030 2D6A  
                   u2110 3754                     u2031 2D66                     u2111 3750  
                   u2040 2D78                     u2120 377E                     u2041 2D74  
                   u2121 377A                     u2050 2DC0                     u2130 3792  
                   u2051 2DBC                     u2131 378E                     u2060 2DD6  
                   u2140 396A                     u2300 33D2                     u2220 32AA  
                   u2061 2DD2                     u2141 3966                     u2301 33CE  
                   u2221 32A6                     u2070 2E14                     u2150 397A  
                   u2310 33FE                     u2230 32BE                     u2071 2E10  
                   u2151 3976                     u2311 33FA                     u2231 32BA  
                   _LATC 0004C0                     u1600 36A0                     u2080 2E52  
                   u2160 399C                     u2400 3554                     u2320 3410  
                   u2240 32D2                     u1601 369C                     u2081 2E4E  
                   u2161 3998                     u2401 3550                     u2321 340C  
                   u2241 32CE                     u2090 3AEC                     u2170 39AC  
                   u2410 3562                     u2330 3430                     u2250 32E6  
                   u2091 3AE8                     u2171 39A8                     u2411 355E  
                   u2331 342C                     u2251 32E2                     u1700 3894  
                   u1620 36DA                     u2180 3914                     u2420 3574  
                   u2340 345C                     u2260 32FA                     u1701 3890  
                   u1621 36D6                     u2181 3910                     u2421 3570  
                   u2341 3458                     u2261 32F6                     u1710 38B2  
                   u1630 36F4                     u2190 3956                     u2430 3586  
                   u2350 347C                     u2270 3312                     u1711 38AE  
                   u1631 36F0                     u2191 3952                     u2431 3582  
                   u2351 3478                     u2271 330E                     u1640 39F4  
                   u1800 2816                     u1720 2678                     u2440 359A  
                   u2360 349C                     u2280 3328                     u2600 2EB0  
                   u1801 2812                     u1721 2674                     u2441 3596  
                   u2361 3498                     u2281 3324                     u2601 2EAC  
                   u1650 3A04                     u1570 3B04                     u1618 36AE  
                   u1810 283E                     u1730 268E                     u2450 35BA  
                   u2370 34BC                     u2290 335E                     u2610 2EE6  
                   u1651 3A00                     u1571 3B00                     u1619 36C2  
                   u1811 283A                     u1731 268A                     u2451 35B6  
                   u2371 34B8                     u2291 335A                     u2611 2EE2  
                   u1660 37DE                     u1580 366A                     u1900 2A66  
                   u1820 28DA                     u1740 26E8                     u2460 35D8  
                   u2380 34D0                     u2700 3132                     u2620 2F5E  
                   u1661 37DA                     u1581 3666                     u1901 2A62  
                   u1821 28D6                     u1741 26E4                     u2461 35D4  
                   u2381 34CC                     u2701 312E                     u2621 2F5A  
                   u1670 3800                     u1910 2A98                     u1830 28EA  
                   u1750 2718                     u2470 361A                     u2390 34F4  
                   u2710 3144                     u2630 30B4                     u1671 37FC  
                   u1647 39EA                     u1831 28E6                     u1751 2714  
                   u2471 3616                     u2391 34F0                     u2711 3140  
                   u2631 30B0                     u1680 3828                     u1920 2ACA  
                   u1840 2900                     u1760 2736                     u2480 3644  
                   u2800 325C                     u2720 3156                     u2640 30C6  
                   _U3ON 001697                     u1681 3824                     u1841 28FC  
                   u1761 2732                     u2481 3640                     u2801 3258  
                   u2721 3152                     u2641 30C2                     u1690 3872  
                   u1930 2ADA                     u1850 2928                     u1770 276C  
                   u2730 3168                     u2650 30D8                     u1691 386E  
                   u1931 2AD6                     u1851 2924                     u1771 2768  
                   u2731 3164                     u2651 30D4                     u1940 2AF4  
                   u1860 29D4                     u1780 27F4                     u2740 317A  
                   u2660 30EA                     u1941 2AF0                     u1917 2A8E  
                   u1861 29D0                     u1781 27F0                     u2741 3176  
                   u2661 30E6                     u1598 3678                     u1950 2B32  
                   u1870 29FE                     u1790 2804                     u2750 319E  
                   u2670 30FC                     u1599 368C                     u1951 2B2E  
                   u1927 2AC0                     u1871 29FA                     u1791 2800  
                   u2751 319A                     u2671 30F8                     u1960 2B9E  
                   u1880 2A1C                     u2760 31B0                     u2680 310E  
                   u1961 2B9A                     u1881 2A18                     u2761 31AC  
                   u2681 310A                     u1970 2BE4                     u1890 2A50  
                   u2770 31C6                     u2690 3120                     u1971 2BE0  
                   u1891 2A4C                     u2771 31C2                     u2691 311C  
                   u1980 2C60                     u2780 31D4                     u1981 2C5C  
                   u2781 31D0                     u1990 2C6E                     u2790 3228  
                   u1991 2C6A                     u2791 3224                     u2957 2EEE  
                   _WPUB 000409                     _WPUC 000411                     _WPUD 000419  
            _xfunc_input 0588                     _main 2E58          __end_of_RES_off 3B36  
                   fsr0h 0004EA                     fsr1h 0004E2                     indf0 0004EF  
                   fsr2h 0004DA                     fsr0l 0004E9                     indf2 0004DF  
                   fsr1l 0004E1                     fsr2l 0004D9                     prodh 0004F4  
                   prodl 0004F3                     start FFFC             ___param_bank 000000  
                  ?_main 0501                    STR_10 2613                    STR_11 263E  
                  STR_12 2623                    STR_14 2601                    STR_16 262E  
        __end_of___lldiv 385C          __end_of___llmod 38E4                    _LATA3 0025F3  
                  _LATA4 0025F4                    _LATA6 0025F6                    _LATE0 002610  
                  _LATE1 002611                    _LATE2 002612                    _U3BRG 0002D4  
                  _U3RXB 0002C7                    _U3TXB 0002C9                    _PORTB 0004CF  
                  _PORTC 0004D0                    _PORTD 0004D1                    _TRISB 0004C7  
                  _TRISC 0004C8                    _TRISD 0004C9                    _WPUA0 002008  
           _xfunc_output 058B                    main@i 0584                    pclath 0004FA  
                  tablat 0004F5                    status 0004D8          __end_of_xprintf 3A7C  
        __initialization 3A12             __end_of_main 326E                   ??_main 057F  
          __activetblptr 000003                ??_RES_off 0501         ___llmod@dividend 0501  
                 _ANSELB 000408                   _ANSELC 000410                   _ANSELD 000418  
                 _U3CON0 0002D1                   _NCO1EN 002237                   _RA3PPS 000204  
                 _RA6PPS 000207                   _U3RXBE 0016B1                   _U3RXEN 00168C  
                 _U3TXBE 0016B5                   _U3TXEN 00168D                   _OSCFRQ 0000B1  
                 _TRISA0 002630                   _TRISA1 002631                   _TRISA2 002632  
                 _TRISA3 002633                   _TRISA4 002634                   _TRISA6 002636  
                 _TRISA7 002637                   _TRISE1 002651                   _TRISE2 002652  
            manualboot@c 057D              manualboot@d 0575              manualboot@n 0577  
       __end_of_end_boot 3B3C         __end_of_get_addr 3B28                   ___wmul 3A7C  
              ??___lldiv 0509                ??___llmod 0509                   _getchr 370C  
                 _getchx 3ADC                   clear_0 3A32                   clear_1 3A44  
       __end_of_peek_ram 3ADC                   isa$std 000001                   _to_hex 3958  
                 _putchx 3AF4                   _xfputc 3656                   _strlen 39C2  
                 _strptr 0594         __end_of_poke_ram 3AC0             __mediumconst 0000  
                 tblptrh 0004F7                   tblptrl 0004F6                   tblptru 0004F8  
       __end_of_ungetchr 3B32                ??_xprintf 0560               __accesstop 0560  
__end_of__initialization 3A4A            ___rparam_used 000001           __pcstackCOMRAM 0501  
           __pidataBANK5 3B36               __pbssBANK5 0588                  ?___wmul 0501  
                ?_getchr 0503                  ?_getchx 0501                  ?_to_hex 0501  
                _ANSELA0 002000                  _ANSELA1 002001                  _ANSELA2 002002  
                _ANSELA3 002003                  _ANSELA4 002004                  _ANSELA6 002006  
                _ANSELA7 002007                  _ANSELE1 002101                  _ANSELE2 002102  
                ?_putchx 0501                  ?_xfputc 0503                  ?_strlen 0501  
                _CLCnCON 0000D6                  _CLCnPOL 0000D7                  _NCO1CLK 000447  
                _NCO1INC 000443                  _NCO1PFM 002230                  _NCO1OUT 002235  
                _U3RXPPS 000276                ?_end_boot 0501                ?_get_addr 0501  
                _RES_off 3B32             manualboot@cc 056D        __end_of_clear_all 3958  
              ?_peek_ram 0501                _CLCIN0PPS 000261                _CLCIN1PPS 000262  
              _CLCIN2PPS 000263                _CLCIN3PPS 000264                  __Hparam 0000  
              _CLCIN6PPS 000267                _CLCIN7PPS 000268                  __Lparam 0000  
              ?_poke_ram 0501                _CLCSELECT 0000D5               _manualboot 326E  
                ___lldiv 37B8                  ___llmod 385C                ?_ungetchr 0501  
           __psmallconst 2600                  __pcinit 3A12                  __ramtop 2600  
                __ptext0 2E58                  __ptext1 3B0A                  __ptext2 326E  
                __ptext3 3B28                  __ptext4 3958                  __ptext5 3AC0  
                __ptext6 370C                  __ptext7 3ADC                  __ptext8 38E4  
                __ptext9 3A50        __end_of_init_boot 3B3A                  _ss_flag 0596  
             ??_end_boot 0501                  getchr@c 0507               ??_get_addr 0503  
   end_of_initialization 3A4A                  _xprintf 3A50               clear_all@i 0564  
             clear_all@p 0566            xvfprintf@func 050E            xvfprintf@prec 054F  
             ??_peek_ram 0503          ___lldiv@divisor 0505          ___lldiv@counter 050D  
           peek_ram@addr 0501               ??_poke_ram 0504                  to_hex@c 0503  
         _manualboot$362 056C                  postdec1 0004E5                  postdec2 0004DD  
                postinc0 0004EE                  postinc2 0004DE                  putchx@c 0501  
             ??_ungetchr 0503                  strlen@a 0503                  strlen@s 0501  
         manualboot@addr 057B        __end_of_xvfprintf 2E58            ?_toggle_Egate 0501  
            ?_manualboot 0501           __end_of___wmul 3AA2           __end_of_getchr 37B8  
         __end_of_getchx 3AF4           __end_of_to_hex 39C2           __end_of_putchx 3B0A  
         __end_of_xfputc 370C           __end_of_strlen 3A12      start_initialization 3A12  
         ??_toggle_Egate 0501            _xvfprintf$275 0539          ___llmod@divisor 0505  
        ___llmod@counter 0509                 ??___wmul 0505                 ??_getchr 0505  
               ??_getchx 0503              __pdataBANK5 05A4                 ??_to_hex 0503  
               ??_putchx 0503                 ??_xfputc 0508                 ??_strlen 0503  
            __pbssBIGRAM 1500            __pcstackBANK5 0560                 ?_RES_off 0501  
              _clear_all 38E4                 ?___lldiv 0501                 ?___llmod 0501  
            __smallconst 2600               monitor@buf 059C                _init_boot 3B38  
               _CLCnGLS0 0000DC                 _CLCnGLS1 0000DD                 _CLCnGLS2 0000DE  
               _CLCnGLS3 0000DF                 _CLCnSEL0 0000D8                 _CLCnSEL1 0000D9  
               _CLCnSEL2 0000DA                 _CLCnSEL3 0000DB                 ?_xprintf 0556  
         ___wmul@product 0505             xvfprintf@arp 0513             xvfprintf@pad 053C  
           xvfprintf@fmt 0511             xvfprintf@str 0519               ?_clear_all 0501  
   __end_of_toggle_Egate 3B1A            manualboot@end 056A            manualboot@max 0571  
          manualboot@min 0573                fp__getchx 0000                main@i_169 0586  
      ___wmul@multiplier 0501            _break_address 0598                fp__putchx 0000  
             ?_init_boot 0501                _xvfprintf 2652                 __Hrparam 0000  
               __Lrparam 0000             ??_manualboot 0568      manualboot@addr_flag 056F  
           monitor@count 058E               xfputc@func 0503                 __ptext10 2652  
               __ptext11 3656                 __ptext20 3B3A                 __ptext12 3AF4  
               __ptext21 3B32                 __ptext13 39C2                 __ptext22 0000  
               __ptext14 3A7C                 __ptext15 385C                 __ptext16 37B8  
               __ptext17 3AA2                 __ptext18 3B38                 __ptext19 3B1A  
               _end_boot 3B3A                 _get_addr 3B1A       __end_of_manualboot 3656  
             ?_xvfprintf 050E             poke_ram@addr 0501                 _peek_ram 3AC0  
              poke_ram@c 0503              xvfprintf@uv 053F              ??_clear_all 0562  
               _poke_ram 3AA2                 _rest_num 0592                 isa$xinst 000000  
               _ungetchr 3B28                 main@addr 0580                ungetchr@c 0501  
            ??_init_boot 0501               xprintf@arp 0560               xprintf@fmt 0556  
              xfputc@chr 0506         ___lldiv@dividend 0501               xvfprintf@c 0555  
             xvfprintf@d 053B               xvfprintf@f 054B               xvfprintf@i 0553  
             xvfprintf@j 0551               xvfprintf@n 0543               xvfprintf@p 0549  
             xvfprintf@r 053D               xvfprintf@v 0545               xvfprintf@w 054D  
       ___lldiv@quotient 0509             _toggle_Egate 3B0A              ??_xvfprintf 0515  
        manualboot@start 0579  
