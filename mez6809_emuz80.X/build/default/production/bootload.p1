Version 4.0 HI-TECH Software Intermediate Code
"12 ./machdep.h
[; ;./machdep.h: 12: extern int getchx(void);
[v _getchx `(i ~T0 @X0 0 ef ]
"35 ./xprintf.h
[; ;./xprintf.h: 35: void xprintf (const char* fmt, ...);
[v _xprintf `(v ~T0 @X0 0 ev`*Cuc ]
"18 ./machdep.h
[; ;./machdep.h: 18: extern void poke_ram(addr_t addr, char c);
[v _poke_ram `(v ~T0 @X0 0 ef2`us`uc ]
"17
[; ;./machdep.h: 17: extern char peek_ram(addr_t addr);
[v _peek_ram `(uc ~T0 @X0 0 ef1`us ]
"28
[; ;./machdep.h: 28: extern int ss_flag;
[v _ss_flag `i ~T0 @X0 0 e ]
"29
[; ;./machdep.h: 29: extern addr_t break_address;
[v _break_address `us ~T0 @X0 0 e ]
"25
[; ;./machdep.h: 25: extern addr_t get_addr(void);
[v _get_addr `(us ~T0 @X0 0 ef ]
"23
[; ;./machdep.h: 23: extern unsigned char get_databus(void);
[v _get_databus `(uc ~T0 @X0 0 ef ]
"26
[; ;./machdep.h: 26: extern int get_rwflag(void);
[v _get_rwflag `(i ~T0 @X0 0 ef ]
"44 ./xprintf.h
[; ;./xprintf.h: 44: int xgets (char* buff, int len, int noecho);
[v _xgets `(i ~T0 @X0 0 ef3`*uc`i`i ]
"24 ./machdep.h
[; ;./machdep.h: 24: extern void put_databus(unsigned char c);
[v _put_databus `(v ~T0 @X0 0 ef1`uc ]
"14 bootload.c
[; ;bootload.c: 14: static int uc = -1;
[v _uc `i ~T0 @X0 1 s ]
[i _uc
-U -> 1 `i
]
"16
[; ;bootload.c: 16: int getchr(void)
[v _getchr `(i ~T0 @X0 1 ef ]
"17
[; ;bootload.c: 17: {
{
[e :U _getchr ]
[f ]
"18
[; ;bootload.c: 18:     static int count = 0;
[v F289 `i ~T0 @X0 1 s count ]
[i F289
-> 0 `i
]
"19
[; ;bootload.c: 19:     int c;
[v _c `i ~T0 @X0 1 a ]
"20
[; ;bootload.c: 20:     if (uc >= 0) {
[e $ ! >= _uc -> 0 `i 3  ]
{
"21
[; ;bootload.c: 21:         c = uc;
[e = _c _uc ]
"22
[; ;bootload.c: 22:         uc = -1;
[e = _uc -U -> 1 `i ]
"23
[; ;bootload.c: 23:         return c;
[e ) _c ]
[e $UE 2  ]
"24
[; ;bootload.c: 24:     }
}
[e :U 3 ]
"25
[; ;bootload.c: 25:     while ((c = getchx()) == '.' && count++ < 2);
[e $U 4  ]
[e :U 5 ]
[e :U 4 ]
[e $ && == -> = _c ( _getchx ..  `ui -> 46 `ui < ++ F289 -> 1 `i -> 2 `i 5  ]
[e :U 6 ]
"26
[; ;bootload.c: 26:     if (c == '.') {
[e $ ! == -> _c `ui -> 46 `ui 7  ]
{
"27
[; ;bootload.c: 27:         count = 0;
[e = F289 -> 0 `i ]
"28
[; ;bootload.c: 28:         return -1;
[e ) -U -> 1 `i ]
[e $UE 2  ]
"29
[; ;bootload.c: 29:     }
}
[e :U 7 ]
"30
[; ;bootload.c: 30:     count = 0;
[e = F289 -> 0 `i ]
"32
[; ;bootload.c: 32:     return c;
[e ) _c ]
[e $UE 2  ]
"33
[; ;bootload.c: 33: }
[e :UE 2 ]
}
"35
[; ;bootload.c: 35: void ungetchr(int c)
[v _ungetchr `(v ~T0 @X0 1 ef1`i ]
"36
[; ;bootload.c: 36: {
{
[e :U _ungetchr ]
"35
[; ;bootload.c: 35: void ungetchr(int c)
[v _c `i ~T0 @X0 1 r1 ]
"36
[; ;bootload.c: 36: {
[f ]
"37
[; ;bootload.c: 37:     uc = c;
[e = _uc _c ]
"38
[; ;bootload.c: 38: }
[e :UE 8 ]
}
"40
[; ;bootload.c: 40: int is_hex(char c)
[v _is_hex `(i ~T0 @X0 1 ef1`uc ]
"41
[; ;bootload.c: 41: {
{
[e :U _is_hex ]
"40
[; ;bootload.c: 40: int is_hex(char c)
[v _c `uc ~T0 @X0 1 r1 ]
"41
[; ;bootload.c: 41: {
[f ]
"42
[; ;bootload.c: 42:     if ('0' <= c && c <= '9')
[e $ ! && <= -> 48 `ui -> _c `ui <= -> _c `ui -> 57 `ui 10  ]
"43
[; ;bootload.c: 43:         return !0;
[e ) -> ! != -> 0 `i -> 0 `i `i ]
[e $UE 9  ]
[e :U 10 ]
"44
[; ;bootload.c: 44:     c &= ~0x20;
[e =& _c -> ~ -> 32 `i `uc ]
"45
[; ;bootload.c: 45:     return ('A' <= c && c <= 'F');
[e ) -> && <= -> 65 `ui -> _c `ui <= -> _c `ui -> 70 `ui `i ]
[e $UE 9  ]
"46
[; ;bootload.c: 46: }
[e :UE 9 ]
}
"48
[; ;bootload.c: 48: int to_hex(char c)
[v _to_hex `(i ~T0 @X0 1 ef1`uc ]
"49
[; ;bootload.c: 49: {
{
[e :U _to_hex ]
"48
[; ;bootload.c: 48: int to_hex(char c)
[v _c `uc ~T0 @X0 1 r1 ]
"49
[; ;bootload.c: 49: {
[f ]
"51
[; ;bootload.c: 51:     if ('0' <= c && c <= '9')
[e $ ! && <= -> 48 `ui -> _c `ui <= -> _c `ui -> 57 `ui 12  ]
"52
[; ;bootload.c: 52:         return c - '0';
[e ) -> - -> _c `ui -> 48 `ui `i ]
[e $UE 11  ]
[e :U 12 ]
"53
[; ;bootload.c: 53:     c &= ~0x20;
[e =& _c -> ~ -> 32 `i `uc ]
"54
[; ;bootload.c: 54:     if ('A' <= c && c <= 'F')
[e $ ! && <= -> 65 `ui -> _c `ui <= -> _c `ui -> 70 `ui 13  ]
"55
[; ;bootload.c: 55:         return c - 'A' + 10;
[e ) -> + - -> _c `ui -> 65 `ui -> -> 10 `i `ui `i ]
[e $UE 11  ]
[e :U 13 ]
"56
[; ;bootload.c: 56:     return -1;
[e ) -U -> 1 `i ]
[e $UE 11  ]
"57
[; ;bootload.c: 57: }
[e :UE 11 ]
}
"59
[; ;bootload.c: 59: void clear_all(void)
[v _clear_all `(v ~T0 @X0 1 ef ]
"60
[; ;bootload.c: 60: {
{
[e :U _clear_all ]
[f ]
"61
[; ;bootload.c: 61:     addr_t p = 0;
[v _p `us ~T0 @X0 1 a ]
[e = _p -> -> 0 `i `us ]
"62
[; ;bootload.c: 62:     int i = 0;
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
"63
[; ;bootload.c: 63:     do {
[e :U 17 ]
{
"64
[; ;bootload.c: 64:         if ((p & 0xfff) == 0) {
[e $ ! == & -> _p `ui -> -> 4095 `i `ui -> -> 0 `i `ui 18  ]
{
"65
[; ;bootload.c: 65:             xprintf("%X", i++);
[e ( _xprintf , (. :s 1C ++ _i -> 1 `i ]
"66
[; ;bootload.c: 66:         }
}
[e :U 18 ]
"67
[; ;bootload.c: 67:         poke_ram(p, 0);
[e ( _poke_ram (2 , _p -> -> 0 `i `uc ]
"68
[; ;bootload.c: 68:     } while (p++ != 0xffff);
}
[e $ != -> ++ _p -> -> 1 `i `us `ui -> 65535 `ui 17  ]
[e :U 16 ]
"69
[; ;bootload.c: 69: }
[e :UE 14 ]
}
"71
[; ;bootload.c: 71: void manualboot(void)
[v _manualboot `(v ~T0 @X0 1 ef ]
"72
[; ;bootload.c: 72: {
{
[e :U _manualboot ]
[f ]
"73
[; ;bootload.c: 73:     int c, cc, d, n, count;
[v _c `i ~T0 @X0 1 a ]
[v _cc `i ~T0 @X0 1 a ]
[v _d `i ~T0 @X0 1 a ]
[v _n `i ~T0 @X0 1 a ]
[v _count `i ~T0 @X0 1 a ]
"74
[; ;bootload.c: 74:     addr_t addr = 0, max = 0, min = ((addr_t)0xF000) + ((addr_t)0x1000) - 1;
[v _addr `us ~T0 @X0 1 a ]
[e = _addr -> -> 0 `i `us ]
[v _max `us ~T0 @X0 1 a ]
[e = _max -> -> 0 `i `us ]
[v _min `us ~T0 @X0 1 a ]
[e = _min -> - + -> -> -> 61440 `ui `us `ui -> -> -> 4096 `i `us `ui -> -> 1 `i `ui `us ]
"75
[; ;bootload.c: 75:     int addr_flag = 0;
[v _addr_flag `i ~T0 @X0 1 a ]
[e = _addr_flag -> 0 `i ]
"77
[; ;bootload.c: 77:     while (1) {
[e :U 21 ]
{
"78
[; ;bootload.c: 78:         while ((c = getchr()) == ' ' || c == '\t' || c == '\n' || c == '\r')
[e $U 23  ]
[e :U 24 ]
"79
[; ;bootload.c: 79:             ;
[e :U 23 ]
"78
[; ;bootload.c: 78:         while ((c = getchr()) == ' ' || c == '\t' || c == '\n' || c == '\r')
[e $ || || || == -> = _c ( _getchr ..  `ui -> 32 `ui == -> _c `ui -> 9 `ui == -> _c `ui -> 10 `ui == -> _c `ui -> 13 `ui 24  ]
[e :U 25 ]
"80
[; ;bootload.c: 80:         if (c == -1)
[e $ ! == _c -U -> 1 `i 26  ]
"81
[; ;bootload.c: 81:             break;
[e $U 22  ]
[e :U 26 ]
"82
[; ;bootload.c: 82:         if (c == '!' && min < max) {
[e $ ! && == -> _c `ui -> 33 `ui < -> _min `ui -> _max `ui 27  ]
{
"84
[; ;bootload.c: 84:             addr_t start, end;
[v _start `us ~T0 @X0 1 a ]
[v _end `us ~T0 @X0 1 a ]
"85
[; ;bootload.c: 85:             start = min & 0xfff0;
[e = _start -> & -> _min `ui -> 65520 `ui `us ]
"86
[; ;bootload.c: 86:             end = max;
[e = _end _max ]
"89
[; ;bootload.c: 89:             while (start < end) {
[e $U 28  ]
[e :U 29 ]
{
"90
[; ;bootload.c: 90:                 if ((start & 0xf) == 0) {
[e $ ! == & -> _start `ui -> -> 15 `i `ui -> -> 0 `i `ui 31  ]
{
"91
[; ;bootload.c: 91:                     xprintf("%04X ", start);
[e ( _xprintf , (. :s 2C -> _start `ui ]
"92
[; ;bootload.c: 92:                 }
}
[e :U 31 ]
"93
[; ;bootload.c: 93:                 d = ((unsigned short)peek_ram(start))<<8;
[e = _d -> << -> -> ( _peek_ram (1 _start `us `ui -> 8 `i `i ]
"94
[; ;bootload.c: 94:                 d |= peek_ram(start + 1);
[e =| _d -> ( _peek_ram (1 -> + -> _start `ui -> -> 1 `i `ui `us `i ]
"95
[; ;bootload.c: 95:                 xprintf("%04X ", d);
[e ( _xprintf , (. :s 3C _d ]
"96
[; ;bootload.c: 96:                 if ((start & 0xf) == 0xe) {
[e $ ! == & -> _start `ui -> -> 15 `i `ui -> -> 14 `i `ui 32  ]
{
"97
[; ;bootload.c: 97:                     xprintf("\n");
[e ( _xprintf :s 4C ]
"98
[; ;bootload.c: 98:                 }
}
[e :U 32 ]
"99
[; ;bootload.c: 99:                 start += 2;
[e =+ _start -> -> 2 `i `us ]
"100
[; ;bootload.c: 100:             }
}
[e :U 28 ]
"89
[; ;bootload.c: 89:             while (start < end) {
[e $ < -> _start `ui -> _end `ui 29  ]
[e :U 30 ]
"101
[; ;bootload.c: 101:             if (ss_flag)
[e $ ! != _ss_flag -> 0 `i 33  ]
"102
[; ;bootload.c: 102:                 xprintf("ss ");
[e ( _xprintf :s 5C ]
[e :U 33 ]
"103
[; ;bootload.c: 103:             if (break_address)
[e $ ! != -> _break_address `ui -> -> 0 `i `ui 34  ]
"104
[; ;bootload.c: 104:                 xprintf("%%%04X ", break_address);
[e ( _xprintf , (. :s 6C -> _break_address `ui ]
[e :U 34 ]
"105
[; ;bootload.c: 105:             continue;
[e $U 20  ]
"106
[; ;bootload.c: 106:         }
}
[e :U 27 ]
"107
[; ;bootload.c: 107:         if (c == 's') {
[e $ ! == -> _c `ui -> 115 `ui 35  ]
{
"108
[; ;bootload.c: 108:             ss_flag = 1;
[e = _ss_flag -> 1 `i ]
"109
[; ;bootload.c: 109:             break;
[e $U 22  ]
"110
[; ;bootload.c: 110:         }
}
[e :U 35 ]
"111
[; ;bootload.c: 111:         if (c == 'g') {
[e $ ! == -> _c `ui -> 103 `ui 36  ]
{
"112
[; ;bootload.c: 112:             ss_flag = 0;
[e = _ss_flag -> 0 `i ]
"113
[; ;bootload.c: 113:             break;
[e $U 22  ]
"114
[; ;bootload.c: 114:         }
}
[e :U 36 ]
"115
[; ;bootload.c: 115:         if (c == ',') {
[e $ ! == -> _c `ui -> 44 `ui 37  ]
{
"116
[; ;bootload.c: 116:             clear_all();
[e ( _clear_all ..  ]
"117
[; ;bootload.c: 117:             continue;
[e $U 20  ]
"118
[; ;bootload.c: 118:         }
}
[e :U 37 ]
"119
[; ;bootload.c: 119:         addr_flag = ((c == '=') || (c == '%'));
[e = _addr_flag -> || == -> _c `ui -> 61 `ui == -> _c `ui -> 37 `ui `i ]
"120
[; ;bootload.c: 120:         cc = c;
[e = _cc _c ]
"122
[; ;bootload.c: 122:         if (!addr_flag)
[e $ ! ! != _addr_flag -> 0 `i 38  ]
"123
[; ;bootload.c: 123:             ungetchr(c);
[e ( _ungetchr (1 _c ]
[e :U 38 ]
"125
[; ;bootload.c: 125:         n = 0;
[e = _n -> 0 `i ]
"126
[; ;bootload.c: 126:         while ((d = to_hex((unsigned char)(c = getchr()))) >= 0) {
[e $U 39  ]
[e :U 40 ]
{
"127
[; ;bootload.c: 127:             n *= 16; n += d;
[e =* _n -> 16 `i ]
[e =+ _n _d ]
"129
[; ;bootload.c: 129:         }
}
[e :U 39 ]
"126
[; ;bootload.c: 126:         while ((d = to_hex((unsigned char)(c = getchr()))) >= 0) {
[e $ >= = _d ( _to_hex (1 -> -> = _c ( _getchr ..  `uc `uc -> 0 `i 40  ]
[e :U 41 ]
"131
[; ;bootload.c: 131:         if (c < 0)
[e $ ! < _c -> 0 `i 42  ]
"132
[; ;bootload.c: 132:             break;
[e $U 22  ]
[e :U 42 ]
"133
[; ;bootload.c: 133:         if (d < 0) {
[e $ ! < _d -> 0 `i 43  ]
{
"134
[; ;bootload.c: 134:             if (addr_flag) {
[e $ ! != _addr_flag -> 0 `i 44  ]
{
"135
[; ;bootload.c: 135:                 if (cc == '=')
[e $ ! == -> _cc `ui -> 61 `ui 45  ]
"136
[; ;bootload.c: 136:                     addr = (addr_t)n;
[e = _addr -> _n `us ]
[e $U 46  ]
"137
[; ;bootload.c: 137:                 else if (cc == '%')
[e :U 45 ]
[e $ ! == -> _cc `ui -> 37 `ui 47  ]
"138
[; ;bootload.c: 138:                     break_address = (addr_t)n;
[e = _break_address -> _n `us ]
[e :U 47 ]
[e :U 46 ]
"139
[; ;bootload.c: 139:             } else {
}
[e $U 48  ]
[e :U 44 ]
{
"140
[; ;bootload.c: 140:                 if (((addr_t)0xF000) <= addr && addr <= (((addr_t)0xF000) + ((addr_t)0x1000) - 1)) {
[e $ ! && <= -> -> -> 61440 `ui `us `ui -> _addr `ui <= -> _addr `ui - + -> -> -> 61440 `ui `us `ui -> -> -> 4096 `i `us `ui -> -> 1 `i `ui 49  ]
{
"142
[; ;bootload.c: 142:                     poke_ram(addr++, ((n>>8) & 0xff));
[e ( _poke_ram (2 , ++ _addr -> -> 1 `i `us -> & >> _n -> 8 `i -> 255 `i `uc ]
"143
[; ;bootload.c: 143:                     poke_ram(addr++, (n & 0xff));
[e ( _poke_ram (2 , ++ _addr -> -> 1 `i `us -> & _n -> 255 `i `uc ]
"144
[; ;bootload.c: 144:                     if (max < addr)
[e $ ! < -> _max `ui -> _addr `ui 50  ]
"145
[; ;bootload.c: 145:                         max = addr;
[e = _max _addr ]
[e :U 50 ]
"146
[; ;bootload.c: 146:                     if (addr - 2 < min)
[e $ ! < - -> _addr `ui -> -> 2 `i `ui -> _min `ui 51  ]
"147
[; ;bootload.c: 147:                         min = addr - 2;
[e = _min -> - -> _addr `ui -> -> 2 `i `ui `us ]
[e :U 51 ]
"148
[; ;bootload.c: 148:                 }
}
[e :U 49 ]
"149
[; ;bootload.c: 149:             }
}
[e :U 48 ]
"150
[; ;bootload.c: 150:             continue;
[e $U 20  ]
"151
[; ;bootload.c: 151:         }
}
[e :U 43 ]
"152
[; ;bootload.c: 152:     }
}
[e :U 20 ]
[e $U 21  ]
[e :U 22 ]
"153
[; ;bootload.c: 153: }
[e :UE 19 ]
}
"161
[; ;bootload.c: 161: void monitor(int monitor_mode)
[v _monitor `(v ~T0 @X0 1 ef1`i ]
"162
[; ;bootload.c: 162: {
{
[e :U _monitor ]
"161
[; ;bootload.c: 161: void monitor(int monitor_mode)
[v _monitor_mode `i ~T0 @X0 1 r1 ]
"162
[; ;bootload.c: 162: {
[f ]
"163
[; ;bootload.c: 163:     static int count = 0;
[v F314 `i ~T0 @X0 1 s count ]
[i F314
-> 0 `i
]
"164
[; ;bootload.c: 164:     static char buf[8];
[v F315 `uc ~T0 @X0 -> 8 `i s buf ]
"165
[; ;bootload.c: 165:     int c, d;
[v _c `i ~T0 @X0 1 a ]
[v _d `i ~T0 @X0 1 a ]
"166
[; ;bootload.c: 166:     unsigned long addr = get_addr();
[v _addr `ul ~T0 @X0 1 a ]
[e = _addr -> ( _get_addr ..  `ul ]
"168
[; ;bootload.c: 168:     xprintf("|%05lX %02X %c ", addr, get_databus(), (get_rwflag() ? 'R' : 'W'));
[e ( _xprintf , , , (. :s 7C _addr -> ( _get_databus ..  `i ? != ( _get_rwflag ..  -> 0 `i : -> 82 `ui -> 87 `ui ]
"170
[; ;bootload.c: 170:     if (monitor_mode == 2) {
[e $ ! == _monitor_mode -> 2 `i 53  ]
{
"171
[; ;bootload.c: 171:         xprintf(" IN>");
[e ( _xprintf :s 8C ]
"172
[; ;bootload.c: 172:         xgets(buf, 7, 0);
[e ( _xgets (3 , , &U F315 -> 7 `i -> 0 `i ]
"173
[; ;bootload.c: 173:         int i = 0, n = 0;
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[v _n `i ~T0 @X0 1 a ]
[e = _n -> 0 `i ]
"174
[; ;bootload.c: 174:         while (i < 8 && (c = buf[i++]) && (d = to_hex((unsigned char)c)) >= 0) {
[e $U 54  ]
[e :U 55 ]
{
"175
[; ;bootload.c: 175:             n *= 16; n += d;
[e =* _n -> 16 `i ]
[e =+ _n _d ]
"177
[; ;bootload.c: 177:         }
}
[e :U 54 ]
"174
[; ;bootload.c: 174:         while (i < 8 && (c = buf[i++]) && (d = to_hex((unsigned char)c)) >= 0) {
[e $ && && < _i -> 8 `i != = _c -> *U + &U F315 * -> -> ++ _i -> 1 `i `ui `ux -> -> # *U &U F315 `ui `ux `i -> 0 `i >= = _d ( _to_hex (1 -> -> _c `uc `uc -> 0 `i 55  ]
[e :U 56 ]
"178
[; ;bootload.c: 178:         put_databus((unsigned char)n);
[e ( _put_databus (1 -> _n `uc ]
"179
[; ;bootload.c: 179:     } else {
}
[e $U 57  ]
[e :U 53 ]
{
"180
[; ;bootload.c: 180:         if (monitor_mode == 1) {
[e $ ! == _monitor_mode -> 1 `i 58  ]
{
"181
[; ;bootload.c: 181:             xprintf(" OUT: %02x", (int)get_databus());
[e ( _xprintf , (. :s 9C -> ( _get_databus ..  `i ]
"182
[; ;bootload.c: 182:         }
}
[e :U 58 ]
"189
[; ;bootload.c: 189:         xprintf("\n");
[e ( _xprintf :s 10C ]
"190
[; ;bootload.c: 190:     }
}
[e :U 57 ]
"191
[; ;bootload.c: 191: }
[e :UE 52 ]
}
"193
[; ;bootload.c: 193: void march_test(void)
[v _march_test `(v ~T0 @X0 1 ef ]
"194
[; ;bootload.c: 194: {
{
[e :U _march_test ]
[f ]
"195
[; ;bootload.c: 195:     addr_t p, last = 0xffff;
[v _p `us ~T0 @X0 1 a ]
[v _last `us ~T0 @X0 1 a ]
[e = _last -> -> 65535 `ui `us ]
"196
[; ;bootload.c: 196:     int n = 0;
[v _n `i ~T0 @X0 1 a ]
[e = _n -> 0 `i ]
"197
[; ;bootload.c: 197:     p = 0;
[e = _p -> -> 0 `i `us ]
"198
[; ;bootload.c: 198:     do {
[e :U 62 ]
{
"199
[; ;bootload.c: 199:         poke_ram(p, 0);
[e ( _poke_ram (2 , _p -> -> 0 `i `uc ]
"200
[; ;bootload.c: 200:     } while (p++ != last);
}
[e $ != -> ++ _p -> -> 1 `i `us `ui -> _last `ui 62  ]
[e :U 61 ]
"201
[; ;bootload.c: 201:     n++;
[e ++ _n -> 1 `i ]
"202
[; ;bootload.c: 202:     p = 0;
[e = _p -> -> 0 `i `us ]
"203
[; ;bootload.c: 203:     do {
[e :U 65 ]
{
"204
[; ;bootload.c: 204:         if (peek_ram(p) == 0)
[e $ ! == -> ( _peek_ram (1 _p `i -> 0 `i 66  ]
"205
[; ;bootload.c: 205:             poke_ram(p, 1);
[e ( _poke_ram (2 , _p -> -> 1 `i `uc ]
[e $U 67  ]
"206
[; ;bootload.c: 206:         else {
[e :U 66 ]
{
"207
[; ;bootload.c: 207:             xprintf("%d: fail at %04X\n", n, p);
[e ( _xprintf , , (. :s 11C _n -> _p `ui ]
"208
[; ;bootload.c: 208:             return;
[e $UE 59  ]
"209
[; ;bootload.c: 209:         }
}
[e :U 67 ]
"210
[; ;bootload.c: 210:     } while (p++ != last);
}
[e $ != -> ++ _p -> -> 1 `i `us `ui -> _last `ui 65  ]
[e :U 64 ]
"211
[; ;bootload.c: 211:     n++;
[e ++ _n -> 1 `i ]
"212
[; ;bootload.c: 212:     p = last;
[e = _p _last ]
"213
[; ;bootload.c: 213:     do {
[e :U 70 ]
{
"214
[; ;bootload.c: 214:         if (peek_ram(p) == 0)
[e $ ! == -> ( _peek_ram (1 _p `i -> 0 `i 71  ]
"215
[; ;bootload.c: 215:             poke_ram(p, 1);
[e ( _poke_ram (2 , _p -> -> 1 `i `uc ]
[e $U 72  ]
"216
[; ;bootload.c: 216:         else {
[e :U 71 ]
{
"217
[; ;bootload.c: 217:             xprintf("%d: fail at %04X\n", n, p);
[e ( _xprintf , , (. :s 12C _n -> _p `ui ]
"218
[; ;bootload.c: 218:             return;
[e $UE 59  ]
"219
[; ;bootload.c: 219:         }
}
[e :U 72 ]
"220
[; ;bootload.c: 220:     } while (p-- != 0);
}
[e $ != -> -- _p -> -> 1 `i `us `ui -> -> 0 `i `ui 70  ]
[e :U 69 ]
"221
[; ;bootload.c: 221:     n++;
[e ++ _n -> 1 `i ]
"222
[; ;bootload.c: 222:     p = last;
[e = _p _last ]
"223
[; ;bootload.c: 223:     do {
[e :U 75 ]
{
"224
[; ;bootload.c: 224:         if (peek_ram(p) == 1)
[e $ ! == -> ( _peek_ram (1 _p `i -> 1 `i 76  ]
"225
[; ;bootload.c: 225:             poke_ram(p, 0);
[e ( _poke_ram (2 , _p -> -> 0 `i `uc ]
[e $U 77  ]
"226
[; ;bootload.c: 226:         else {
[e :U 76 ]
{
"227
[; ;bootload.c: 227:             goto error;
[e $U 78  ]
"228
[; ;bootload.c: 228:         }
}
[e :U 77 ]
"229
[; ;bootload.c: 229:     } while (p-- != 0);
}
[e $ != -> -- _p -> -> 1 `i `us `ui -> -> 0 `i `ui 75  ]
[e :U 74 ]
"230
[; ;bootload.c: 230:     xprintf("all ok\n");
[e ( _xprintf :s 13C ]
"231
[; ;bootload.c: 231:     return;
[e $UE 59  ]
"232
[; ;bootload.c: 232: error:
[e :U 78 ]
"233
[; ;bootload.c: 233:     xprintf("%d: fail at %04X\n", n, p);
[e ( _xprintf , , (. :s 14C _n -> _p `ui ]
"234
[; ;bootload.c: 234:     return;
[e $UE 59  ]
"235
[; ;bootload.c: 235: }
[e :UE 59 ]
}
[a 9C 32 79 85 84 58 32 37 48 50 120 0 ]
[a 1C 37 88 0 ]
[a 8C 32 73 78 62 0 ]
[a 5C 115 115 32 0 ]
[a 7C 124 37 48 53 108 88 32 37 48 50 88 32 37 99 32 0 ]
[a 6C 37 37 37 48 52 88 32 0 ]
[a 2C 37 48 52 88 32 0 ]
[a 3C 37 48 52 88 32 0 ]
[a 13C 97 108 108 32 111 107 10 0 ]
[a 11C 37 100 58 32 102 97 105 108 32 97 116 32 37 48 52 88 10 0 ]
[a 12C 37 100 58 32 102 97 105 108 32 97 116 32 37 48 52 88 10 0 ]
[a 14C 37 100 58 32 102 97 105 108 32 97 116 32 37 48 52 88 10 0 ]
[a 4C 10 0 ]
[a 10C 10 0 ]
